node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\000@@\000\000@@\000\000@@\000\000\200@\000\000\340@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\340@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000`@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000 @\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\200@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000@@\315\314\214?\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\300@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000@@\000\000\200@\000\000\000@\000\000\300?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000\200@\000\000@@\000\000\200?\000\000\200@\000\000\200?\000\000\340@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000 @\000\000\200?\000\000\200@\000\000\200?\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\300@\000\000\240@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000 @\000\000\300?\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\240@\000\000\200?\000\000@@\000\000 @\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000 @\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\340@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000 @\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\300@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000\200?\000\000\000@\000\000\200?\000\000\200@\000\000\200?\000\000\200?\000\000\200@\000\000\300@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000\000A\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\240@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\240@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\240@\000\000@@\000\000\000@\000\000@@\000\000\240@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200?\000\000\200@\000\000\200?\000\000\000@\000\000 @\000\000 @\000\000\240@\000\000@@\000\000\200?\000\000\240@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000 @\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000```@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\240@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\340?\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000\200?\000\000\200?\000\000\000@\000\000\000A\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000 @\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000A\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000 @\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000 @\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000@@\000\000 @\000\000@@\000\000\000@\000\000\200@\000\000\300@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\240@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000\000@\000\000\220@\000\000 @\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000 @\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000```
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\340\037E\0000\024E\000\200\rE\000\340\332D\000\270\316E\000@\216D\000 \332D\000\300\tE\000\300GD\000PgE\000@\314D\000 \304D\000\300\257D\000\340\347D\000\030\363E\0000=E\000\200\205D\000\340\001E\000`\270D\000\200\215D\000\320(E\000 \300D\000 \323D\000\200SD\000 \240D\000\000\300D\000\0002E\000\000\252D\000\300\017E\000\200\212D\000\300aD\000 \024E\000`\016E\000\300GD\000@\222E\000 \216D\000@\276D\000\340\340D\000@\262D\000\240\224D\000\200\177D\000\300\276D\000\000\254D\000 \213D\000\300\330D\000\000\303D\000\340\344D\000 \301D\000\300dD\000\300\273D\000@\222D\000@{D\000@\366D\000\200\004E\000@\247D\000\340\000E\000\300\303D\000\340\320D\00009E\000\200\336D\000\240\'E\000 KE\0000@E\000\3009D\000\260\026E\000p#E\000\300\207D\000\000\201D\000\200\210D\000@\035E\000`\247D\000\300$E\000\360;E\000 \365D\000@\264D\000@\242D\000 \tE\000\200,D\000@\213D\000\260 E\000\300sD\000 SE\000@\003E\000\000\315D\000@rD\000\240\205D\000\340\264D\000\240\013E\000@\364D\000\200\324D\000\300\030E\000\240\221D\000\300\224D\000\300\022E\000@\221D\000X\341E\000\200\223D\000\000pD\000\000\326D\000\360\036E\000`\334D\000\240\233D\000\240\214E\000\200\320D\000@\215E\000\200\261D\000\300aD\000@\005D\000\200\205D\000\200\273D\000@\215D\0000cE\000\020\005E\000\000\202E\000\000\264D\000\340{E\000@\203E\000\340\354D\000\200+D\000PWE\000\300FD\000\370\272E\000@\315D\000\240\277D\000\020OE\000\200\036D\000\200HD\000@\257D\000\320(E\000@\365D\000@\372D\000\000\253D\000\300\375D\000\200KD\000\340\227D\000\200\261D\000\260:E\000p,E\000\340\331D\000 \017E\000\320\000E\000\340\246D\000\000WD\000`\340D\000\240\262D\000@\276D\000\000\310D\000\240\344D\000\200\254D\000\200\016E\000`\327D\000\000?D\000@1E\000\300\246D\000\200\341D\000\000\202D\000\320OE\000\2001D\000`\227D\000\300\250D\000@\336D\000\240\330D\000@\264D\000\000\344D\000\340\017E\000\300\nD\000\000\372D\000\320:E\000\200\013E\000\340\260D\000@\317D\000\240WE\000\0008D\000\200!E\000\370\210E\000\200RE\000\000 E\000\300\215D\000 \344D\000@\353D\000\340\036E\000\300\024D\000\000\346D\000\000HD\000 \325D\000\340\246D\000`\270D\000p,E\000\000SD\000\200\214D\000@FD\000\2006D\000@\234D\000\000\377D\000\340\246D\000\260\250E\000`\006E\000\200(D\000\220\023E\000\240\002E\000\340sE\000\300ED\000\240\341D\000\000\351D\000\000\340D\000\340\rE\000`HE\000\240\302D\000\200\224D\000\200}D\000\320\001E\000\300\307D\000\020\037E\000\240\034E\000 @E\000\300\364D\000@\305D\000\340\200D\000p\301E\000\220\nE\000\200\277D\000@\347D\000 \005E\000\300\277D\000@\320D\000\200\305D\000\000\217D\000\300\026E\000\300\243D\000\200\242D\000\000zD\000\320\032E\000\200\360D\000\300\300D\000\240\200D\000\340\250D\000@\220D\000@\027E\000\340\224D\000\260gE\000\300[D\000\300\300D\000\000\364D\000\000\023E\000\200\272D\000\300\331D\000\000\310D\000\200\213D\000\300\020E\000\300\305D\000@\261D\000`;E\000\340\027E\000\020\032E\000`iE\000`\243D\000@\033E\000\340\254D\000\240\322D\000\200\250D\000\000\216D\000\240\261D\000@\256D\000\000zE\000\200;E\000@\253D\000\240\301D\000\300\231D\000@&E\000\200mD\000\000WD\000@\302D\000\300\rD\000@\260D\000\0006D\000\200hD\000@\300D\000\200\374D\000`\021E\000\3405E\000p\016E\000`)E\000\3206E\000`\341D\000\000\300D\000\200;E\000\200@D\000\200\355D\000\340\212D\000@\302D\000 \221D\000\300\034E\000\340\306D\000h\207E\000\000\247D\000p\000E\000\000pD\000p\024E\000\000\177D\000@:D\000\360WE\000P\237E\000 \035E\000\000\254D\000 \200E\000\000@D\000\200\317D\000 >E\000\200\273D\000P\022E\000\000\"D\000@\233D\000\240\267D\000\200\202D\000@\367D\000\240\263D\000\000bD\000@\234E\000\000\231D\000\300\267D\000\000\256D\000\340\234D\000\260\nE\000\300CD\000\220uE\000\200dD\0000iE\000\240\231D\000@\260D\000\000\200D\000\230\204E\000\220\037E\000 \003E\000\200\350D\000\220\005E\000\000\016E\000\200\230D\000\000/D\000 \322D\000p[E\000\340\276D\000\000cD\000\000aD\000\300\236D\000\000\226D\000\340\316D\000\340\227D\000\320\031E\000\000\214D\000\200\"E\000`\353D\000\000yD\000\000\223D\000 \356D\000`\206E\000\200\"D\000 \243D\000\000jD\000@\203D\000\360hE\000\300\241D\000\200\202D\000\200ID\000\200\273D\0000\242E\000\000\307D\000\200\271D\000p\031E\000\220FE\000\240\245D\000\300[E\000\300\245D\000\240\274D\000\200\035D\000\340\024E\000\200\027D\000\200\276D\000p\024E\000\340\323D\000p\237E\000\000\013E\000\200\324D\0008\222E\000P\rE\000\200\212D\000\000\310D\000\300\364D\000`\212D\000 \314D\000\300<E\000\000\276D\000\320\033E\000\300\326D\000\200rD\000\340\227D\000\200\203D\000@\330D\000\340\017E\000\200(D\000\240\275D\000\340\027E\000\200sD\000\260\002E\000\300\300D\000`\237D\000@-D\000`\206D\000\300\000E\000P\003E\000\000\221D\000\200\323D\000@\267D\000\240\033E\000\000AD\000\200\225D\000\300bD\000\000\216D\000\200\014E\000\240$E\000\300AE\000\200\300D\000\000\244D\000\350\214E\000\200\227D\000\200\"D\000\000/D\000\200\353D\000`\276D\000 \311D\000\300\277D\000\020:E\000\360\036E\000\000\354D\000@\\E\000\000\245D\000 \332D\000\340\335D\000\000\347D\000\000\033E\000\340\036E\000`\334D\000\300\031E\000@\034E\000\220eE\000\300\337D\000\260\006E\000\300(D\000\000\214D\000@\235D\000\220\rE\000P\023E\000\340KE\000`\253D\000\260\034E\000\000\245D\000\200\036E\000PhE\000\200\311D\000\200\224E\000@\350D\000\000\221D\0000\213E\000\000\034E\000\200\275D\000\340\014E\000\020\003E\000\340\302D\000\300\214D\000\240\334D\000`\252D\000\000\225D\000@\303D\000P;E\000\000\326D\000 \221E\000\300\017E\000\000\203D\000@\003E\000@\246D\000\340\010E\000\200\236D\000 )E\000\360uE\000\300\320D\000\200PD\000\200.E\000\300\254D\000\340\024E\000\240\007E\000\220\251E\000\200\257D\000\300\203D\000\300\020E\000\000\232D\000\200jD\000P\025E\000pCE\000 \244D\000\300\304D\000\020GF\000\000\207D\000\200\212D\000\340\375D\000\300\007E\000\240\320D\000 \322D\000\300\\D\000@\305D\000\340\022E\000 \252D\000\340\234D\000\000\nE\000\200\222D\000\300\207D\000\000`D\000\300\325D\000\000tD\000\340!E\000\020\205E\000`\013E\000P\034E\000\300\306D\000@\222D\000\200JE\000\200\246D\000\300\211D\000\340\013E\000@\257D\000\340\005E\000\220(E\000`\255D\000`\357D\000 \273D\000@\222D\000\360=E\000\000\231D\000 \314D\000\360\002E\000\000\240D\000`oE\000 mE\000@\263D\000\200\301D\000\300\351D\000\350\246E\000@\260D\000\340\017E\000 \230D\000@6E\000`\256D\000\200tE\000\300\260D\000 \211D\000\240hE\000\000\320D\000\240\002E\000\000zD\000\240\022E\000\000[E\000\200NE\000P\007E\000\340\nE\000\200\300D\000\340\241D\000@\373D\000\300\017D\000\000\265D\000\000\332D\000\300\211D\000\300\370D\0000LE\000\300\023E\000\340\022E\000`\360D\000\000\200D\000\240\246D\000\3609E\000\200\314D\000\200\tE\000`\332D\000\340\310D\000@\255D\000\200\242D\000 \373D\000\200`D\000`!E\000\000\250D\000@\323D\000\200\230D\000\340\201D\000\300\270E\000\340\346D\000\000\344D\000`\331D\000\000\007E\000\200mD\000\300\"D\000@\200D\000\000\243D\000@\027E\000@\241D\000 ?E\000\200\305D\000\200]D\000`\301D\000\200@D\000\020[E\000\340\353D\000@\232D\000@\036E\000\000\303D\000\020\025E\000\260eE\000\200hD\000\2004D\000\200QD\000\200\234D\000p\016E\000\340\006E\000`\337D\000\200\241D\000`\333D\000\000%E\000\240\223D\000@iD\000@\201D\000\000\240D\000\240\nE\000\260ME\000\240\347D\000\000XD\000\320YE\000\000ND\000\300\315D\000\000\275D\000@\366D\000\000|D\000@\241D\000p%E\000`\344D\000@&E\000\300\210D\000\000\326D\000`\271D\000\200\"E\000\200\311D\000\000\276D\000\300YD\000\300\367D\000\240\367D\000`\006E\000\240\327D\000@\007E\000\320\233E\000\200\216D\000\260\037E\000\020\213E\000\000\346D\000\340\352D\000 \215D\000@\244D\000\300\310D\000\000_D\000\250\226E\000\000aE\000`\223D\000 TE\000@\326D\000\240\023E\000\000\021E\000\300\333D\000\200\257D\000`\316D\000`\231D\000\200OE\000 )E\000\340\236D\000\000_D\000@\032E\000\200\332D\000\300\360D\000\200\346D\000`\243D\000\000\007D\000\000\332D\000\340\303D\000\200,D\000\2204E\000\300+E\000 \263D\000\000\355D\000\200\253D\000\340\372D\000\000_D\000\320wE\000\300\017E\000\000\037E\000\000oD\000\000XD\000\000\271D\000\000\204D\000@\327D\000\000\257D\000@|D\000\240\366D\000\340\263D\000\200/E\000\200\276D\000\000\377D\000`\331D\000\000\036E\000\300\217E\000`\276D\000\020\nE\000\020\010E\000@hD\000\200\223D\000\200\211D\000\200}D\000\220\002E\000 \240D\000@\220D\000\300\213D\000\270\202E\000 \024E\000\240\315D\000@\347D\000\240\374D\000PoE\000\300\023E\000\300\331D\000\340\253D\000\370\270E\000\340\020E\0000wE\000\360 E\000\000\226D\000@\345D\000@HE\000\200\032E\000\000\372D\000\000\032E\000P\001E\000\000\203D\000\2606E\000\000zD\000\340\rE\000 \276D\000\220 E\000\340\265D\000\300\276E\000\2206E\000\300\363D\000\220\tE\000\360\207E\000\000\220D\000\200\213D\000\200\010E\000\340\rE\000@eD\000\000\002E\000\000xD\000\200\014E\000\000\207D\000 \227D\000\000\000E\000\000\357D\000`\234D\000\300\tE\000\000\352D\000`\352D\000@\250D\000\010\222E\000\300\360D\000\200\200D\000\000\264D\000\230\256E\000`\233D\000 \366D\000\360\203E\000@\252D\000`\354D\000\000wE\000\340\006E\000\300\272D\000\360>E\000\220-E\000\2404E\000\200\324D\000`\021E\000\200\245D\000`\006E\000\000\314D\000\200\251D\000\240\214D\000\240\007E\000\340\035E\000\360\"E\000\240\277D\000\000\372D\000\270\220E\000\340\375D\000\340\202D\000 \rE\000p`E\0000\035E\000\000bD\000\200\262D\000\200\211D\0000\033E\000\200\006E\000@\304D\000\000\034E\000\240\215D\000\000CD\000\000HE\000\200\312D\000\000\211D\000\000aD\000\000\355D\000\000\257D\0000}E\000\260:E\000P\036E\000\000 E\000\000RD\000 2E\000\200\236D\000\300pD\000\320\000E\000\2009D\000\240\375D\000@\243D\000@\010E\000\000\272D\000 \236D\000`\361D\000`\235D\000\2000D\000\000\310D\000\200\254D\000\220\007E\000`kE\000\020(E\000\240\243D\000\340\260D\000\000\245D\000`\232D\000\020\016E\000\240\356D\000\240\244D\000\340\271D\000\340\330D\000\000\356C\000\340.E\000\000;E\000\000\255D\000\000\370D\000\000CD\000\200\332D\000\300\272D\000`\261D\000\300\205D\000\200nE\000\340\037E\000\000\343D\000\220\014E\000 \263D\000\000aE\000\300\211D\000p\031E\000\200\226D\000 \023E\000\020:E\000\200\250D\000 \351D\000\200\001E\000\360!E\000\200\272D\000@>D\000@;E\000\3409E\000\300\322D\000`BE\000 \366D\000\200=D\000P\026E\000\000\233D\000\000`D\000\240gE\000\300\375D\000\200\322D\000\340\243D\000\340\307D\000@\225D\000\230\245E\000 \320D\000\200\235D\000 \026E\000@\022E\000`\310D\000\300\266D\000\240\276D\000\340\306D\000`\346D\000\000\245D\000@\345D\000\2404E\000\340\tE\000\300\tE\000@1D\000\300\\D\000\300\243D\000p%E\000\000\275D\000@*E\000\240\327D\000`$E\000\260%E\000 BE\000\300\312D\000\000\374D\000@\352D\000`\270D\000\240\260D\000@\351D\000`\245D\000`BE\000\220hE\000\200\277D\000@\036E\000P\020E\000\300\363D\000`\223D\000\000>E\000\000\202D\000\000zD\000\2001D\000@\316D\000\200UE\000\300\267D\000\000\205D\000\240\334D\000 \274D\000@\211E\000\340\231D\000\200DD\000\2404E\0000\004E\000\000\274D\000\000uD\000 2E\000\200hD\000\300\212D\000\000\nD\000\200\277D\000\200VD\000\300>D\000\300\236D\000\340\017E\000\000\204D\000\300qD\000\000\322D\000p\010E\000\220\016E\000\000WD\000 \022E\000\000\322D\000`\346D\000\000\207D\000p\036E\000\200\033D\000@\362D\000 \271D\000\000\222D\000`\334D\000`\002E\000p\020E\000\200\350D\000\200\260D\0000\237E\000\200\210D\000\200\026E\000\000pD\000`\254D\000\200zD\000@\312D\000\200\237D\000\2404E\000@\026E\000@\241D\000\000@D\000\260\007E\000P\035E\0000\007E\000\340bE\000\200\243D\000\200,E\000\200XD\000p\001E\000\000\236D\0000\004E\000\300\337D\000 \316D\000\300\251D\000`\006E\0000\000E\000\340\300D\000\360\"E\000\000\304D\000\240\020E\000\200\220D\000@\221D\000 KE\000`\006E\000\240YE\000\340\222E\000\200QD\000\000\300D\000\000\231D\000\200\325D\000\000\365D\000\300\005E\000\000\241D\000\240\233D\000\000fD\0000\253E\000`\320D\000\000\265D\000\300\363D\000\200;E\000\000ND\000\340\256D\000\340\261D\000\310\304E\000\360+E\000\000\203D\000`EE\000\360VE\000\220\200E\000\340\'E\000\000\261D\000\000\304D\000\300\214D\000`\237E\0000?E\000\300\371D\000\220(E\000`\233D\000`\274D\000\000\020D\000@\223D\000@\333D\000\000\202D\000\200\262D\000\240\351D\000P`E\000\200\035E\000\360:E\000\300\261D\000\340(E\000\240\332D\000\300\332D\000\240\317D\000\000XD\000\340\001E\000`sE\0000\tE\000@\343D\000`\365D\000\250\242E\000\000\344D\000\200cD\000`[E\000\000\301D\000\240\016E\000\200\332D\000\200\325D\000\000\252D\000\240[E\000@{E\000\020jE\000\240\256D\000 \211D\000 \006E\000 *E\000\000\330D\000\000\226D\000\240\361D\000\000\271D\000\260 E\000\360@E\000\200\210D\000\020\030E\000\000\343D\000\300\314D\000\340\266D\000\240\213D\000\000\250D\000@\316D\000\000\306D\000\340\017E\000\3202E\000 \235D\000\200\"E\000\260\013E\000P`E\000\000(D\000\360\216E\000 vE\000@_E\000\200\230D\000\260WE\000\200\367D\000\000nD\000\360KE\000\000\247D\000\000ID\000\260\032E\000\3609E\000 \315D\000\2203E\000`\271D\000\360<E\000@HD\000 \337D\0000\002E\000`\275D\000\240\230D\000\000fD\000@CD\000`\343D\000\000\207D\000\340\213D\0000\030E\000`\017E\000P\000E\000\000aE\000\000\266D\000\260QE\000\220KE\000\300\024E\000\300\307D\000 \265D\000\300\207D\000\000\342D\000\000\372C\000\200\"E\000\200\323D\000\240\037E\000 \356D\000\350\273E\000\200\237D\000\340\262D\000\0004D\000 \031E\000\300{D\000 \301D\000\220\"E\000`\006E\000\000,D\000`\206E\000\300\215D\000\240\260D\000\340xE\000\240\342D\000\340\310D\000\300\335D\000\000XD\000 \273D\000\000\236D\000\300\235D\000\2403E\000\360\002E\000\300\365D\000\300\243D\000\300ZD\000\200\307D\000\200\235D\000p\022E\000\300(E\000\000\006E\000\020\037E\000\200;D\000\000\277D\000\0008E\000\300iD\000\320\005E\0000+E\000\000|D\000\200$D\000 \304D\000\300\217D\000\000|D\000\300\270D\000\240HE\000p\025E\000\200\300D\0000DE\0000JE\000\200\211D\000`\234D\000 \024E\000\200nD\000\340\253E\000@\213D\000\200\230D\000`@E\000@wD\000@\314D\000\300_D\000\300\235D\000\300\250D\000@ND\000\260;E\000 \341D\000@\252D\000\200.D\000\340\022E\000\200\337D\000\020VE\000\000$E\000`\276D\000p\001E\000\220]E\000\200^D\000\340\326D\000\000\300D\000\300\265D\000 \364D\000@\246D\000\300\217E\000\0208E\000\000\306D\000\240\302D\000\320?E\000@\377D\000\000\\E\000\240\346D\000@\022E\000@\203E\000@\003E\000\2006D\000\300\310D\000 \222D\000\000[D\000 \036E\000@\260D\000\200;E\000\360\033E\000\200\320D\000\220%E\000\340\001E\000\340\255D\000\200\266D\000\200\276D\000`\242D\000\340\216E\000\2404E\000 \226D\000\2004D\000\330\225E\000\200 D\000P9E\000\200\241D\000 \212D\000\340)E\000\200lD\000\000\266D\000`\026E\000 \226D\000\000ZD\000\000\026E\000@WD\000\000qD\000\300\306D\000\300\265D\000`\301D\000@\265D\000\240GE\000\200\350D\000`\321D\000`\203D\000\200+E\000 \026E\000 \357D\000\000HD\000@\337D\000\200}D\000 LE\000\000\221D\000\340\006E\000\220cE\000\240\345D\000p5E\000 \257D\000\200vD\000\320\030E\000\300\351D\000\340\254D\000@\336D\000P\202E\000p\031E\000`\200D\000\000sD\000\000\260D\000\340\257D\000\330\310E\000\340\310D\000\3207E\000\300\205D\000\000\214D\000`\001E\000 \370D\000\2405E\000\300\370D\000\300\005E\000@MD\000\000\tD\000\000\204D\000@\306D\000X\225E\000\340\217D\000@\320D\000\2001E\000\200\324D\000\200\021E\000p[E\000`\326D\000\000\213D\000\000\031E\000\240\220D\000`\224D\000\340BE\000\200\340D\000\300gD\000\300AE\000\000\016E\000`\320D\000\200\354D\000\320\tE\000\240\335D\000`\311D\000\240\220D\000P\024E\000@\271D\000@\371D\000\220\034E\000\200\\D\000 \260D\000\300\004E\000\240\275D\000\3606E\000@\262D\000\200\350D\000\220\001E\000\000\226D\000`\371D\000\200YE\000\000\352D\000\340\300D\000\320\204E\000\200\021E\000\200\332D\000\340TE\000\240\325D\000\360[E\000\200\267D\000P3E\0000\020E\000\360\024E\000 \336D\000PvE\000\000CD\0000\003E\000 UE\000\200\272D\000\000\215D\000\200\320D\000\000zD\000\200\355D\000\2009E\000 \246D\000\300\225D\000P$E\000\000<E\000  E\000\000xD\000 \354D\000\260KE\000p5E\000\000BE\000\360$E\000\200\317D\000\000\221D\000\000\312D\000PCE\000\200\242E\000\000yD\000\000\345D\000\200\211D\000\300\341D\000@@D\000\240\226D\000X\260E\000\340\227D\000\240\261D\000\000\257D\000 \370D\000@\032E\000@HD\000\000:E\000\300\205E\000\240aE\000@5D\000\340<E\000\240\271D\000\000\254D\000\340\255D\000\340\340D\000@\003E\000\240\013E\000`.E\000\2201E\000\240\276D\000@\376D\000\000\331D\000\220\026E\000\300\271D\000@\362D\000\2007E\000\020HE\000\240\340D\000\000\036E\000\200\'E\000\000|D\000@(E\000H\252E\000\240\366D\0000\023E\000\200\357D\000\200\276D\000\000\260D\000\000\227D\000@\203D\000\240\003E\000\220{E\000\310\226E\000\000\233D\000@1E\000\030\234E\000\300\271D\000\200\242D\000\000\241D\000\200{D\000p\036E\000`\347D\000p\013E\000`\232D\000\200\314D\000\020 E\000\300\220D\000\020 E\000\200\211D\000\000\255D\000\360!E\000\240\344D\000\220\227E\000\200\366D\000@\221D\000@\326D\000\300\240E\000\300\356D\000@\265D\000\200\317D\000\340\320D\000`\325D\000\340\265E\000 \315D\000\260$E\000\360 E\000\000zD\000\340\000E\000\000\365E\000`#E\000\000\226D\000@\177D\000\340\233D\000 \355D\000\000;E\000\200\374D\000\200\030E\000\300\303D\000\000\262D\000 \243D\000\300\302D\000\200mD\000@[D\000\300kD\000\240%E\000\340\242D\000\300\203D\000\200\023E\000\240\220D\000\300\201D\000\000[D\000\300YD\000`\272D\000 fE\000\340\300D\000@\207D\000\220ME\000@wD\000@\300D\000\200TE\000P7E\000p\016E\000\000\234D\000\220(E\000\300\330D\000\000\242D\000\000\327D\000\200\306D\000\340\366D\000\320=E\000\000vE\000\340\254D\000\200\324D\000\000FD\000\000\214D\000\200\340D\000\000pD\000`\356D\000\240\333D\000@\252D\000@SE\000\350\312E\000`\343D\000 \325D\000 \000E\000\240\213D\000\000-E\000p\013E\000\240\235D\000\200\324D\000@bE\000\000\230D\000p\212E\000\200mD\000\200\314D\000 \376D\000\000\tE\000\000\314D\000\000zD\000`\010E\000\200JD\000X\230E\000@\235D\000 \243D\000\200\230D\000\200\274D\000\000\024E\000\200\000E\000 \205D\000`\277D\000\340\311D\000\300\216D\000\200\312D\000\000\002E\000\000\257D\000 \013E\000\300\236D\000\300\"E\000@\013E\000@\354D\000@\304D\000\330\277E\000\020\035E\000@\333D\000@\375D\000\200YD\000@:E\000\340\334D\000@\177D\000P,E\000@[D\000\200\"E\000 \377D\000P\037E\000p(E\000@\305D\000`\265D\000\000\310D\000\300\027E\000`\207D\000\000\026D\000pxE\000\200\022E\000\300\362D\000P\016E\000pKE\000\200\220D\000\340\253D\000P\032E\000\200dD\000\000\340D\000\240\325D\000\000nD\000 \361D\000`\376D\000`\322D\000`\253D\000\000\010E\000@/E\000\340\361D\000`\235D\000@_D\000\340,E\000\240\370D\000\200gD\000\320cE\000\000\305D\000\220[E\000pUE\000@-D\000\000\237D\000\300\206D\000\320\026E\000\000\327D\0000\023E\000\000sD\000\3009E\000 \002E\000`\325D\000\260(E\000\200\036E\000`\264D\000\320\tE\000\340\304D\000`\303D\000\300\367D\000\340\357D\000\320\021E\000\340!E\000\240\006E\000 \225D\000\200\222D\000\000\342D\000\240\014E\000\240\363D\000\200\025E\000pYE\000\000\257D\000\240$E\00002E\000\300\301D\000\300\nE\000\020\036E\000@\354D\000@\311D\000 !E\000\000\223D\000\000\334D\000\240\250D\000\230\231E\000\360zE\000\200\273E\000\260\031E\000\000sD\000@\274D\000\000\351D\000\030\347E\000\240\377D\000\250\234E\000\000\302D\000\300ID\000@\243D\000\200\'D\000\300\344D\000@\260D\000@\341D\000\240\225D\000\000\241D\000\300\232D\000\300\024E\000`LE\000\000\036E\000\000\357D\000\320,E\000 \316D\000`\032E\000\200jD\000 \321D\000\200;E\000`\245D\000\340\017E\000\0005D\000 \367D\000\300\332D\000\220nE\000\340\273E\000\300\343D\000 \322D\000\200\301D\000\000\310D\000\244\024F\000`\300D\000@\203D\000\340\301D\000\000)E\000@\316D\000\300\277D\000 \357D\000 \245D\000 \025E\000`\261D\000@\241D\000\000\207D\000\240\225D\000\000\234D\000\200\373D\000\300\357D\000@\310D\000\240\255D\000@\203D\000\260eE\000\220ZE\000\300\226D\000pRE\000\300aD\000\240\223E\000@\304D\000 \257D\000\340*E\000\300\320D\000\200\216D\000@\255D\000 UE\000\200\355D\000\200;E\000\300\261D\000p6E\000\000\264D\000\200dE\000\340\231D\000\000\320D\000\000\202D\000\000\233D\000\240\000E\000\000RD\000\3000D\000@\023E\000@vD\000\300UE\000\000\231D\000\200\361D\000\0007E\000\240\005E\000 \313D\000`\301D\000@\035E\000`\304D\000\200\313D\000\300\203D\000\000\331D\000\300\276D\000\200\321D\000 -E\000\000\236D\000\300\215D\000\000\244D\000 UE\000`\001E\000`\202D\000\340\016E\000\000\202D\000\340\200E\000\200\325D\000@\374D\000\000\312D\000\000\272D\0000zE\0000\013E\000\000\300D\000\240\022E\000\200\236D\000`\032E\000\200zD\000@0D\000\240\227D\000\000\310D\000\000\344D\000\200\270D\000\000\237D\000@\260D\000\260BE\000`&E\000\200\376D\000\000\234D\00006E\000@JD\000\200\307D\000\300\227D\000@\273D\000\240\033E\000@\205D\000\000\260D\000\000\241D\000@\237D\000\200\324D\000\300\262D\000\200HD\000\340SE\000 \303D\000@\304D\000\300\304D\000\2205E\000`\272D\000\320\rE\000\0006D\000\240\304D\000@\364D\000\300\216E\000\200\334D\000@1E\000\270\366E\000p\214E\000\300\262D\000@\203D\000\340:E\000\020\tE\000\320\013E\000\000HE\000\300\224D\000\000\247D\000\000\010E\000\000\264D\000\3004D\000 \nE\000\340\227D\000 \200D\000\000\367D\000@\200D\000@\\E\000@\244D\000\0004D\000\340\245D\000`\350D\000\240\370D\000 \200E\000\300\215D\000\340\237D\000\200\303D\000\320ME\000\340\211D\000\000aD\000\300\224D\000\200^D\000\300\217D\000`\316D\000@\212D\000\350\263E\000\300\325D\000P\255E\000\200?E\000\300\327D\000\000\nE\000\320NE\000\340\367D\000\240wE\000\300\250E\000@vD\000\240\254D\000\000RD\000@+E\000\000\271D\000\340\242D\000\300\224D\000\000DD\000\300\322D\000\000\245D\000`\004E\000 \350D\000\300FD\000\000}D\000@\014E\000\300ZD\000@\334D\000\200#E\000\340\216D\000@5E\000\200\375D\000@\362D\000\340\273D\000`\223D\000\300\256D\000\300\301D\000\000dD\000 \240D\000\200\305D\000\200\210D\000\200,D\000`\314D\000\240\303D\000\200ND\000@ID\000\200\341D\000`.E\000\200RE\000\000\257D\000\000BE\000\000sD\000\300\035E\000\300\207D\000\340:E\000\000\360D\000\020$E\000\200\273D\000\240:E\000\340\366D\000\340\264D\000\200GD\000\000\271D\000\240\233D\000\000CD\000@\341D\000\000\371D\000\020\032E\000\340\311D\000\300\001E\000\240\315D\000\000\343D\000\000\257D\000\000\257D\000\200\255D\000\240\271D\000`\\E\000 \316D\000\220BE\000\300\342D\000PAE\000\360\020E\000\200\023E\000\000zD\000\200\312D\000P\021E\000\200\205D\000\240\206D\000\200\230D\000\300[D\0000\036E\000`SE\000\200\\D\000\000fD\000\200\211D\000\030\265E\000\340\030E\000PCE\000\240\255D\000\200@D\000@\265D\000 *E\000`\006E\000\240\211D\000`\220D\000`\333D\000\240\250D\000@\000E\000\300FE\000\300^D\000\240\353D\000\200\302D\000@\325D\000\240\235D\000\340\221D\000\030\255E\000\260?E\000\300\246D\000\000]D\000\300\255D\000\000yD\000@\244D\000\000pD\000 LE\000\300\263D\000\010\221E\000\000\177D\000@!E\000\260\021E\000 \221D\000\200`D\000\320;E\000\000\322D\000\200\273D\000\300hD\000\020\023E\000\000jE\000\000\266D\000\240\277D\000\000\306D\000\300\212D\000\200-D\000\000\314D\000\220\007E\000\240\211D\000@\316D\000\340\331D\000`\322D\000\200\274D\000@=E\000\300\250D\000\340\214D\000p\000E\000\300kD\000\260/E\000@\305D\000(\247E\000\000\033E\000`\360D\000\200\367D\000\240\014E\000\200mD\000\000sD\000\000$E\000\020\207E\000\300\354D\000p.E\000\000RD\000`\256D\000 \240D\000\220/E\000p\023E\000 \000E\000@\034E\000\000+E\000\200\026E\000\240(E\000@\355D\000\340\373D\000`\'E\000`\022E\000@\233D\000@\017E\000\010\312E\000\000^D\000p\032E\000\200\273D\000 \222D\000\000zD\000\300\236D\000\000\217D\000(\210E\000 6E\000\200\351D\000\000]D\000\000\336D\000@\336D\000 \241D\000`\010E\000\300\251D\000\000\220D\000@\372D\000P$E\000\260GE\000\340\210D\000\000\235D\000\240\241D\000\300\204D\000\000\245D\000\320\027E\000@AE\000\320&E\000p\000E\000\300\353D\000\200\240D\000\000\217D\000\200\331D\000\360\004E\000\240\001E\000P\000E\000\330\215E\000\3602E\000\000\311D\000\340\344D\000\200sE\000\000\240D\000\270\202E\000P?E\000@bE\000`1E\000\300\217D\000\240\315D\000@\204D\000\000\256D\000`\262D\000\220\nE\000\000HE\000\240\016E\000\000\222D\000 dE\000@;E\000\200,E\000 \356D\000`\256D\000\200\377D\000\000\026E\000\240\333D\000@\013E\000\200\354D\000@\223D\000\0204E\000\240\370D\000\240\214D\000 \376D\000\200\364D\000\200cD\000\300\255D\000\340\365D\000\300\177D\000\240\211D\000\200\324D\000\020\004E\000\240\347D\000\200TE\000\200\350D\000\300\266D\000\000\320D\000\000\367D\000@\252D\000\240aE\000\300\332D\000\200hD\000@\366D\000\000sD\000\000zD\000\000\026E\000\340\022E\000@\rE\000\200\303D\000\000\314D\000\240\274D\000 CE\000\200;E\000\300`D\000\300\277D\000\220KE\000\000\260D\000\000\301D\000\000wD\000\340\255D\000\000\341D\000`\347D\000\300\237D\000\000\241D\000`\356D\000\000\007D\000@\323D\000\200zE\000\2401E\000\200[D\000\200\220D\000\360YE\000\300\rE\000P2E\000\240hE\000 \306D\000\340<E\000\240\270D\000 \201D\000\260\026E\000\250\230E\000@\233D\000@\347D\000\300\256D\000\240\355D\000\300iD\000\340\202D\000@\235D\000\340$E\000@\244D\000\200\344D\000\240\324D\000\220\001E\000\340\267D\000p\216E\000`\263D\000\300\257D\000\000\372D\000\000\257D\000\200\257D\000@\311D\000\360=E\000\020\tE\000`\306D\000@\315D\000@\223D\000\200DD\000\200KD\000\240\377D\000\200\tE\000\000\264D\000 \371D\000\330\347E\000`eE\000\200\345D\000\240\000E\000\030\253E\000\2407E\000\200BD\000p\030E\000\240\233D\000\000\016E\000\240BE\000`\366D\000\300\254D\000\000%E\000\000\310D\000\340\274D\000\350\210E\000@YD\000@\314D\000`\266D\000`\352D\000\240\366D\000\3008E\000\200\353D\000\000\241D\000\240\252D\000\240\252D\000\200\212D\000\020\003E\000\300\215D\000P#E\000\000\262D\000\200\205D\000\360\261E\000\000\341E\000\000\007E\000@\020E\000\000zD\000\200\234D\000P\241E\000`\274D\000\300\375D\000\000UD\000\330\204E\000\020%E\000`\250D\000\200SD\000\300\320D\000\300\325D\000\240\266D\000\000\360D\000\350\241E\000`\020E\000@\221D\000p\021E\000@\244D\000@\361D\000 \033E\000\200zD\000\000\332D\000`\331D\000\200\201D\000\3006D\000`\316D\000\000\317D\000\240\330D\000\360\002E\000@nD\000\020\023E\000pYE\000\000\317D\000\300\013E\000\340\210D\000\240\334D\000@\221D\000\340\302D\000\000\204D\000\000_D\000\330\201E\000 \320D\000\300\340D\000\000\016E\000\000\177D\000\240\301D\000\200\314D\000`\376D\000\300\006E\000\3009D\000\370\305E\000\300\312D\000\340\255D\000\200\332D\000\240EE\000@lE\000\270\273E\000\340\321D\000\300\236D\000 \232D\000@\217D\000\300\215D\000\000\216D\000\000\026E\000\360\032E\000\000wD\000@\317D\000\000\237D\000\000\203D\000`\243D\000\240\212D\000`\271D\000\200\254D\000\300\262D\000\000\324D\000\200\313D\000\240\205D\000\200yD\000\000\333D\000@\270D\000\200\370D\0000EE\000\000\007D\000@\332D\000 qE\000\340\211D\000\300\204D\000\300\371D\000\200\227D\000\3200E\000\240\215D\000\020\202E\000\240\204D\000\300vD\000\340\242D\000\200EE\000\240\263D\000\000\254D\000 \270D\000\240\254D\000\3002E\000\000\225D\000\360qE\000\200\027D\000`\305D\000\320\000E\000\340\277D\000@\265D\000\200\365D\000@\344D\000`cE\000\300\217D\000\200\204D\000\240\232D\000p*E\000@]E\000@GD\000@{D\000\000\334D\000\300\307D\000 \315D\000\220\024E\000\000\341D\000\240\353D\000\240\310D\000\200\242D\000\200\352D\000`\207D\000\340\nE\000\240\035E\000\220\016E\000\000ZD\000\300\023D\0000lE\000\300\274D\000 \272D\000\2005E\000\000\232D\000\000\220D\000\020\nE\000\300\311D\000\200\243D\000\000lD\000\240\206D\000\300JD\000\200\203D\000\300\240D\000\000\211D\000\300\200D\0000\rE\000@\232D\000\240\357D\000`\217D\000\240\355D\000`\200D\000\000\204D\000\030\204E\000P?E\000`\342D\000@\361D\000\270\214E\000 \245D\000\000rD\000@\315E\000\300ND\000\200\242D\000\200\210D\000\300\217D\0000\023E\000\370\223E\000\000/D\000\000BD\000\000\201D\000 \216D\000\340\226D\000\000\230D\000\3506F\000\260\021E\000\300\313D\000\200zD\000\260\340E\000\000\013E\000PBE\000\340\342D\000\000\270D\000\200\260D\000\240\312D\000\200\252D\000 \271D\000 \217D\000\000\314D\000\200\226D\000\000\362D\000`\363D\000\020\220E\000\300\355D\000\200\235D\000\240\003E\000`\207D\000\340\337D\000\000\332D\000@\356D\000\240\351D\000\260;E\0000\tE\000@\373D\000\200cD\000\240\253D\000`\205E\000\240\216E\000@\242D\000`\357D\000\000\247D\000\320\036E\000\200\314D\000\200\355D\000\000\365D\000\360\020E\000\320\030E\000\200\245D\000@\347D\000\000\003E\000\200OD\000@\tE\000\300LD\000\000=E\000 \000E\000@ E\000`\300D\000\200wE\000\200OD\000\200\274D\000`\305D\000`UE\000`\270D\000\200~D\000\200\324D\000`\241D\000\000}D\000\300\274D\000\340!E\000 \374D\000\200\036E\000\220\027E\000@\rE\000\200\314D\000\240\261D\000\300LE\000\260YE\000\260%E\000@\361D\000@gE\0000~E\000p E\000\340\006E\000\200qD\000@\353D\000\000XD\000\000\266D\000\000\325D\000 \202D\000\020\007E\000\240\215D\000\000\002E\000p6E\000\200\345D\000\000\307D\000\260\037E"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\000 A\000\000\240@\000\000\020A\000\000\020A\000\000\200@\000\000 A\000\000\000@\000\000 A\000\000\000@\000\000 A\000\000\200@\000\000\200@\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000 A\000\000\200@\000\000\340@\000\000 A\000\000\020A\000\000\020A\000\000\200@\000\000\200?\000\000\000@\000\000\300@\000\000\020A\000\000\020A\000\000\300@\000\000\240@\000\000\200@\000\000\020A\000\000 A\000\000\340@\000\000\020A\000\000\200?\000\000\000A\000\000\000A\000\000\000A\000\000\300@\000\000\300@\000\000\240@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000\020A\000\000\340@\000\000\200?\000\000\340@\000\000\000@\000\000\000@\000\000\200?\000\000 A\000\000\000@\000\000\000A\000\000\340@\000\000\200@\000\000 A\000\000 A\000\000\000A\000\000\020A\000\000\000A\000\000\300@\000\000\200@\000\000 A\000\000\020A\000\000\300@\000\000\200?\000\000 A\000\000@@\000\000\240@\000\000\020A\000\000\200@\000\000\200@\000\000\240@\000\000 A\000\000\020A\000\000\200@\000\000\340@\000\000\200@\000\000\240@\000\000@@\000\000\240@\000\000\200?\000\000 A\000\000\000A\000\000\340@\000\000\020A\000\000\340@\000\000 A\000\000\200?\000\000\000A\000\000 A\000\000\240@\000\000 A\000\000\200@\000\000@@\000\000\300@\000\000 A\000\000\200@\000\000@@\000\000\340@\000\000\340@\000\000\340@\000\000\200@\000\000\000A\000\000\200?\000\000\000@\000\000\020A\000\000\000@\000\000\020A\000\000 A\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000\340@\000\000\200@\000\000\240@\000\000\200@\000\000\340@\000\000 A\000\000\200@\000\000@@\000\000\000A\000\000\200?\000\000\200@\000\000\020A\000\000\000A\000\000\000A\000\000@@\000\000\300@\000\000\200?\000\000\000A\000\000\000A\000\000\000@\000\000\000@\000\000\200?\000\000\300@\000\000\300@\000\000\200@\000\000 A\000\000\240@\000\000\000A\000\000\200?\000\000\240@\000\000\200?\000\000\340@\000\000\000A\000\000\340@\000\000 A\000\000\300@\000\000@@\000\000\240@\000\000@@\000\000\020A\000\000\000@\000\000\020A\000\000\200@\000\000 A\000\000\300@\000\000\000@\000\000\340@\000\000@@\000\000\200@\000\000\020A\000\000\020A\000\000\200@\000\000\200?\000\000\020A\000\000\000@\000\000\000@\000\000\240@\000\000 A\000\000\000A\000\000\240@\000\000\000@\000\000\200@\000\000\000A\000\000\240@\000\000\000A\000\000\340@\000\000@@\000\000\020A\000\000\200@\000\000 A\000\000\200@\000\000\000A\000\000\340@\000\000\020A\000\000\000A\000\000 A\000\000 A\000\000@@\000\000 A\000\000\240@\000\000\020A\000\000 A\000\000\020A\000\000\300@\000\000\240@\000\000\300@\000\000 A\000\000 A\000\000 A\000\000 A\000\000 A\000\000\200@\000\000\200?\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\300@\000\000\020A\000\000\240@\000\000@@\000\000 A\000\000\020A\000\000\300@\000\000\000A\000\000\200@\000\000\000A\000\000\200?\000\000\000A\000\000\340@\000\000\240@\000\000\020A\000\000\000@\000\000\200?\000\000\020A\000\000\300@\000\000\020A\000\000\200?\000\000\200@\000\000 A\000\000@@\000\000\340@\000\000 A\000\000@@\000\000\340@\000\000\000A\000\000\300@\000\000\020A\000\000\300@\000\000\240@\000\000\340@\000\000\200@\000\000@@\000\000\240@\000\000\000A\000\000\240@\000\000 A\000\000\020A\000\000\000@\000\000\340@\000\000\240@\000\000@@\000\000\300@\000\000\200?\000\000\020A\000\000\200?\000\000 A\000\000\340@\000\000\240@\000\000 A\000\000\020A\000\000\020A\000\000 A\000\000 A\000\000\340@\000\000 A\000\000@@\000\000\200?\000\000@@\000\000\240@\000\000\000A\000\000\000@\000\000\300@\000\000\000@\000\000\020A\000\000\240@\000\000\240@\000\000\200@\000\000\300@\000\000@@\000\000\000@\000\000@@\000\000\000A\000\000\000@\000\000 A\000\000\000@\000\000 A\000\000 A\000\000\240@\000\000\200@\000\000@@\000\000\020A\000\000\200?\000\000 A\000\000 A\000\000\340@\000\000\000A\000\000\340@\000\000\200?\000\000\300@\000\000 A\000\000 A\000\000\000A\000\000\000@\000\000\020A\000\000\000A\000\000\200@\000\000\240@\000\000\000A\000\000\300@\000\000 A\000\000@@\000\000\000A\000\000\340@\000\000 A\000\000\200@\000\000\340@\000\000 A\000\000\200@\000\000 A\000\000\240@\000\000\000A\000\000\340@\000\000 A\000\000\300@\000\000 A\000\000\000A\000\000 A\000\000@@\000\000\200@\000\000\200?\000\000\340@\000\000 A\000\000\240@\000\000\000A\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\200@\000\000\000A\000\000\000A\000\000\020A\000\000\000@\000\000\000A\000\000\300@\000\000 A\000\000\200?\000\000\340@\000\000\200?\000\000 A\000\000 A\000\000\300@\000\000\200?\000\000\300@\000\000\020A\000\000 A\000\000\240@\000\000\000A\000\000\340@\000\000 A\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\020A\000\000\240@\000\000\000@\000\000\300@\000\000 A\000\000 A\000\000\000@\000\000\340@\000\000\340@\000\000\240@\000\000\200@\000\000\020A\000\000@@\000\000\200?\000\000\340@\000\000\300@\000\000\000A\000\000\200@\000\000 A\000\000\000A\000\000\020A\000\000\000A\000\000\240@\000\000\340@\000\000\340@\000\000@@\000\000\340@\000\000\020A\000\000\000A\000\000@@\000\000\300@\000\000\000A\000\000\200?\000\000 A\000\000\000@\000\000\000A\000\000\300@\000\000\300@\000\000 A\000\000@@\000\000@@\000\000\000@\000\000 A\000\000\300@\000\000\000A\000\000\240@\000\000 A\000\000\000A\000\000 A\000\000\340@\000\000\020A\000\000\200@\000\000\020A\000\000 A\000\000\340@\000\000\200@\000\000\240@\000\000 A\000\000\000A\000\000\000A\000\000\200?\000\000\200@\000\000 A\000\000\000A\000\000 A\000\000\200@\000\000\200@\000\000\000@\000\000\200?\000\000\020A\000\000\000A\000\000@@\000\000@@\000\000\200@\000\000\200@\000\000\000A\000\000 A\000\000\020A\000\000\340@\000\000\240@\000\000\340@\000\000\200@\000\000\340@\000\000\300@\000\000\300@\000\000\340@\000\000\240@\000\000\200@\000\000 A\000\000\020A\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000\000A\000\000\300@\000\000\000@\000\000 A\000\000@@\000\000 A\000\000\020A\000\000\240@\000\000 A\000\000\340@\000\000\340@\000\000\240@\000\000 A\000\000 A\000\000\000A\000\000 A\000\000\300@\000\000@@\000\000\200@\000\000 A\000\000\300@\000\000\000A\000\000 A\000\000 A\000\000@@\000\000@@\000\000 A\000\000\000A\000\000\300@\000\000\000A\000\000 A\000\000\240@\000\000\200?\000\000\340@\000\000 A\000\000 A\000\000 A\000\000@@\000\000\200?\000\000@@\000\000\000A\000\000\020A\000\000\300@\000\000\000@\000\000\020A\000\000\240@\000\000\200@\000\000\340@\000\000\200@\000\000\020A\000\000\020A\000\000\200?\000\000\200@\000\000@@\000\000\340@\000\000\200@\000\000\300@\000\000\000A\000\000\200@\000\000\020A\000\000\000A\000\000@@\000\000\000A\000\000 A\000\000\000@\000\000\340@\000\000\020A\000\000\340@\000\000\300@\000\000\340@\000\000 A\000\000 A\000\000\200?\000\000\240@\000\000\020A\000\000 A\000\000\200@\000\000 A\000\000\020A\000\000\000A\000\000 A\000\000 A\000\000\000A\000\000\200?\000\000\020A\000\000\340@\000\000\200?\000\000\020A\000\000\200@\000\000\340@\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\200?\000\000\300@\000\000@@\000\000\000A\000\000\200@\000\000@@\000\000 A\000\000\300@\000\000\340@\000\000 A\000\000\340@\000\000\240@\000\000\340@\000\000 A\000\000\200@\000\000@@\000\000\020A\000\000 A\000\000\020A\000\000\000@\000\000\000A\000\000\340@\000\000\200@\000\000\300@\000\000 A\000\000\000@\000\000@@\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000\300@\000\000\000A\000\000\000A\000\000 A\000\000\240@\000\000\200@\000\000\000@\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000\000@\000\000 A\000\000\340@\000\000\000A\000\000\020A\000\000\000A\000\000@@\000\000\020A\000\000\000A\000\000\000@\000\000\000@\000\000@@\000\000\000A\000\000\340@\000\000\340@\000\000@@\000\000\200?\000\000\300@\000\000@@\000\000@@\000\000\020A\000\000@@\000\000\020A\000\000\000A\000\000\000A\000\000\240@\000\000 A\000\000@@\000\000\240@\000\000\000@\000\000\300@\000\000\020A\000\000\240@\000\000\340@\000\000\000A\000\000 A\000\000\000A\000\000@@\000\000\340@\000\000\300@\000\000\340@\000\000\000A\000\000@@\000\000\000@\000\000\020A\000\000\300@\000\000\300@\000\000\340@\000\000 A\000\000\340@\000\000@@\000\000 A\000\000\340@\000\000\200@\000\000 A\000\000\200?\000\000\000A\000\000\200@\000\000\020A\000\000\000A\000\000\200?\000\000\200@\000\000@@\000\000\000A\000\000 A\000\000\020A\000\000\000@\000\000\000A\000\000\240@\000\000 A\000\000 A\000\000\020A\000\000\020A\000\000\200@\000\000@@\000\000\340@\000\000\020A\000\000\000@\000\000\200?\000\000 A\000\000 A\000\000\200@\000\000\300@\000\000\300@\000\000\020A\000\000@@\000\000\000A\000\000\240@\000\000@@\000\000\300@\000\000\020A\000\000\000@\000\000\300@\000\000@@\000\000\200@\000\000@@\000\000 A\000\000\200@\000\000\300@\000\000\020A\000\000 A\000\000 A\000\000@@\000\000 A\000\000 A\000\000 A\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\020A\000\000\240@\000\000\200?\000\000 A\000\000\000A\000\000 A\000\000\340@\000\000\020A\000\000\340@\000\000\300@\000\000\020A\000\000\300@\000\000\020A\000\000 A\000\000\020A\000\000\340@\000\000\300@\000\000@@\000\000 A\000\000\000A\000\000\240@\000\000\300@\000\000 A\000\000\200@\000\000\240@\000\000\300@\000\000\340@\000\000\020A\000\000\240@\000\000\020A\000\000@@\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\000@\000\000 A\000\000\340@\000\000\300@\000\000\020A\000\000@@\000\000\020A\000\000@@\000\000\200@\000\000\200@\000\000\200@\000\000\000A\000\000 A\000\000\020A\000\000\020A\000\000\340@\000\000\000A\000\000\020A\000\000 A\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000@@\000\000\020A\000\000 A\000\000 A\000\000\000A\000\000 A\000\000@@\000\000 A\000\000 A\000\000\020A\000\000\000@\000\000\200@\000\000\300@\000\000\000@\000\000\300@\000\000\000A\000\000\000@\000\000 A\000\000\000A\000\000 A\000\000\300@\000\000\340@\000\000\240@\000\000 A\000\000\340@\000\000\020A\000\000\300@\000\000@@\000\000\340@\000\000\200?\000\000\000A\000\000\240@\000\000\340@\000\000\020A\000\000\340@\000\000\000@\000\000\340@\000\000\020A\000\000\200@\000\000 A\000\000\200@\000\000 A\000\000\340@\000\000\020A\000\000\340@\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000\340@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\200@\000\000\020A\000\000\240@\000\000\000A\000\000\000A\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000 A\000\000\020A\000\000\340@\000\000@@\000\000@@\000\000@@\000\000\200@\000\000 A\000\000\300@\000\000@@\000\000\020A\000\000\000A\000\000\000A\000\000\300@\000\000 A\000\000\340@\000\000\200@\000\000 A\000\000\300@\000\000\300@\000\000\000A\000\000\000@\000\000\340@\000\000\020A\000\000@@\000\000\200@\000\000@@\000\000 A\000\000\300@\000\000\240@\000\000\020A\000\000 A\000\000\340@\000\000\200@\000\000\000A\000\000\240@\000\000\000A\000\000@@\000\000\200?\000\000\020A\000\000\240@\000\000\300@\000\000\000A\000\000\340@\000\000@@\000\000\240@\000\000\200@\000\000\000@\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000\340@\000\000\000@\000\000 A\000\000 A\000\000\000A\000\000 A\000\000 A\000\000\340@\000\000@@\000\000\020A\000\000\000A\000\000\000@\000\000\340@\000\000\200@\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\000@\000\000\240@\000\000\340@\000\000\000A\000\000 A\000\000\200@\000\000 A\000\000\020A\000\000\000A\000\000\000A\000\000@@\000\000 A\000\000\340@\000\000\200@\000\000\340@\000\000\300@\000\000\020A\000\000\340@\000\000\340@\000\000\340@\000\000\340@\000\000\240@\000\000\000@\000\000 A\000\000 A\000\000\000A\000\000@@\000\000\300@\000\000\200@\000\000\200@\000\000@@\000\000\000A\000\000@@\000\000\340@\000\000\300@\000\000\340@\000\000\300@\000\000\300@\000\000\000A\000\000\240@\000\000\240@\000\000\000A\000\000\000A\000\000\200?\000\000\300@\000\000\000A\000\000\340@\000\000\000A\000\000\020A\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000\240@\000\000 A\000\000\200@\000\000\200@\000\000\020A\000\000\200@\000\000\020A\000\000\200?\000\000 A\000\000\020A\000\000\020A\000\000@@\000\000\240@\000\000\340@\000\000\300@\000\000\000A\000\000 A\000\000\300@\000\000 A\000\000\000A\000\000\000@\000\000@@\000\000\020A\000\000\020A\000\000\000A\000\000\300@\000\000@@\000\000\200?\000\000\300@\000\000\200@\000\000@@\000\000 A\000\000@@\000\000 A\000\000\020A\000\000\200?\000\000\200@\000\000@@\000\000@@\000\000\300@\000\000@@\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000\000A\000\000\200@\000\000\200@\000\000 A\000\000\300@\000\000 A\000\000\340@\000\000 A\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000 A\000\000@@\000\000\000A\000\000\000A\000\000 A\000\000\340@\000\000\000A\000\000 A\000\000\340@\000\000\200?\000\000\200?\000\000\000A\000\000\300@\000\000 A\000\000\020A\000\000 A\000\000\200?\000\000\020A\000\000\340@\000\000 A\000\000\240@\000\000\000A\000\000\300@\000\000\020A\000\000\020A\000\000\300@\000\000 A\000\000\200@\000\000@@\000\000\200@\000\000\200@\000\000\000A\000\000\200@\000\000@@\000\000@@\000\000\020A\000\000\240@\000\000\240@\000\000\240@\000\000 A\000\000 A\000\000\000A\000\000\000@\000\000\240@\000\000\000@\000\000 A\000\000\000A\000\000\240@\000\000\300@\000\000 A\000\000\340@\000\000\340@\000\000\300@\000\000\340@\000\000\020A\000\000\340@\000\000 A\000\000\200?\000\000\340@\000\000 A\000\000\340@\000\000\300@\000\000\200?\000\000\300@\000\000\000A\000\000\000A\000\000\340@\000\000\340@\000\000@@\000\000\000A\000\000 A\000\000\000A\000\000\020A\000\000\300@\000\000\200@\000\000\000@\000\000\200?\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000 A\000\000\340@\000\000\000A\000\000\340@\000\000 A\000\000 A\000\000\200@\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000\200?\000\000 A\000\000\340@\000\000\240@\000\000\200?\000\000\340@\000\000\020A\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000\000A\000\000\020A\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000@@\000\000\000@\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\300@\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\000@\000\000\000A\000\000\200@\000\000\020A\000\000\300@\000\000\240@\000\000 A\000\000\240@\000\000\200@\000\000@@\000\000 A\000\000@@\000\000@@\000\000\340@\000\000 A\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\340@\000\000 A\000\000\200@\000\000\340@\000\000@@\000\000\000A\000\000\300@\000\000\200@\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000\000A\000\000@@\000\000\000@\000\000\000A\000\000@@\000\000\240@\000\000\200@\000\000\340@\000\000\000A\000\000\340@\000\000\240@\000\000\200@\000\000 A\000\000\340@\000\000\000A\000\000 A\000\000\000A\000\000\300@\000\000\340@\000\000\240@\000\000\000@\000\000\300@\000\000\240@\000\000\000A\000\000\000A\000\000\020A\000\000\340@\000\000\240@\000\000\000@\000\000\000A\000\000 A\000\000 A\000\000@@\000\000\020A\000\000\200@\000\000\020A\000\000 A\000\000\020A\000\000 A\000\000\200?\000\000@@\000\000\020A\000\000 A\000\000\300@\000\000\020A\000\000 A\000\000\000A\000\000\340@\000\000 A\000\000\020A\000\000 A\000\000 A\000\000\000A\000\000\000A\000\000@@\000\000\300@\000\000\240@\000\000\000A\000\000 A\000\000\340@\000\000\000A\000\000 A\000\000\000A\000\000\020A\000\000\200@\000\000\000A\000\000\340@\000\000 A\000\000\240@\000\000\200?\000\000 A\000\000\340@\000\000\200?\000\000\340@\000\000\000@\000\000@@\000\000\300@\000\000\000A\000\000\000A\000\000\020A\000\000\020A\000\000\000@\000\000\300@\000\000\000A\000\000\000A\000\000\340@\000\000\000@\000\000\200@\000\000 A\000\000 A\000\000\340@\000\000 A\000\000@@\000\000\340@\000\000\000@\000\000\020A\000\000 A\000\000@@\000\000 A\000\000\200@\000\000\200?\000\000\000A\000\000@@\000\000\200@\000\000\000A\000\000\240@\000\000 A\000\000 A\000\000\000A\000\000@@\000\000\020A\000\000\300@\000\000 A\000\000 A\000\000\300@\000\000\340@\000\000\300@\000\000 A\000\000\340@\000\000\000A\000\000\200@\000\000 A\000\000\020A\000\000\240@\000\000\000A\000\000\020A\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\240@\000\000\000@\000\000\200@\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000 A\000\000 A\000\000\000A\000\000\300@\000\000\000A\000\000 A\000\000\000A\000\000\000A\000\000\300@\000\000\340@\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000\020A\000\000\000A\000\000\340@\000\000\000A\000\000\000A\000\000\020A\000\000\340@\000\000 A\000\000\240@\000\000\020A\000\000\200@\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000 A\000\000@@\000\000\240@\000\000 A\000\000\200@\000\000\300@\000\000 A\000\000\000@\000\000\200@\000\000\000@\000\000\340@\000\000\300@\000\000 A\000\000\240@\000\000 A\000\000\020A\000\000\340@\000\000\300@\000\000 A\000\000\300@\000\000\300@\000\000\200@\000\000\200@\000\000\200@\000\000\020A\000\000\020A\000\000\000A\000\000@@\000\000 A\000\000\300@\000\000\240@\000\000\340@\000\000\200@\000\000\000@\000\000\020A\000\000 A\000\000\000@\000\000\200?\000\000\300@\000\000\020A\000\000\340@\000\000\300@\000\000\020A\000\000\020A\000\000 A\000\000\000A\000\000\340@\000\000\000@\000\000\300@\000\000@@\000\000\200@\000\000 A\000\000@@\000\000\000A\000\000\340@\000\000@@\000\000\300@\000\000\300@\000\000\200?\000\000@@\000\000\200?\000\000 A\000\000\200@\000\000 A\000\000 A\000\000\200@\000\000@@\000\000\020A\000\000\240@\000\000\020A\000\000\240@\000\000\340@\000\000 A\000\000\200@\000\000\020A\000\000\340@\000\000\000@\000\000\240@\000\000\340@\000\000@@\000\000\340@\000\000\340@\000\000\300@\000\000\300@\000\000 A\000\000\000A\000\000@@\000\000\240@\000\000 A\000\000 A\000\000\340@\000\000\000A\000\000\300@\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000\020A\000\000\200@\000\000\300@\000\000\000A\000\000\000A\000\000\240@\000\000\340@\000\000 A\000\000\300@\000\000\020A\000\000\340@\000\000\200@\000\000 A\000\000\200@\000\000\340@\000\000\240@\000\000\300@\000\000@@\000\000\300@\000\000\240@\000\000 A\000\000 A\000\000\300@\000\000\000A\000\000\340@\000\000\200@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000 A\000\000\340@\000\000 A\000\000\020A\000\000 A\000\000 A\000\000\200@\000\000\300@\000\000\000A\000\000\340@\000\000 A\000\000\300@\000\000 A\000\000\340@\000\000\000@\000\000\000A\000\000\020A\000\000 A\000\000\000A\000\000\000@\000\000 A\000\000\340@\000\000\020A\000\000 A\000\000\340@\000\000\020A\000\000@@\000\000\300@\000\000\000A\000\000\000A\000\000\020A\000\000\340@\000\000\020A\000\000\200@\000\000 A\000\000\200@\000\000@@\000\000\020A\000\000\000@\000\000@@\000\000\300@\000\000 A\000\000\000A\000\000@@\000\000\000@\000\000\340@\000\000\000@\000\000\340@\000\000\340@\000\000@@\000\000\200@\000\000 A\000\000\020A\000\000@@\000\000\000@\000\000\000A\000\000\240@\000\000\340@\000\000 A\000\000\240@\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000@@\000\000\020A\000\000\300@\000\000@@\000\000\300@\000\000 A\000\000 A\000\000\300@\000\000\240@\000\000\300@\000\000\020A\000\000\200@\000\000\200@\000\000\300@\000\000 A\000\000\200?\000\000\000A\000\000\000A\000\000\020A\000\000\300@\000\000 A\000\000\200@\000\000\200@\000\000@@\000\000\340@\000\000\300@\000\000\000@\000\000\020A\000\000 A\000\000\020A\000\000\020A\000\000 A\000\000 A\000\000\300@\000\000\200?\000\000\000A\000\000\000A\000\000\300@\000\000\240@\000\000\200?\000\000\340@\000\000\000A\000\000\000@\000\000\340@\000\000\340@\000\000 A\000\000\300@\000\000\020A\000\000@@\000\000 A\000\000 A\000\000\340@\000\000\000A\000\000\000A\000\000@@\000\000 A\000\000@@\000\000\000A\000\000 A\000\000\000A\000\000@@\000\000\340@\000\000\000A\000\000 A\000\000\200@\000\000\300@\000\000\000A\000\000 A\000\000\340@\000\000\340@\000\000\020A\000\000\020A\000\000\020A\000\000\000A\000\000\200@\000\000\000A\000\000\020A\000\000\000A\000\000 A\000\000\000@\000\000 A\000\000\200@\000\000\200?\000\000\020A\000\000\200@\000\000\020A\000\000@@\000\000@@\000\000\200?\000\000 A\000\000@@\000\000\000A\000\000\200@\000\000\000A\000\000\340@\000\000\340@\000\000\240@\000\000 A\000\000\340@\000\000\200?\000\000\000A\000\000\340@\000\000\300@\000\000 A\000\000\020A\000\000\300@\000\000\300@\000\000\200@\000\000\200@\000\000\000A\000\000\340@\000\000\000@\000\000\300@\000\000\000A\000\000\000@\000\000\000@\000\000\200@\000\000\240@\000\000 A\000\000\000A\000\000 A\000\000\020A\000\000\200@\000\000\000A\000\000\340@\000\000@@\000\000 A\000\000 A\000\000\200?\000\000 A\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\020A\000\000\340@\000\000\000A\000\000\200@\000\000 A\000\000@@\000\000 A\000\000 A\000\000@@\000\000\000A\000\000\200?\000\000\240@\000\000\240@\000\000\000A\000\000\020A\000\000\020A\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000\240@\000\000\340@\000\000 A\000\000 A\000\000\200?\000\000\000A\000\000\000A\000\000\300@\000\000\020A\000\000@@\000\000\240@\000\000@@\000\000\340@\000\000 A\000\000@@\000\000\240@\000\000\200@\000\000\300@\000\000 A\000\000 A\000\000\020A\000\000@@\000\000 A\000\000\000@\000\000\340@\000\000\000A\000\000@@\000\000\300@\000\000\020A\000\000\300@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000 A\000\000\000A\000\000\000A\000\000\340@\000\000 A\000\000\000A\000\000\200?\000\000\240@\000\000\000A\000\000 A\000\000\020A\000\000\300@\000\000\340@\000\000\240@\000\000\340@\000\000\000A\000\000\340@\000\000\020A\000\000 A\000\000 A\000\000 A\000\000\200?\000\000\240@\000\000@@\000\000\200@\000\000@@\000\000@@\000\000\020A\000\000\300@\000\000@@\000\000 A\000\000@@\000\000 A\000\000@@\000\000@@\000\000\200@\000\000\340@\000\000\200@\000\000\340@\000\000@@\000\000@@\000\000@@\000\000 A\000\000\300@\000\000\000@\000\000\200@\000\000\200@\000\000\020A\000\000\020A\000\000\000@\000\000 A\000\000\000A\000\000\020A\000\000\340@\000\000\240@\000\000\020A\000\000@@\000\000 A\000\000\020A\000\000\300@\000\000 A\000\000\200@\000\000\200@\000\000 A\000\000@@\000\000 A\000\000\240@\000\000\340@\000\000\000A\000\000\000@\000\000\300@\000\000\340@\000\000\000A\000\000@@\000\000\340@\000\000 A\000\000\000A\000\000@@\000\000@@\000\000\000@\000\000\020A\000\000 A\000\000 A\000\000 A\000\000\240@\000\000\000A\000\000\020A\000\000\300@\000\000 A\000\000\020A\000\000@@\000\000 A\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\240@\000\000 A\000\000\020A\000\000\000A\000\000\200?\000\000 A\000\000@@\000\000\300@\000\000 A\000\000 A\000\000\200@\000\000\300@\000\000\340@\000\000\200@\000\000 A\000\000 A\000\000\000A\000\000\340@\000\000\240@\000\000\000@\000\000\200@\000\000\200@\000\000\240@\000\000@@\000\000 A\000\000\000A\000\000\340@\000\000\200?\000\000\000@\000\000\020A\000\000\200@\000\000@@\000\000\020A\000\000\200@\000\000\300@\000\000\340@\000\000 A\000\000\200?\000\000\020A\000\000\020A\000\000\200@\000\000 A\000\000\340@\000\000\240@\000\000\300@\000\000 A\000\000 A\000\000\020A\000\000\200@\000\000 A\000\000\020A\000\000\200@\000\000\340@\000\000\020A\000\000\000@\000\000@@\000\000\240@\000\000 A\000\000\020A\000\000@@\000\000\300@\000\000\000@\000\000\300@\000\000\340@\000\000\000A\000\000\240@\000\000\300@\000\000\200@\000\000\200@\000\000\300@\000\000@@\000\000\200@\000\000\000@\000\000\020A\000\000 A\000\000@@\000\000\000@\000\000\300@\000\000\000@\000\000\300@\000\000\200@\000\000\000@\000\000\020A\000\000\240@\000\000\200@\000\000\200@\000\000\020A\000\000\200?\000\000\020A\000\000\000@\000\000@@\000\000\020A\000\000\000@\000\000\300@\000\000\200?\000\000\300@\000\000\240@\000\000\300@\000\000\300@\000\000 A\000\000\000@\000\000\020A\000\000\000A\000\000\000@\000\000@@\000\000\020A\000\000\020A\000\000\200?\000\000\200@\000\000 A\000\000\020A\000\000\200?\000\000\240@\000\000\240@\000\000\000A\000\000\020A\000\000\340@\000\000\340@\000\000\200@\000\000 A\000\000\000@\000\000 A\000\000\020A\000\000\300@\000\000\200@\000\000\340@\000\000\000A\000\000\300@\000\000 A\000\000\200@\000\000\000A\000\000\200@\000\000\020A\000\000\020A\000\000@@\000\000\000A\000\000\240@\000\000\240@\000\000 A\000\000\020A\000\000\000A\000\000@@\000\000\020A\000\000\240@\000\000\340@\000\000\240@\000\000\340@\000\000\000A\000\000\340@\000\000\000A\000\000\000A\000\000\300@\000\000@@\000\000\020A\000\000\000@\000\000\020A\000\000@@\000\000\240@\000\000\020A\000\000 A\000\000\000@\000\000\020A\000\000\240@\000\000\300@\000\000 A\000\000\340@\000\000\340@\000\000@@\000\000 A\000\000\200@\000\000\240@\000\000 A\000\000\000@\000\000\340@\000\000 A\000\000\000A\000\000\020A\000\000\200?\000\000 A\000\000 A\000\000 A\000\000\020A\000\000@@\000\000\200@\000\000\020A\000\000 A\000\000\200@\000\000@@\000\000 A\000\000\200@\000\000\020A\000\000\020A\000\000\020A\000\000\200@\000\000@@\000\000\000A\000\000\200@\000\000\300@\000\000\300@\000\000 A\000\000\020A\000\000\200@\000\000\240@\000\000\240@\000\000\200@\000\000\300@\000\000 A\000\000\020A\000\000 A\000\000\300@\000\000\200@\000\000\200?\000\000\200?\000\000 A\000\000\200@\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000@@\000\000\340@\000\000 A\000\000\000A\000\000\200@\000\000 A\000\000\340@\000\000\200?\000\000\000A\000\000\200@\000\000\240@\000\000\240@\000\000@@\000\000\240@\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000 A\000\000 A\000\000\000@\000\000\020A\000\000\340@\000\000\240@\000\000\000@\000\000\300@\000\000\000A\000\000\020A\000\000\020A\000\000\020A\000\000\200?\000\000@@\000\000\200@\000\000\200@\000\000\000@\000\000\300@\000\000\300@\000\000\000A\000\000 A\000\000@@\000\000\340@\000\000\000@\000\000 A\000\000\020A\000\000\200@\000\000\000@\000\000\200@\000\000 A\000\000\000A\000\000 A\000\000\300@\000\000\300@\000\000 A\000\000\020A\000\000\340@\000\000 A\000\000\000A\000\000\300@\000\000 A\000\000\240@\000\000\000A\000\000\000A\000\000\000A\000\000\020A\000\000 A\000\000 A\000\000 A\000\000\240@\000\000\000A\000\000@@\000\000@@\000\000\020A\000\000\000A\000\000\000@\000\000 A\000\000\240@\000\000@@\000\000\020A\000\000\240@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\000A\000\000\300@\000\000\020A\000\000\300@\000\000@@\000\000\200@\000\000\000@\000\000 A\000\000 A\000\000@@\000\000\200?\000\000\200?\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000\000@\000\000\000@\000\000\200@\000\000\020A\000\000 A\000\000\200@\000\000\000A\000\000 A\000\000\020A\000\000\200?\000\000@@\000\000\200@\000\000\240@\000\000\240@\000\000\200?\000\000\020A\000\000\200@\000\000\200?\000\000\020A\000\000\340@\000\000\000A\000\000\200@\000\000@@\000\000\300@\000\000\340@\000\000 A\000\000\340@\000\000\200@\000\000 A\000\000 A\000\000 A\000\000\300@\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\200?\000\000\240@\000\000\200?\000\000\200@\000\000 A\000\000\340@\000\000\340@\000\000\000@\000\000\240@\000\000@@\000\000 A\000\000\000@\000\000\200@\000\000\340@\000\000@@\000\000 A\000\000 A\000\000\340@\000\000\300@\000\000@@\000\000\000A\000\000\300@\000\000\240@\000\000 A\000\000\200@\000\000 A\000\000@@\000\000@@\000\000\020A\000\000\340@\000\000\000A\000\000\020A\000\000@@\000\000\300@\000\000\340@\000\000\000A\000\000\300@\000\000\000A\000\000\000A\000\000@@\000\000\000@\000\000\340@\000\000@@\000\000\020A\000\000 A\000\000\200@\000\000\240@\000\000\240@\000\000\000A\000\000\340@\000\000\020A\000\000\020A\000\000\020A\000\000 A\000\000\020A\000\000\340@\000\000\020A\000\000@@\000\000\200@\000\000\340@\000\000\000@\000\000 A\000\000\200@\000\000\020A\000\000\200@\000\000\000@\000\000\000@\000\000 A\000\000\240@\000\000 A\000\000\200@\000\000 A\000\000\020A\000\000\000A\000\000\200@\000\000@@\000\000\020A\000\000\200?\000\000\000A\000\000 A\000\000@@\000\000@@\000\000\300@\000\000\000A\000\000\000A\000\000@@\000\000 A\000\000\340@\000\000\000A\000\000\000A\000\000@@\000\000\240@\000\000\020A\000\000 A\000\000@@\000\000\200?\000\000\020A\000\000\340@\000\000\340@\000\000\000A\000\000@@\000\000\200@\000\000\340@\000\000 A\000\000@@\000\000 A\000\000\020A\000\000 A\000\000\000A\000\000\240@\000\000\200?\000\000\000@\000\000\300@\000\000\020A\000\000\020A\000\000\200?\000\000\300@\000\000\000A\000\000\000A\000\000\000A\000\000\240@\000\000\340@\000\000 A\000\000\020A\000\000@@\000\000\240@\000\000\300@\000\000@@\000\000\200@\000\000\340@\000\000 A\000\000@@\000\000\020A\000\000\000@\000\000\340@\000\000\020A\000\000\240@\000\000\300@\000\000\000A\000\000@@\000\000 A\000\000\000A\000\000\240@\000\000\340@\000\000 A\000\000\300@\000\000@@\000\000\240@\000\000\200?\000\000\020A\000\000\020A\000\000\000@\000\000\300@\000\000\020A\000\000 A\000\000 A\000\000@@\000\000\240@\000\000\020A\000\000\340@\000\000\240@\000\000\000A\000\000\200?\000\000\300@\000\000\300@\000\000@@\000\000\020A\000\000\200?\000\000 A\000\000@@\000\000\240@\000\000\300@\000\000 A\000\000 A\000\000\000A\000\000\340@\000\000 A\000\000\000@\000\000\000A\000\000@@\000\000\300@\000\000\000A\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000\340@\000\000@@\000\000 A\000\000\340@\000\000\200?\000\000\000A\000\000\000A\000\000\340@\000\000\340@\000\000\200?\000\000\200?\000\000\200@\000\000\240@\000\000\300@\000\000\000A\000\000\020A\000\000\000@\000\000\000A\000\000\240@\000\000 A\000\000\020A\000\000\020A\000\000\240@\000\000\020A\000\000\000@\000\000\300@\000\000\000@\000\000\000A\000\000 A\000\000\300@\000\000\020A\000\000\020A\000\000\300@\000\000\200@\000\000@@\000\000 A\000\000\240@\000\000\340@\000\000\340@\000\000 A\000\000\300@\000\000\200?\000\000 A\000\000\300@\000\000 A\000\000@@\000\000\200@\000\000\240@\000\000 A\000\000\240@\000\000\000A\000\000\000@\000\000\200@\000\000\300@\000\000 A\000\000\200@\000\000\340@\000\000\340@\000\000\020A\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\340@\000\000\200?\000\000\340@\000\000\200@\000\000\000A\000\000\020A\000\000\340@\000\000\200?\000\000@@\000\000\020A\000\000 A\000\000\020A\000\000@@\000\000\200@\000\000 A\000\000\240@\000\000\340@\000\000@@\000\000 A\000\000\020A\000\000\340@\000\000\000A\000\000\300@\000\000\200@\000\000\000A\000\000 A\000\000\240@\000\000\000A\000\000\340@\000\000@@\000\000\000A\000\000\020A\000\000\240@\000\000\000A\000\000\340@\000\000\240@\000\000\000A\000\000\000A\000\000@@\000\000\020A\000\000@@\000\000\000A\000\000@@\000\000\300@\000\000\300@\000\000\300@\000\000 A\000\000\020A\000\000\340@\000\000\200@\000\000\300@\000\000\200@\000\000\000A\000\000@@\000\000@@\000\000\200@\000\000\340@\000\000\240@\000\000 A\000\000\300@\000\000\020A\000\000\020A\000\000\240@\000\000\300@\000\000 A\000\000 A\000\000\200?\000\000\340@\000\000\300@\000\000\340@\000\000\200?\000\000\340@\000\000\000A\000\000 A\000\000@@\000\000\000@\000\000\000@\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\200@\000\000\000@\000\000\020A"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\000 A\000\000\240@\000\000\340@\000\000\000A\000\000\000A\000\000\020A\000\000\200@\000\000 A\000\000\000@\000\000 A\000\000\000@\000\000\200@\000\000\020A\000\000\200@\000\000 A\000\000\200@\000\000 A\000\000@@\000\000\240@\000\000 A\000\000\020A\000\000\020A\000\000\200@\000\000\200@\000\000\000@\000\000\200@\000\000\020A\000\000\240@\000\000\340@\000\000@@\000\000\020A\000\000\000A\000\000\020A\000\000\300@\000\000 A\000\000\000@\000\000\340@\000\000 A\000\000\000A\000\000\200@\000\000\240@\000\000\200?\000\000\240@\000\000\200@\000\000\200@\000\000\340@\000\000 A\000\000\000A\000\000@@\000\000\000A\000\000\000@\000\000 A\000\000\000@\000\000\300@\000\000\300@\000\000\340@\000\000\340@\000\000\000@\000\000 A\000\000\000A\000\000\300@\000\000\020A\000\000\300@\000\000\200@\000\000\200@\000\000 A\000\000\340@\000\000\200@\000\000\000@\000\000\000A\000\000\200@\000\000\000A\000\000\020A\000\000@@\000\000\300@\000\000\240@\000\000\300@\000\000 A\000\000\200@\000\000\020A\000\000\000@\000\000\340@\000\000 A\000\000\200@\000\000\200?\000\000\020A\000\000\000A\000\000\000A\000\000\000A\000\000\240@\000\000 A\000\000\000@\000\000\240@\000\000 A\000\000\340@\000\000 A\000\000\240@\000\000\200@\000\000\340@\000\000 A\000\000\200@\000\000\200@\000\000\300@\000\000\000A\000\000\340@\000\000\340@\000\000 A\000\000\000@\000\000\200@\000\000\340@\000\000\300@\000\000\000A\000\000 A\000\000\020A\000\000 A\000\000\000A\000\000 A\000\000@@\000\000@@\000\000\240@\000\000\200@\000\000\340@\000\000 A\000\000\200@\000\000\200@\000\000\000A\000\000\340@\000\000\340@\000\000\340@\000\000\340@\000\000\340@\000\000\200@\000\000\200@\000\000\200?\000\000\300@\000\000\020A\000\000\200@\000\000\000@\000\000\000@\000\000\300@\000\000\200@\000\000\240@\000\000\020A\000\000\200?\000\000\300@\000\000\000@\000\000@@\000\000\000@\000\000\020A\000\000\020A\000\000\340@\000\000 A\000\000\340@\000\000\300@\000\000\240@\000\000\240@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000 A\000\000\000A\000\000@@\000\000\000A\000\000\200@\000\000\240@\000\000 A\000\000\000A\000\000\200@\000\000\000@\000\000\020A\000\000\300@\000\000@@\000\000\200@\000\000 A\000\000@@\000\000\340@\000\000\200@\000\000\300@\000\000\340@\000\000\340@\000\000\000A\000\000\200?\000\000\240@\000\000 A\000\000\240@\000\000\240@\000\000@@\000\000\020A\000\000\000A\000\000\300@\000\000\300@\000\000 A\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000\000A\000\000 A\000\000 A\000\000\240@\000\000\200@\000\000\340@\000\000\300@\000\000\020A\000\000\000A\000\000\020A\000\000 A\000\000\300@\000\000\200?\000\000 A\000\000\000A\000\000\000A\000\000 A\000\000\300@\000\000\020A\000\000\240@\000\000\240@\000\000\020A\000\000\000A\000\000\000A\000\000\300@\000\000\000A\000\000\000A\000\000\000@\000\000\300@\000\000@@\000\000\200@\000\000\020A\000\000\200@\000\000\200?\000\000\340@\000\000@@\000\000\020A\000\000\200?\000\000\200@\000\000 A\000\000\200@\000\000\020A\000\000 A\000\000\340@\000\000@@\000\000\340@\000\000\000A\000\000\000A\000\000\200@\000\000\340@\000\000@@\000\000\000A\000\000@@\000\000\200@\000\000\340@\000\000\240@\000\000 A\000\000\000A\000\000\000A\000\000\000@\000\000\200@\000\000\000@\000\000\020A\000\000\200?\000\000\340@\000\000@@\000\000 A\000\000\340@\000\000\000@\000\000 A\000\000\020A\000\000\020A\000\000 A\000\000\020A\000\000\020A\000\000 A\000\000\200@\000\000\200?\000\000\000@\000\000\340@\000\000\340@\000\000\300@\000\000\020A\000\000\200@\000\000\020A\000\000\200@\000\000\240@\000\000\000@\000\000\240@\000\000\000@\000\000\200@\000\000\200@\000\000\020A\000\000@@\000\000 A\000\000\000@\000\000 A\000\000\020A\000\000\240@\000\000\240@\000\000@@\000\000\020A\000\000\000@\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000\340@\000\000\200?\000\000\200@\000\000\300@\000\000 A\000\000\020A\000\000\000@\000\000\000A\000\000\000A\000\000\200@\000\000\240@\000\000\340@\000\000\340@\000\000 A\000\000@@\000\000 A\000\000@@\000\000\020A\000\000\200@\000\000@@\000\000\020A\000\000\300@\000\000\000A\000\000\240@\000\000\020A\000\000\300@\000\000\020A\000\000\240@\000\000\020A\000\000\340@\000\000 A\000\000\240@\000\000@@\000\000\000@\000\000\300@\000\000\300@\000\000\000@\000\000 A\000\000\200@\000\000\000@\000\000\020A\000\000\000@\000\000\000@\000\000\200@\000\000 A\000\000\000A\000\000@@\000\000\200@\000\000\240@\000\000\340@\000\000\300@\000\000\000A\000\000\000A\000\000\200@\000\000 A\000\000 A\000\000\340@\000\000\000@\000\000\300@\000\000\020A\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\020A\000\000\300@\000\000\000@\000\000 A\000\000\240@\000\000\200@\000\000\340@\000\000\240@\000\000\300@\000\000@@\000\000\240@\000\000\000A\000\000\200@\000\000@@\000\000 A\000\000\240@\000\000\340@\000\000\200?\000\000\240@\000\000\000A\000\000\200@\000\000\020A\000\000 A\000\000\000@\000\000\300@\000\000\240@\000\000@@\000\000\300@\000\000\000@\000\000\000A\000\000\020A\000\000\020A\000\000\300@\000\000\000A\000\000\340@\000\000\000@\000\000\300@\000\000\200@\000\000\340@\000\000\000A\000\000@@\000\000\020A\000\000\200@\000\000\240@\000\000@@\000\000\300@\000\000\300@\000\000\020A\000\000\340@\000\000 A\000\000\000A\000\000 A\000\000\300@\000\000\300@\000\000\300@\000\000\020A\000\000\020A\000\000\340@\000\000\200@\000\000\240@\000\000 A\000\000\000A\000\000\300@\000\000\340@\000\000\200@\000\000\300@\000\000\340@\000\000 A\000\000\340@\000\000@@\000\000\200@\000\000\340@\000\000\000A\000\000\340@\000\000\300@\000\000\240@\000\000\200@\000\000\200@\000\000\340@\000\000 A\000\000\020A\000\000\340@\000\000\240@\000\000\340@\000\000\340@\000\000@@\000\000\200@\000\000\340@\000\000\240@\000\000\240@\000\000\300@\000\000 A\000\000\020A\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000\200?\000\000\340@\000\000\240@\000\000@@\000\000\020A\000\000\200?\000\000 A\000\000\020A\000\000@@\000\000 A\000\000\020A\000\000\300@\000\000\240@\000\000 A\000\000 A\000\000 A\000\000 A\000\000\200@\000\000@@\000\000\300@\000\000 A\000\000\340@\000\000\000A\000\000\020A\000\000 A\000\000\340@\000\000@@\000\000\020A\000\000\300@\000\000\340@\000\000\000A\000\000\340@\000\000@@\000\000\200@\000\000@@\000\000\300@\000\000 A\000\000\300@\000\000\200?\000\000\200?\000\000\000@\000\000\020A\000\000\020A\000\000\300@\000\000\300@\000\000\000A\000\000@@\000\000\200@\000\000\200@\000\000\240@\000\000\300@\000\000\020A\000\000\200@\000\000@@\000\000@@\000\000\020A\000\000\240@\000\000\200@\000\000\000A\000\000\300@\000\000\020A\000\000\000A\000\000\000@\000\000\340@\000\000 A\000\000\300@\000\000\000A\000\000\300@\000\000\000A\000\000\000A\000\000\000A\000\000 A\000\000 A\000\000\000@\000\000\200@\000\000\020A\000\000 A\000\000\340@\000\000 A\000\000\020A\000\000\300@\000\000 A\000\000 A\000\000\000A\000\000\200?\000\000\020A\000\000\000A\000\000\000@\000\000\340@\000\000\200@\000\000\000A\000\000 A\000\000\000A\000\000\000A\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000\000A\000\000\240@\000\000\200?\000\000\020A\000\000\000A\000\000\340@\000\000\000A\000\000\200?\000\000\200@\000\000\020A\000\000 A\000\000\200@\000\000\300@\000\000 A\000\000@@\000\000\000A\000\000\200@\000\000\340@\000\000\000A\000\000@@\000\000\020A\000\000 A\000\000\200@\000\000\200?\000\000 A\000\000\340@\000\000\020A\000\000\020A\000\000\000A\000\000 A\000\000\340@\000\000 A\000\000\000@\000\000\200@\000\000\200@\000\000 A\000\000\200@\000\000\200@\000\000\020A\000\000 A\000\000 A\000\000\300@\000\000\000A\000\000\000A\000\000\240@\000\000\200@\000\000\020A\000\000 A\000\000\200?\000\000\000@\000\000\300@\000\000\200@\000\000\340@\000\000\340@\000\000@@\000\000\300@\000\000\300@\000\000\200@\000\000\200@\000\000\000A\000\000\200?\000\000\000A\000\000\340@\000\000\340@\000\000\200@\000\000\000A\000\000\340@\000\000\240@\000\000@@\000\000\300@\000\000 A\000\000\020A\000\000\300@\000\000\340@\000\000\020A\000\000\000A\000\000\200@\000\000\340@\000\000\000A\000\000\000A\000\000 A\000\000\200@\000\000\300@\000\000 A\000\000\200@\000\000@@\000\000\000A\000\000 A\000\000\020A\000\000\300@\000\000 A\000\000\000A\000\000\240@\000\000\000A\000\000\200?\000\000 A\000\000\200?\000\000\020A\000\000\340@\000\000\000@\000\000\200@\000\000\240@\000\000\340@\000\000 A\000\000\300@\000\000\200@\000\000\000A\000\000\240@\000\000 A\000\000\300@\000\000 A\000\000\240@\000\000@@\000\000\240@\000\000\300@\000\000\000@\000\000@@\000\000\000@\000\000 A\000\000 A\000\000\300@\000\000\240@\000\000\340@\000\000\300@\000\000\200@\000\000\020A\000\000\240@\000\000\200?\000\000\240@\000\000\300@\000\000\240@\000\000\240@\000\000\240@\000\000\200@\000\000\200@\000\000\300@\000\000\200@\000\000\240@\000\000 A\000\000 A\000\000 A\000\000\300@\000\000\020A\000\000\020A\000\000 A\000\000 A\000\000\240@\000\000\200@\000\000\020A\000\000\000@\000\000\240@\000\000\200@\000\000\000@\000\000 A\000\000\200@\000\000@@\000\000 A\000\000\000A\000\000 A\000\000\000A\000\000 A\000\000\000A\000\000\340@\000\000 A\000\000\200@\000\000\000A\000\000 A\000\000\340@\000\000\340@\000\000\300@\000\000\000A\000\000 A\000\000\340@\000\000\240@\000\000\340@\000\000 A\000\000@@\000\000@@\000\000\000A\000\000\000A\000\000\020A\000\000\200@\000\000\000A\000\000\240@\000\000 A\000\000\020A\000\000 A\000\000 A\000\000\200?\000\000\340@\000\000\340@\000\000\000A\000\000 A\000\000\200@\000\000\020A\000\000\000@\000\000\340@\000\000\200@\000\000@@\000\000\340@\000\000 A\000\000\020A\000\000 A\000\000\000A\000\000\240@\000\000@@\000\000 A\000\000\020A\000\000\200@\000\000\300@\000\000\340@\000\000\300@\000\000\340@\000\000 A\000\000\300@\000\000\240@\000\000 A\000\000@@\000\000 A\000\000 A\000\000\300@\000\000\200@\000\000\240@\000\000\300@\000\000\000A\000\000\300@\000\000\300@\000\000\240@\000\000\020A\000\000\000A\000\000 A\000\000\340@\000\000\300@\000\000\300@\000\000 A\000\000@@\000\000\000A\000\000\020A\000\000\240@\000\000\240@\000\000\200?\000\000\000A\000\000@@\000\000@@\000\000 A\000\000\300@\000\000\000@\000\000\300@\000\000 A\000\000\200@\000\000\020A\000\000\000@\000\000 A\000\000@@\000\000\340@\000\000\340@\000\000@@\000\000\240@\000\000\000A\000\000@@\000\000\000A\000\000\340@\000\000@@\000\000@@\000\000\300@\000\000\300@\000\000\200@\000\000\020A\000\000\240@\000\000\300@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000 A\000\000\200@\000\000\000A\000\000\240@\000\000\200?\000\000 A\000\000\200@\000\000 A\000\000\340@\000\000\240@\000\000 A\000\000\340@\000\000\000A\000\000\200@\000\000\020A\000\000@@\000\000\000@\000\000\020A\000\000\340@\000\000\300@\000\000\340@\000\000@@\000\000\000A\000\000\300@\000\000@@\000\000\240@\000\000@@\000\000 A\000\000\200@\000\000\200@\000\000\020A\000\000\300@\000\000\340@\000\000\200@\000\000\300@\000\000\240@\000\000\200@\000\000\200?\000\000\000@\000\000\000A\000\000\200@\000\000\340@\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000@@\000\000\200@\000\000 A\000\000 A\000\000\200@\000\000\240@\000\000\020A\000\000@@\000\000 A\000\000\300@\000\000 A\000\000@@\000\000\340@\000\000\000A\000\000\200@\000\000\000A\000\000\000A\000\000\200@\000\000@@\000\000\200@\000\000 A\000\000@@\000\000\000A\000\000\300@\000\000\200@\000\000\200@\000\000\200@\000\000\300@\000\000 A\000\000\240@\000\000 A\000\000\020A\000\000\000A\000\000\340@\000\000\300@\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000\300@\000\000\000A\000\000\340@\000\000\300@\000\000\200@\000\000\340@\000\000\200@\000\000\300@\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\340@\000\000\340@\000\000\300@\000\000\300@\000\000\000A\000\000\200@\000\000\000A\000\000@@\000\000\200@\000\000\300@\000\000\340@\000\000\000A\000\000\200@\000\000\240@\000\000\300@\000\000@@\000\000\200?\000\000@@\000\000\020A\000\000\020A\000\000 A\000\000 A\000\000\200@\000\000\000@\000\000\200?\000\000\340@\000\000\340@\000\000\020A\000\000\200@\000\000\340@\000\000\020A\000\000\200@\000\000\020A\000\000\000@\000\000@@\000\000\340@\000\000\020A\000\000@@\000\000\240@\000\000\340@\000\000\300@\000\000\000A\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000\200@\000\000\340@\000\000\340@\000\000\020A\000\000\000A\000\000\200@\000\000\200@\000\000\000@\000\000\340@\000\000\200@\000\000@@\000\000 A\000\000\200@\000\000 A\000\000\200@\000\000\000@\000\000\200@\000\000\340@\000\000\200@\000\000@@\000\000\000@\000\000 A\000\000\240@\000\000\240@\000\000 A\000\000\020A\000\000\340@\000\000\200@\000\000\020A\000\000\240@\000\000\020A\000\000\340@\000\000 A\000\000\200?\000\000\200@\000\000\200?\000\000\300@\000\000\020A\000\000 A\000\000 A\000\000\340@\000\000\300@\000\000\300@\000\000\340@\000\000\300@\000\000\020A\000\000\200?\000\000\200@\000\000 A\000\000\200@\000\000 A\000\000\020A\000\000\020A\000\000\340@\000\000\000A\000\000\020A\000\000\020A\000\000\340@\000\000\300@\000\000\340@\000\000 A\000\000\300@\000\000\300@\000\000 A\000\000@@\000\000\000@\000\000\000@\000\000\240@\000\000\340@\000\000\200@\000\000\200@\000\000@@\000\000\340@\000\000\200@\000\000\200@\000\000\200@\000\000\020A\000\000\020A\000\000\020A\000\000\000@\000\000\000A\000\000\200@\000\000 A\000\000\000A\000\000\200@\000\000\340@\000\000 A\000\000\300@\000\000\020A\000\000\000A\000\000\240@\000\000\020A\000\000\200?\000\000 A\000\000\200@\000\000\000A\000\000 A\000\000\340@\000\000\020A\000\000\000@\000\000\300@\000\000\240@\000\000\000A\000\000\200@\000\000@@\000\000\340@\000\000\340@\000\000\020A\000\000\240@\000\000 A\000\000\340@\000\000\200@\000\000@@\000\000\200?\000\000\300@\000\000\020A\000\000\340@\000\000\020A\000\000 A\000\000\000A\000\000\000A\000\000\200@\000\000 A\000\000 A\000\000\000A\000\000\020A\000\000\020A\000\000\340@\000\000\000A\000\000\000@\000\000\240@\000\000\000A\000\000\200@\000\000\000@\000\000@@\000\000\020A\000\000\020A\000\000\300@\000\000 A\000\000\300@\000\000\000A\000\000\020A\000\000\300@\000\000\300@\000\000\000@\000\000\020A\000\000\200?\000\000\200@\000\000\020A\000\000\340@\000\000\000A\000\000\020A\000\000\000A\000\000 A\000\000 A\000\000\300@\000\000\000A\000\000\200?\000\000\340@\000\000\020A\000\000\020A\000\000\200@\000\000\200@\000\000 A\000\000\300@\000\000\000@\000\000\300@\000\000 A\000\000\200@\000\000\200@\000\000\300@\000\000 A\000\000\200?\000\000\200?\000\000\200@\000\000\200@\000\000\300@\000\000 A\000\000\240@\000\000\000A\000\000\200@\000\000\300@\000\000\300@\000\000\300@\000\000\200?\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\340@\000\000@@\000\000\200@\000\000\340@\000\000@@\000\000\240@\000\000\200@\000\000\240@\000\000\000A\000\000\340@\000\000\240@\000\000@@\000\000\020A\000\000\020A\000\000\000A\000\000\020A\000\000\340@\000\000\240@\000\000\240@\000\000\200@\000\000\300@\000\000\300@\000\000\300@\000\000\340@\000\000\340@\000\000\340@\000\000\340@\000\000\200@\000\000@@\000\000\000@\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\000A\000\000\340@\000\000 A\000\000\000@\000\000\020A\000\000\200?\000\000\200@\000\000\020A\000\000 A\000\000\200@\000\000\300@\000\000\020A\000\000\000A\000\000\000A\000\000 A\000\000\300@\000\000 A\000\000 A\000\000\000A\000\000\300@\000\000\300@\000\000\000A\000\000\200@\000\000\300@\000\000 A\000\000\340@\000\000\340@\000\000 A\000\000\340@\000\000 A\000\000\240@\000\000\200@\000\000\340@\000\000\020A\000\000\200@\000\000\200?\000\000 A\000\000\020A\000\000\200@\000\000\340@\000\000\200@\000\000\000A\000\000\000A\000\000\300@\000\000\340@\000\000\020A\000\000\020A\000\000\000A\000\000\200@\000\000\300@\000\000\340@\000\000\000A\000\000\000@\000\000\240@\000\000 A\000\000\000A\000\000\000A\000\000 A\000\000\000@\000\000\340@\000\000\300@\000\000 A\000\000\020A\000\000@@\000\000\020A\000\000\240@\000\000\340@\000\000\340@\000\000\240@\000\000\200@\000\000\000A\000\000\240@\000\000 A\000\000\000A\000\000\020A\000\000\200@\000\000\300@\000\000\000A\000\000\020A\000\000 A\000\000\340@\000\000\300@\000\000\300@\000\000\240@\000\000\340@\000\000\300@\000\000\200@\000\000\300@\000\000\020A\000\000\000A\000\000\300@\000\000\020A\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\200?\000\000\200@\000\000 A\000\000 A\000\000\020A\000\000\340@\000\000 A\000\000\020A\000\000 A\000\000\000A\000\000\300@\000\000\340@\000\000\000A\000\000\000A\000\000\300@\000\000\240@\000\000\240@\000\000 A\000\000\200@\000\000\340@\000\000 A\000\000\000A\000\000\000A\000\000\000A\000\000\340@\000\000@@\000\000 A\000\000\020A\000\000\000A\000\000\300@\000\000\000A\000\000\300@\000\000 A\000\000\300@\000\000\200@\000\000\300@\000\000\000A\000\000@@\000\000\000@\000\000\020A\000\000\000A\000\000\240@\000\000 A\000\000\000@\000\000\240@\000\000\000@\000\000\000A\000\000\020A\000\000 A\000\000\200@\000\000\000A\000\000 A\000\000 A\000\000\300@\000\000\000A\000\000\240@\000\000\020A\000\000\000A\000\000\340@\000\000\340@\000\000\000A\000\000\020A\000\000\340@\000\000\200@\000\000\020A\000\000\200@\000\000\240@\000\000\200?\000\000\340@\000\000\200@\000\000 A\000\000 A\000\000\300@\000\000\000@\000\000\200@\000\000 A\000\000\000A\000\000\340@\000\000\000@\000\000\020A\000\000 A\000\000\340@\000\000\000A\000\000\200@\000\000\200@\000\000\300@\000\000\000@\000\000 A\000\000\300@\000\000\020A\000\000\300@\000\000\200@\000\000\200@\000\000\340@\000\000\200?\000\000\300@\000\000\000A\000\000 A\000\000\240@\000\000\300@\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000\200@\000\000\020A\000\000\300@\000\000\000A\000\000 A\000\000\000A\000\000\240@\000\000\340@\000\000\000@\000\000\340@\000\000\020A\000\000\340@\000\000\300@\000\000\340@\000\000\300@\000\000\240@\000\000\300@\000\000\300@\000\000@@\000\000\200@\000\000 A\000\000 A\000\000\020A\000\000\300@\000\000\200@\000\000 A\000\000\340@\000\000\200@\000\000 A\000\000\020A\000\000@@\000\000\240@\000\000\000A\000\000\300@\000\000\200@\000\000\340@\000\000\020A\000\000\300@\000\000\000A\000\000\300@\000\000\240@\000\000\000A\000\000\200@\000\000\340@\000\000\000@\000\000\020A\000\000\200?\000\000\000@\000\000\240@\000\000\340@\000\000\240@\000\000\340@\000\000\020A\000\000\020A\000\000\300@\000\000@@\000\000\240@\000\000\200?\000\000\300@\000\000 A\000\000\340@\000\000\020A\000\000\000A\000\000 A\000\000\020A\000\000\240@\000\000\200@\000\000\340@\000\000\300@\000\000 A\000\000\300@\000\000\020A\000\000\000A\000\000 A\000\000\020A\000\000\020A\000\000 A\000\000\340@\000\000\300@\000\000 A\000\000\000A\000\000\340@\000\000 A\000\000\340@\000\000\020A\000\000\300@\000\000\340@\000\000\240@\000\000\000A\000\000\020A\000\000\340@\000\000\020A\000\000@@\000\000\020A\000\000@@\000\000\240@\000\000\000A\000\000\200?\000\000\200?\000\000\340@\000\000 A\000\000\000A\000\000\240@\000\000\200@\000\000\300@\000\000\200?\000\000\340@\000\000\000A\000\000\200@\000\000@@\000\000 A\000\000\000A\000\000\300@\000\000\200@\000\000\020A\000\000@@\000\000\000A\000\000 A\000\000\300@\000\000 A\000\000\300@\000\000\340@\000\000 A\000\000@@\000\000\020A\000\000\300@\000\000\240@\000\000\240@\000\000 A\000\000 A\000\000@@\000\000\200@\000\000\240@\000\000\000A\000\000\300@\000\000\240@\000\000\200@\000\000\300@\000\000\200@\000\000 A\000\000\340@\000\000\020A\000\000\200@\000\000 A\000\000@@\000\000\000@\000\000@@\000\000\000A\000\000\340@\000\000\240@\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000 A\000\000\300@\000\000\020A\000\000\000@\000\000@@\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000\340@\000\000\200@\000\000\200@\000\000\000A\000\000\300@\000\000 A\000\000\340@\000\000\020A\000\000@@\000\000\020A\000\000 A\000\000\020A\000\000\200@\000\000\000A\000\000 A\000\000\020A\000\000\200@\000\000\300@\000\000\300@\000\000\300@\000\000\300@\000\000\300@\000\000\340@\000\000\300@\000\000\240@\000\000\240@\000\000\200@\000\000\020A\000\000\340@\000\000@@\000\000\020A\000\000\020A\000\000\300@\000\000\340@\000\000@@\000\000\340@\000\000\000@\000\000 A\000\000 A\000\000\200?\000\000\340@\000\000\240@\000\000\200?\000\000\340@\000\000\240@\000\000\020A\000\000\200@\000\000\200@\000\000\000@\000\000 A\000\000\200@\000\000\000A\000\000@@\000\000 A\000\000\340@\000\000\000A\000\000\240@\000\000 A\000\000\000A\000\000\340@\000\000\000A\000\000\000A\000\000\340@\000\000 A\000\000\000A\000\000\200@\000\000\300@\000\000\300@\000\000@@\000\000@@\000\000 A\000\000\000@\000\000\300@\000\000\000A\000\000\240@\000\000\300@\000\000\000A\000\000@@\000\000 A\000\000\340@\000\000 A\000\000\240@\000\000\200@\000\000\020A\000\000\240@\000\000\000@\000\000\020A\000\000 A\000\000\200?\000\000 A\000\000\340@\000\000 A\000\000 A\000\000@@\000\000\020A\000\000\020A\000\000\300@\000\000\300@\000\000\020A\000\000\340@\000\000 A\000\000\300@\000\000 A\000\000 A\000\000\240@\000\000\000A\000\000\200?\000\000\240@\000\000\340@\000\000\000A\000\000\340@\000\000\000A\000\000 A\000\000 A\000\000\000A\000\000 A\000\000\000@\000\000\000A\000\000 A\000\000\020A\000\000\200?\000\000 A\000\000\000@\000\000\300@\000\000 A\000\000@@\000\000\240@\000\000\200@\000\000\000A\000\000 A\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000 A\000\000 A\000\000 A\000\000\240@\000\000 A\000\000\300@\000\000\300@\000\000\300@\000\000 A\000\000\000A\000\000\000A\000\000\020A\000\000\300@\000\000\200?\000\000 A\000\000\200@\000\000 A\000\000\000A\000\000\340@\000\000\200@\000\000 A\000\000\020A\000\000@@\000\000\200@\000\000\340@\000\000 A\000\000 A\000\000\300@\000\000\020A\000\000\340@\000\000\340@\000\000\200@\000\000\000A\000\000\340@\000\000 A\000\000 A\000\000 A\000\000\000@\000\000\200@\000\000\240@\000\000\200@\000\000@@\000\000@@\000\000\020A\000\000\200@\000\000\300@\000\000 A\000\000\200@\000\000 A\000\000@@\000\000@@\000\000\000A\000\000\300@\000\000\200@\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\020A\000\000\340@\000\000\200@\000\000@@\000\000\000A\000\000\000A\000\000\020A\000\000\000@\000\000\020A\000\000\000A\000\000\020A\000\000\340@\000\000\000@\000\000\000A\000\000\200@\000\000 A\000\000\020A\000\000\000A\000\000 A\000\000\240@\000\000\300@\000\000 A\000\000\200@\000\000 A\000\000\240@\000\000\200@\000\000 A\000\000\240@\000\000\200@\000\000\240@\000\000\020A\000\000\200@\000\000\340@\000\000 A\000\000 A\000\000\200@\000\000\300@\000\000@@\000\000\020A\000\000\020A\000\000\020A\000\000\300@\000\000\200@\000\000\300@\000\000\000A\000\000\020A\000\000\300@\000\000\000A\000\000\240@\000\000 A\000\000\200@\000\000\000@\000\000\200@\000\000\300@\000\000\000@\000\000\020A\000\000\020A\000\000\340@\000\000\200?\000\000 A\000\000@@\000\000\200@\000\000 A\000\000 A\000\000\300@\000\000\200@\000\000\020A\000\000\200@\000\000\020A\000\000 A\000\000\000A\000\000\340@\000\000\200@\000\000\000@\000\000@@\000\000\200@\000\000@@\000\000\200@\000\000@@\000\000\340@\000\000\340@\000\000\200?\000\000@@\000\000\020A\000\000\200@\000\000\200?\000\000\020A\000\000\200@\000\000\200@\000\000\020A\000\000 A\000\000@@\000\000\000@\000\000\340@\000\000@@\000\000\300@\000\000 A\000\000\200@\000\000\340@\000\000\300@\000\000 A\000\000\020A\000\000\240@\000\000 A\000\000\340@\000\000\340@\000\000\340@\000\000\340@\000\000\300@\000\000\300@\000\000\240@\000\000 A\000\000\340@\000\000\200@\000\000\020A\000\000@@\000\000\200@\000\000\000A\000\000\200@\000\000\240@\000\000\200@\000\000\200@\000\000\240@\000\000\200@\000\000\240@\000\000\200@\000\000\200?\000\000\020A\000\000 A\000\000@@\000\000\200@\000\000\300@\000\000@@\000\000\300@\000\000\000@\000\000\240@\000\000\020A\000\000\000@\000\000\300@\000\000\200@\000\000@@\000\000\300@\000\000\000A\000\000\300@\000\000@@\000\000\340@\000\000\200@\000\000\200@\000\000@@\000\000\200@\000\000\200?\000\000\200@\000\000\240@\000\000 A\000\000\300@\000\000\020A\000\000\240@\000\000\240@\000\000\340@\000\000\000A\000\000\000A\000\000\000@\000\000\000@\000\000 A\000\000\020A\000\000\340@\000\000\200@\000\000\240@\000\000\000A\000\000\020A\000\000\020A\000\000\300@\000\000\300@\000\000\020A\000\000\200@\000\000 A\000\000\000A\000\000\200@\000\000\200@\000\000\340@\000\000\240@\000\000\200@\000\000 A\000\000\300@\000\000\020A\000\000\240@\000\000\000A\000\000\300@\000\000\240@\000\000\340@\000\000\000@\000\000@@\000\000 A\000\000\000A\000\000\340@\000\000@@\000\000\000@\000\000\340@\000\000\340@\000\000\340@\000\000\000A\000\000\300@\000\000\020A\000\000 A\000\000\000A\000\000\300@\000\000\200?\000\000 A\000\000\200@\000\000 A\000\000@@\000\000\200@\000\000 A\000\000\300@\000\000\240@\000\000\300@\000\000\240@\000\000\200@\000\000 A\000\000\300@\000\000\340@\000\000\000@\000\000\020A\000\000\300@\000\000\000@\000\000 A\000\000@@\000\000\000A\000\000 A\000\000\300@\000\000\340@\000\000\200?\000\000 A\000\000 A\000\000 A\000\000\000A\000\000\200@\000\000\000@\000\000\000@\000\000 A\000\000\240@\000\000\200@\000\000 A\000\000\200@\000\000\020A\000\000\020A\000\000\340@\000\000\000@\000\000\240@\000\000\240@\000\000\240@\000\000\020A\000\000\340@\000\000 A\000\000\020A\000\000\340@\000\000\000A\000\000\240@\000\000\200@\000\000\300@\000\000 A\000\000\020A\000\000\020A\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000 A\000\000\200@\000\000 A\000\000\300@\000\000 A\000\000\240@\000\000\300@\000\000@@\000\000\240@\000\000 A\000\000\340@\000\000\240@\000\000 A\000\000\000A\000\000\000@\000\000\340@\000\000\200@\000\000\240@\000\000@@\000\000\300@\000\000\240@\000\000 A\000\000\340@\000\000\020A\000\000\300@\000\000 A\000\000 A\000\000\200?\000\000\300@\000\000\300@\000\000\000@\000\000\000@\000\000\340@\000\000\000A\000\000\300@\000\000\020A\000\000\340@\000\000\000@\000\000\000@\000\000\200@\000\000\340@\000\000@@\000\000\200@\000\000\300@\000\000\000A\000\000\020A\000\000\200@\000\000\020A\000\000\200@\000\000\020A\000\000\000A\000\000\200@\000\000\200@\000\000\200@\000\000 A\000\000\000A\000\000 A\000\000\240@\000\000\340@\000\000\020A\000\000 A\000\000\340@\000\000\240@\000\000\020A\000\000\200@\000\000\020A\000\000\300@\000\000\340@\000\000\340@\000\000\340@\000\000\000A\000\000 A\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\200@\000\000\300@\000\000\300@\000\000\340@\000\000@@\000\000\020A\000\000\200@\000\000\300@\000\000 A\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\200@\000\000 A\000\000\300@\000\000\300@\000\000\020A\000\000 A\000\000\000A\000\000@@\000\000\200@\000\000\300@\000\000 A\000\000\020A\000\000\340@\000\000\000A\000\000\340@\000\000\020A\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\000@\000\000\000@\000\000\300@\000\000 A\000\000@@\000\000\000A\000\000 A\000\000\000A\000\000\000@\000\000\200@\000\000\240@\000\000@@\000\000\240@\000\000\200?\000\000\000A\000\000\000@\000\000\000@\000\000\340@\000\000@@\000\000\000A\000\000\240@\000\000\200?\000\000\340@\000\000@@\000\000 A\000\000\000A\000\000\000A\000\000\240@\000\000 A\000\000\020A\000\000\340@\000\000 A\000\000\240@\000\000 A\000\000\340@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000 A\000\000 A\000\000\200@\000\000\000@\000\000\200@\000\000\200?\000\000 A\000\000\300@\000\000\300@\000\000\240@\000\000 A\000\000 A\000\000 A\000\000\300@\000\000\200@\000\000\200@\000\000\000A\000\000\240@\000\000\200?\000\000 A\000\000\240@\000\000 A\000\000\200@\000\000\240@\000\000\300@\000\000\000A\000\000\240@\000\000 A\000\000\300@\000\000\340@\000\000\300@\000\000\340@\000\000\000A\000\000\000A\000\000\240@\000\000\300@\000\000\000@\000\000\300@\000\000\300@\000\000\000@\000\000 A\000\000\300@\000\000\020A\000\000\240@\000\000\000A\000\000\200@\000\000\000A\000\000\020A\000\000\000A\000\000\020A\000\000\000A\000\000\000A\000\000\340@\000\000\200@\000\000\200@\000\000\000A\000\000\200@\000\000\020A\000\000\240@\000\000 A\000\000@@\000\000\200?\000\000@@\000\000 A\000\000\200@\000\000\020A\000\000\240@\000\000\020A\000\000\340@\000\000 A\000\000\240@\000\000\240@\000\000\000A\000\000\200@\000\000\300@\000\000 A\000\000\300@\000\000\200?\000\000\300@\000\000\300@\000\000 A\000\000\020A\000\000 A\000\000 A\000\000\340@\000\000\020A\000\000\000@\000\000\300@\000\000\000A\000\000 A\000\000\200@\000\000\200?\000\000\000A\000\000\340@\000\000\240@\000\000\340@\000\000\300@\000\000\300@\000\000\340@\000\000\020A\000\000\300@\000\000 A\000\000\020A\000\000\020A\000\000\340@\000\000\340@\000\000\200@\000\000\000@\000\000\340@\000\000\340@\000\000\020A\000\000\200?\000\000\340@\000\000\000A\000\000\020A\000\000\340@\000\000\200@\000\000\000A\000\000\020A\000\000\020A\000\000@@\000\000\200@\000\000\200@\000\000\200?\000\000\000@\000\000\300@\000\000 A\000\000\200@\000\000 A\000\000\200?\000\000\020A\000\000 A\000\000\240@\000\000\240@\000\000\020A\000\000\300@\000\000 A\000\000\340@\000\000\340@\000\000\300@\000\000 A\000\000@@\000\000\300@\000\000\240@\000\000\000@\000\000 A\000\000\020A\000\000@@\000\000\240@\000\000\000A\000\000\300@\000\000 A\000\000\200@\000\000\240@\000\000\000A\000\000\300@\000\000\300@\000\000\340@\000\000\000@\000\000\340@\000\000\240@\000\000\300@\000\000\300@\000\000\200?\000\000 A\000\000\240@\000\000\240@\000\000\200@\000\000 A\000\000 A\000\000\240@\000\000\300@\000\000 A\000\000@@\000\000 A\000\000\300@\000\000\200@\000\000 A\000\000\240@\000\000\300@\000\000\240@\000\000\200@\000\000\300@\000\000\000A\000\000\300@\000\000 A\000\000 A\000\000\200?\000\000\020A\000\000\340@\000\000\300@\000\000\240@\000\000\000@\000\000\200?\000\000\240@\000\000\240@\000\000\240@\000\000\240@\000\000\000A\000\000\240@\000\000\000A\000\000\200?\000\000\300@\000\000\340@\000\000\000@\000\000\000@\000\000\020A\000\000@@\000\000\300@\000\000 A\000\000\300@\000\000 A\000\000\200@\000\000\340@\000\000@@\000\000\020A\000\000\300@\000\000\200@\000\000 A\000\000\300@\000\000\300@\000\000\000A\000\000 A\000\000\200@\000\000\000@\000\000 A\000\000\300@\000\000 A\000\000\200@\000\000\340@\000\000\240@\000\000 A\000\000\200@\000\000\340@\000\000\200@\000\000\240@\000\000\340@\000\000 A\000\000\000A\000\000\300@\000\000\000A\000\000\240@\000\000 A\000\000 A\000\000\340@\000\000\300@\000\000\300@\000\000\000@\000\000\300@\000\000\200@\000\000 A\000\000\300@\000\000\340@\000\000\300@\000\000\200@\000\000\300@\000\000 A\000\000\020A\000\000\200@\000\000\240@\000\000\020A\000\000\300@\000\000\300@\000\000\300@\000\000 A\000\000\020A\000\000\000A\000\000 A\000\000\300@\000\000\000@\000\000\020A\000\000 A\000\000\200?\000\000\340@\000\000\020A\000\000\300@\000\000\340@\000\000\020A\000\000@@\000\000\300@\000\000\000A\000\000\240@\000\000\000A\000\000\000A\000\000\300@\000\000 A\000\000\300@\000\000\200@\000\000 A\000\000\300@\000\000\340@\000\000\300@\000\000\240@\000\000\000A\000\000\200@\000\000\300@\000\000\200@\000\000\200?\000\000\300@\000\000\200@\000\000\000@\000\000\300@\000\000\300@\000\000@@\000\000 A\000\000\020A\000\000 A\000\000\300@\000\000\300@\000\000\200@\000\000\020A\000\000 A\000\000\200@\000\000\300@\000\000\000A\000\000@@\000\000\200?\000\000\240@\000\000\340@\000\000 A\000\000\300@\000\000\200@\000\000\200@\000\000\020A\000\000 A\000\000\300@\000\000 A\000\000\340@\000\000\240@\000\000\300@"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\350U\212I@\014\031I\220\335ZI0\t\025I\232j\352J\260`3I@\302\373H\200\307\036J\340\374\210H\314\n,J@\265\310H\000\245+H\020\325\021I\340\002\211H\331\023\025K\240O\370H IoI@UnIp\tPI\320\276<I\324\250=J\000\322RI\200\370\210H\020\256&I@(\245H\340o\367H\240\026\017I\200\236\225I\200\337LH\3000\024H\300b\272H\200\r\377H`{\242I@q[IT\322\244J\200\034VH\200iAIp,\252I\000aEI@\353OH\200\345SI0\356\033I \221\330H\340\r\027I \247\364H\000\355\222H\000)\325I\200\005\211H\320\201<I\300\036%I@v\213H\340\344\023IP\007fI \343\266H\240p\007IP\243\'I\320ASI H\211H\300M\246I\240\252hI\200\tWI0\306uI\340>\261I`\023/Ipr(I\324\275AJ\220*>I\300\244UH\000\231\300H\300\261\264I@j\260H s\260Ip\243wI\000J\334H\000\004\227H@4\371H\020\340\364I \243OI\300\nDH\340}\330H\220r\rI\360i\216I\200\031\227G\020\020=I\200E\354HPcxI\360!8I\300\2541I@\325\314H ?\331I`\361\213I0\235\022I\330\355\203I(\372\247I\240)\244H\330\261;J \335\027I\000:/H\200\031OI\340\254pI \361\224H\300\224\251Hl\211!J }\005IP\271\\I\200+\200H`\350\373H\200sYH`\351\322H\270\025\275I\240\n\210Hp\357?I\260V|I\360\334JJX\341\225I\350\242\256I~\340\204J\340\020\304H\300M\201H \241\324H\200*\237GH,\246I\020\373AI\340v\312H\260\220\007I \206AI\240\245\tI\340\2124IP\346\304Ip}_I\000\234\034I`\255\241H\230\347\244I\240w\270Hp\340=I\000fYI@r`H\000\007+I\200\002YH\200\016\303H\000\005\256H\220\304\002I\000\250\271H\240\367BI\020\023\031I\200\314\373H@\3307H`\251\350H\240\270\313H\000\3646I\360\246(I\000\320\364H\000\225\363H\014\255\tJ0\344VI\200\0107H0\221\317I`\272\362H\300QeI\300\307\221H\240{=I\200\314\320H\000\003\374Hh\330\312I\300\023\345H`\261\247HH\002.J\240\330\346H !\302H\240\315\310H\300\177[I\220\343OI@+\006H\340\267\331H\246x\204J\210\204\354I@>\265H\200\255\034H\360e@I\010\332\230I@\256eI\300\275\322H`\364\306H\200\216eI\250@\235Ix\226\241I0\"\305I\0208vI\300\357\271H\240o\342H\340_\020I\220\224WI\240?\\I\310\n\014J\300\334^H\316r\221J\360\024\271I0\342/I0\335\272I`\326}I\200Z\300H 6\270H\220\313+I`\322\270H\240\364\304I4]\025J\310A\014J`\266BI\340u\207H\000\374\260H\310G\236I\240E\215H q\223H\320A:J T\323H0g\201I\000\227gH\300\224\006Ih*\232JPo.I\200\332\226H \361\271H\020_9I\260q&I\3406\307H \304\007I\200\240\006I\240T&I\360\312\023I\200\013\335H`*\267HHd\266I\360\2337I\320\'vI@U\036I\300/\274H\220\006QI@\376\333HpH=I0z\256I\300\361\214H\240X\271H\340r\332H\200\277\321H\340\311\007I\300\030\271H\260?\025I\020\277\004I\200J\344H`j\227H\340?\230H\020\037TI\220\271\037I\240\305\271I \303\020I`M\013I\200woI\260\023\030I`\305\200H\340\257KI\340\316\272HP\355\224I\320\302JI\"\336\274J\340\2223I\200\022\016H\220\016uI`\213\340H`\371}I\240\210\230I\300z\261H\360E9I`V\305H@\307JH\2006\241H\300\244\265H\360\3332IP\356sI\300\331\324H8/\022J\300D\255H(T\224I\020\304-I \336\370H\300\364\250H\000\"\"I@\363\216H\240\272RI\300U\000H !\376H\000\022\243H\000x\336I@\363RHH\004\030J8\210\234I\200\351\246H8b\222I`\3652I\340\357QI\240E\236H\254\023\203J~C\224JpW\034I`T:I \371\372I\240\375\254Hp\221\003I\240U\023I\240\236\231I\260t\005I\200\364\365GPT7I@\216\211I\300\203SHp\361fI0FwI\200\207\240H\032\202\356J\000@=I\360\021\277I\200\270\232H\020\013\261I`\240\231H@\002\366H\330\0259J\300\373\372H\330\225\200I`\005\205H\360rXI\240\316\270H\364W\nJ\000\257\300H,Q\021JpS\221I\240\206|I\210\307+J foI@\360\240H\340\227\376H\010[\303I0\304%I\260\026$Ip\"\000I\000\245\362H@\343\373H@S\246H`\'\233H\340^\025I\340\301\203I \351RI H%I\300\204HH\020#\002I`\222\257H\220\266YI0\271.I \035\273H\360\266!I\340\022aI\\\2461J`\321\005I\300\360\031I\200\306\221H@\241\025I\370\202\265J\240/\344H\020\232sIP\371\013Ixw\244Ip\251pI\350\032\227J\300\222PI\340\253\304H\240\305\326H\010\206\221I\200g_H\000\003?H\320njI\010t\361I`\365$I\260\242\033I 7`I0\000\010I\340\033\334H\240[\266H\240\327\220I@Z\242H\02061I\340,$I\000\311\024I\200\020\035I\300\024\034I\320\236!I\300\365>I\340h4I\000\026\257H@\301\032I\000\222\322H\300\313\255H \210\301H\300\014\366H@j\013I\240VPI\340\343\031I\300\351zH\300\304\267H`\226\246H\230\211\277I\300\345\217H\220:\016I\340\026\212H\340\253\242H\220\331\243I\300}+H\240OnI\000@\377HH\244\245I\240\217\337H\300\\YI\270t\255Ih@\224I ChIP\354SJ`\363\320H \345HI\300\013:I\260S>IPj\177I`\211\315H \323\235H\300\2234I\240I\362H\220AcI\300\336\217I xXI@\340\210H\3003\237H B]I\300\3375J \233dI\000\243\321Hp\357\352I@U\244Ihl\274I m\303H\340\'!I@&5I\200\033?H@\347\023IPz\322I`0\266I\360U]I\200>9I\200\021\"I`\023!I\200\323?H\300\233\017J\340\320\271H \366\220H@\230\250H\200\3171I\020\226\353I\204FIJ\320\203jI\200\365\306H\340\313\314Hh[\326IP\305\025I`\263\321H\000#SI\220\205yI\340<\243H\260y\246I\220\010&I@G\033J\260\025cI\200\307\372G\224\216?J \325rI \322\260H@,\'H ]\240I\334t3JH\360\251I \031\016I\220i\306I@\016%I\300\005\001Ip\317\235I`\344\334H\260\342\032I \222\330H\360\243\322I@\224NI\300\024\356H\240\367\214I\200\346yI@\336\005H \265BI\234\231\204K\300\340\017I\360\215\032I\240\250\313H@\253\373I\014t\014J\200\260\206H`d\203H\240\001\324H\240\350\212I@RMI\340\205&I\300A\273H`G\345H \031<I\200\016\342G\300}\337H )\314H \245\360H0\014\360I\340\261kI\000\227>I\200#\264H\220\274\016I\240\372jI(\217\271I@~\265H`\020(I@@\254H\360tBI\240\244\034I\0003HHpX~I\340dLJ \337\337H \336PI\210>\230I\000)\310H\200\335\260HP;\020I\366\022\210Jh\031QJ`\247\303H\220\201%I\360\0004I\360\034HJ\340^\245I\210\345\010J\340\035\017I\200\367_I\350\253\271Id\343\002Jp\320lI\000\335\\HH\004\343I .\276H\200\226\276H\020XVI\020\243NI\000\356\255Hx!.J@\t\350H\200N>H0\316\240I0\3514I\300\310YI0A+I\360\275eI\340\332@I@\224\321H\340\037wI\240\332!I\300\005\365H\260\255\247I\3002\300H\340\021\242HP\2123Ix\313+J\000\010\234H \355\351H \300\256I\250K\243I\3407 I\000\357\340H\240\373[I\200oLH a\367H\300\255pH\020\326\242I@\342`H@\371}H\236\t\242J`\217\276H`V\204H\020a\031I\2005\245H\360\217\033I\000\243}H\000Z\010I\300\360\014H\300Y\343H@yHH|\0147JH\r\253I\000q\336H0\212JI\000\204\035I\200;\345I\200\314\314H \032+Ix\372\273I\340`\237H\000\230PH\340\320bJ\300W\"I@o9H\340(\200H\310\322\034J@;\311H\340(\355H O\314H \217\272H@\326\006I0\030\217I\200\214\334G\200\026\370H\240\231\276H\300\\qH0\013\221I0oYI\340\313\214I\200\033KH\370\030\323I \236\355H\370\235\232I\220\311?I\010\220\251I\340\357\361Hpt9IPf\006I\340\201\335H`5\273I0-,I \314\304H`\345\253H\310\026\213I\2005)I\370(\260I`D\266HP\203\035I\200\376\322IPJXI`\326\030I\200\272)H\260\243IJ0\030\010I`\251\253H\270E\372I\240t\233H\000\272\321I\330\320\207I0\332*Ix\215\306I`\006\236H\340$bIx\'\357I bKI\260\346\036I\274\307\033J\010\353\226I`G\274I\340\030\224H\200UlH@\2060I\200jRH\034\255\'Jb\005\377J\360\376GIpwUI\000\027WI\200\231-I@*\351H\260w_I\220\2702I\260\304\nIp\352\023J\320\313\177I@D\233H@\000\262I\0001yHh7\016J`V\204H\010\234\236I\260\301\002I \373\265H0\010\030I\300\267.I`\275\344H\340h\007I\200\026?H\340\343\320H \177\220H0\214\311I`|\233H0S^I`ijI0\234YI\030_?J\340\345\224I0\353JI\200OBI\210\305\226I\022\004\332J\000MCH`\357\231H\020BnI\240m\320H\300\264\310I\320hOI\200\337\007I\210\264\225I\300]mH\340\177\314H\340}5IP\3776Jd\365=J\340\021\221H\030\\\331I\320L\002I\200A\206H0\2738I\200\207\336HP\262gI\364\0070J\3509\310I\340\330PI\300\251\366H\020Q[I\000\250TI\340\375\204I\350\357\210Ip)fI\370\200\270I@,0I\300\224\002H@\t\276H\300\221+H\310\253\213IP\301\200IP\235.I\340\244\rI@\300\360JLc\013J\250\214\217I\320v|IH\027\264IP\277JI\020?\033I`0\241H\360\243~I\200\3125H\300g\023I\300\221\256H\300\3551H@ETH@\267\212H\340\270\356H\260#\265I`\372aI\320\036MI\360t?Ip\310.I\300\302\tI\310R\325I\220\205\346I@\004\235H@]\343H\304\244\025J\340\314\256I(\321\225I\310Y\037J\000O\344I\200#@I\350\266\241J\340;\325Hp\337\214I\010\2310J\360#.I@\341VH\000\243\311H0\377\236I\200Z\257H\340W\275H\240\340\027I\240\307\361H0\273\241I\000B\330I\260\027\237I\200\315\rI\200\264\237H\240\324\266H\320\354\202J \370\313H\240\003\312Hp\240]I\324\256\203J\340\237EI\200J\227H\340\316(I\000\350\365G\340\307\320H\020eAI\340\026\360H`\316\206H\200\023AH\200\361\202H\320\3738Ip\257\014I\200\345\306G@\\dI\240\306\260H\360]CI\220\007\257I\030\212\264I\200\211\231H\350O\237J\000\034\000I@\365\307H\320\333\035I\200\371\325G`\240\336H\340\240=I\360\240,I\300\273THP\302uI\300\213DH\340\026%I(\307\215I\300\212UH\000\255\357G\360W(I T9I(\310\327I\244\\\026J@\357\352H\\\312\nJ \016\032I\000\326jG\340=\215H\360\257\235I\300\2145Hhl\350I\330k\335I\220K,I\320uCI\020\217+I\010\227\213I\240W\244H\200\233\221HH\334\271I\300g\366H@\274\231H\220\264KI\300\354WI\320\307\030I\310\206\237I\320\276TI`\374\222H\340\374\245HT\3322J\200\227\263H\360\006\003I\240\250%I\240\036\264H\020J\000I\000J\245H\300\211\251H\200\013\242H@@2I@z\323H\340\017\210H\000_\331H@\037\375HP\315@I,\332mJ\340\311\307H\360\312\207I\200\210\243H\220\344aI\200\007\264G\220\023rJD\251\242J\360X8I\320\2428I\300i\265H@\214\214H\030\223\257J@\270EJ0R\223Ip\376\017J\326\345\247J\300\231\227H\240*\201H0\274\241Ip\303\037I\020?\020I \362\233H\320\375\025I\006\336\210J\300\245\331H\340b\355H\260\006LI\200\221$H\000t\014I\300\n\267H\370\353\273I\234WaJ\320\360\345IX\010\236I\320\004\213I\200\031cH`\031fI\200L\257H\210[\037J\240\200\330H\200\001\250H0\250&I\220%uI0\005AI\200X=I`3\025I@\350lI\200\261\031I\210\034\262I`\350\341Hp\345?JP\212\232I\340\225\367H\200\007dI\000P\201I0\323\313I\200,\016H\300\246RH@\3330I\2001\276HP\274\003I\220\304\013I\300\0034I(j\264I\300\\OI\200-]I\2608[I\300\n5I\000\224\231H0\224\034I`\350\371H\300\201\255H`&\030I\020\274(I\250w\201I\020\377\246I\200\335\204H@\235\244H\340\303\023I\000\217lH \352\251H\000\023\257H\300\364\224H\000\266\031H\270\235\247I\000\331\366H\000\343\207I\240=\001I\260k\317I\340iBI\300\244\002I\300F.I\260\247\tI`!\337H\200b\247H\200\252\010I\020\273\036J\020m\023I8\327 J`c\030I\200\0067H\2000\345H\220\252#Ip\304NI\270\374\355I0\007\333I\300gUH \274\221H\000\037\300H\020\207PI\200h\353H\256l\226J\000\361pHX\265\372I\320O\177I\260Y\025IP\377\032I\240\325\334H\000\002.I`\336\206H\300>\017I@T/J \307\211H\300\215 IP;UI\000\250MI\240\347[I\300KHH\200\037\266HPK@I\200~\210I \2108I\210\302qJ`\325\243H\020\215\035I\200\331\321H0\217jI\360=\343I\000T\367G\030\372\252I\300\364\225H(R\202I\204\0247J\220\372pI\000\340~H\340N\213I@\2618I\200\232\357H\010+\225I\300\202\312H\270*\313J\200?\260I\340\361\265H\320\002~I\360\212\002I\310n\260I\350\035\004JP\313*I\360k5I\260\0351IT\343WJ$dxJ\240\270\252H\320\033\262I`\304\001I \321\207H\300\007\260Hp\257\213IX(\232I\200\365:H\260\274\033I\340\234\316H\020\231\001J\220/.I04\014IP,\001Ipu\277I8&\334I\240R\252I\340\021\206H\260Y2I \344\000J8U\212J\300\032BH\240\227cI\020\224HI,`2J \343\243H`s\013I\000\344\357H\300\232JI0E\027I\340\353\315H\200\007[IP\312\tI@Y\201Ib\343\217J0\367\310I\340\337\202H\300\246%H\250\311\226I\200\016\020I\360\3238Ip\304\003I\300\t\313H\200\007&Ip\002hIpg\000J@\214wH\340\345\372I\000=\243H\240\230\361H\300\353\256H\300\213\022H\340Y\210Hp\246\276I\010q\202I\260m\231I\260\202\003I\300\254~I\340ExI\300=\"IT(BJ\260\261\016It\010\021J\240\313\272I\220\253\344I\000\275@I\320\335\017I\300cXH@Q\205Ip\227\rIpF\016I\340\325\244H\300\310\337H\020\215TI\300\323\231I\200\237\241Hp\364\323I\340\336\377H@t\211H\200\243\226I\200\346\365H\262\251\206J\220\014\010I\300.?I\200\004)H\200\332\363H\240maI\020\307\013I\274\232*J\000\213\236I\340\003\245H\250\0236J0^\242I`\255\305H`\232\rI\020\235/I05]Ip4\013I@\215@Ip\335\031I\300^\265HH&\203I@\032\252H\220A\221I \224\307H\252\241\257J\200\244pH\000\213GH\340\n\325Hf\372\234J\000\377\320H\300L\tI\340\264\rI\020\376\003I\200\025\205H\250\360\372I\200?\344HX(\232I\320\0245I\200Q\274H\000\235\036I\340G:I\300r\235H\000\007\303H\200Z\331H@&\345H\360\024\330I\340-nI\340\3423I\340\335\256H0\025MI\340,\303H\340\302\254H W\242H<\367\014J`\004iI\200\0363H \324!I\000a\013I\254@8J\240\322EI@<\201H\210\212\242I\220\3260I@&\314H\220SZI\200<eI\200HlH\270\335\210I\320\323mI\220[eI\340\262\224H\364\232>J\300\207\377H\260*\034I\200\206\257H`\363\014I\260?\005I a/J\020\310\001I\320|VI`\252\025I\030\227\230I\210\266\272I0\303\021I\240V\266HP)2I\340b\212I@\215XIp\307kIp\235\023I\260\224KI\210\006\214I\360I\031I\020\241\006I\3305\215I`#\210H\210e\255I\010\302\004J\300x\243H\240A\241H\200\266JH\300\227\277H\340\243\323H@z\006I\000T\255J\000\266\034IH\300\216I\000\022DIx\207\250I \3473I@\352\035I\300\372\245H\000t\016I`\006\370I\300\334\303H`4\223Hp\010WI\360Q?I\200\352\343H\200\375\344H\240\366\377H\350\357\335I`\256\364H\340b\236H\320\377yI\020\336FI\300\341\014I\030S\226I\200\007gH \344\254Ih\003:J\000\273]H\240\034\245HP\334ZI\200\261\327J\000\276:I\340\266\rI\030\317\265I\200d\324H0TBI\000y\026I`o\265I\030\014\001J\240\375\232H\000\201\207Ip\n\177I\320\330/I`\t\010I@\360\246I\240\342\321H\320s\016I\3203&I\370\335\311J0\320\264I\300M>I\340\"\370H\240\205\202I\300\272\330H\3600gI\000\271^I\2009\243H`\005\266H\300\222\321I0\214vI\300_\336HP1\002I 3\377H\220\365\204J\260\260\031I\200Y\217H\020\2338I\30012I ,*I\000\335;I\254b\035J\210>\020JpQ-I \376\nI\300\016\'H\300\341\251IZ\310\267J\240\234\232I\330z\225I\260T#I\220\266\271I\250\266\204I\320\037!I\000t\006I0\271[I0\314\334I`\207\330H\020x|IP6nI\000\263\334I\300^\010J\200\206\342H\360\204NIl2@J@\373kI\240\006\212H\320f\tI\360\360\"I\340v\274HH\004\234I@\3114I\320o)I\200\'\342H\240\344\337H@\265\374H\2100\033J\000\023\357H\320\034:I\200|\317H\270\214\241I\200\014\316H@\326\006H\300\256\305H@u\330H\020\211\226Ip\230FJ\340D\357H0*gI \311\252H\000t(H\240\2766I(h\314I\200\322\325H\000\256\262I\210\372\205I\340\0213I\240\273\265H\330\270\314I\000\022\241H\300@(I\336/\227J\000v5H\020\207\022I 1\014I\300\346\023I85\234I@\267\257H\230]\371I\000\n\221H@\216\260H\340\377\324H@\321YH\300\305\374H\310\271\241I\320z\277I@\316\367H\200\0302H@\247UH\200\360\337H\200\003\250H@}bH\370\343\244I\340\024XI\320\000\236I\240\267QI\320\010\000I@y\022H\320\3208I\220\352OI\030\313\241I\000\013\246I@\340@I\340Y#I\200T\267H\200\273iH\250\211\322I\254\351JJ\000#\000H\260\204{I0^XI\260A\247I \322]I\200\341\230Ibi\304J\340\267$I\000C\017H\240\266UI\320\234\tIX\211\233I`\002\310H\240\023\270HV]\261J\240\244!I\020\014QI\220\326$I\240C\303H\260}jI\200knI\200\365\341H\200\334\026I\360jPI@\245\333H\240v\263H\340\303\306I\300\360\306H *\244H \347\353H\220.\034I\240\333\257I\360xvI\210\315\226I\220;nIHE\201J\200\002\375H\200\365\341H8\352\325IP\n`I\340\257\310H\200T\273Hp\3252I@\013\226H@\032\350H\340\215\243H\200\002\177I\300\r\251It\376\020J\240\314\024J8~\256I \332eI\340\212\374H\220+bI\000#\033I@\034\311H U\343H\020\327\017I@\214zHx\025\271I\330\240\207I`o\354H\340\257\263I\020O#I\300\340\333H0\354#I@\277mH\300\326\271H\360\023*I\n<\315J8\271\200I\340\230\262H\020LAI\312\'\240J\020\215\030J\240X\210H\200\242\005I\270o\235I`\351\362H\250\323)J \322\204I\340\234\tJ@/\340H`\035\036I \\\345HxvAJ\240\344(J`\222\264H\220ybIP\252/I\200\227*Ix\273\212I\030@\326I\300\264\347H\200\321\335H\300\366eH`]\367H\200U\274H\000\372\032I\300\036@I`\321\343HpqYI@f\247H\200\241\256H \206\306HP\021LI\340\236\254H\240\276\331H@\203uH\200\302\250H\324\025%J\000N1I(G\220I`\004\244H`\361\241H\000)\247H\200\016\301I\200vJI\020\376\007Ip\3442I\300\325\261I\000\025\001I\000\013\250H \023\005I\340\317\021I\010\307\275I\000jqIN\014\263J\000~\241H\020\324\306I\240V\306H\000\361\366H\240A\232I\200\316%H@\034\027I\240\262\261H\320e$I`L\325Hl\250&Jxb\235I 5-I\250\233\263I\240\221\037I\220d\307I\340\026\234H0\362\244I\340=\271H0\200\275I\000\212\022H\034\222\201J / I0WII\270\347\255I\214\2313J\220`]I@^\250H\000\210PI\300\360~H@\204\336H \267\321H\360R[I@K\231I\020qoI\320\302pI`\\\214I\000S]H@\300\322H\240/\337HP4\033IP\n/I\200,\001I@\3007I\000;\252H\340\366OI\300b\366HP\315AI \2675I\240\214\271Hp\235kJ\000ALH\260\223\201I\200\260\320HP\2559IP\352\306I \210\022I\000\006\242H\3005YH`\363iI\034E#J\200\2610I`\363\000I\360\357\225I\000b\233H\000\244`H\300S\333H`\254\373H\240\372\200I \0266I\340\3501I\200\263\322H \264\211I\340\272\301H\340\265YI \324\034I\320\273<I`\330\375H \367\227H\020J\014I`\260ZI@M,I@1%Ih\264\266I w\332H\300#\010H(\252\341I\020rPI\250\365\245I\370\235\346I\240\231BI`\234\353H\200f\346H\200Y\235H\254\245\'J\200J7H\320a\243IhR\207I\340\305\377H \002NI@%\376Hp\312IIH\373\230I\200a\353H@\356*I |\207I 6(I \363XIlu Jp\276\010I \303\377H\000>\333H\200,\260H\24092I\020\330\242I \374?I0\362\030IH\347\251I`\013^I\300\355\210H@]\322H\300\321BH\340XCI\220\262\200I@\255\351H\220\364\377I\220p;I\3000\370H\020\032pI \347HI\030\321\211I0\251\272IPw\rJ\240f\310H\030x\005J\300\000II\200#\014J\000pOIX-VJ\350k\301I\354\367\020J\000)nI\200Z\276H`#\206H\320\361 I]`\nK\0001\204H\216\244\253J\010\364\330I0\217gI\300\033#I@h\rH\200\327dH\320\r\004I\320NJI\340<*I@8hI \223?I\200F5J\000\327\221I\330\"\305I\200#\207H\340j2I\340t|I\270\303\000J y\255H\300\336sI\0205\031I\300?yI\310$\244I\340%\274H\300%\364H`}\356H \253^I\234U\253J\340\371\274HHU\200I\000\377LH\200\332\332H\006\353\200K\3201JI\340#rI\300e\232H@-\371I \217\271H\340\251\032I`\261\313H@\321\254I\240\032\277H@\262\352H\220\375\013I\000\202{H\200B\320H\200\230\207G\200\375sIH,\236I\360\261\007I\220\3458I0;\005I\200\373\252I\260\017\021I\340\226\343H\360|\001I\300v\315HH\030\273I0\335`I\000\260\262H\000\352\314H`\253!I\020dVI\240\230\300H\300\341\'I\240z\035I \342,J\230%\224I\344\304&J\000\n\231H\200\262\320I\200\031\177H\300\251\277HP\234\rI\200\022\302H\300\004\030I\340%\nIp5PI\270\321\244I\340[\026I\250\304\234J\340\230>IP$\030I\000w\024I@65I\000P\304H\300\241\250H\340\255\346H\300a\203H\000N\270H\340\031\273H\000>*H@\360RH\340\243\277H\000:\202H@\2623I\240\323\"I\200\263\262Hp&yI\340*\341H0F+I@\323\365H\300\3703H\220B\016I\340\t\337H \204UI\000P(I\000X\205HA\006\031K\200\226uH\200\n\274H4\010\023J@\'mH\240#2J\240i\306H@\345\265H\360\302NI`\230FI\240\247VI\020\036NI\300>\275H\000\322<Hh\365\327I\300\232\021J\350\002\267I\340\353\212H\000\364\253H\000\021\201H@\213\023I\200\034\344H\300x\236I\240\377\242Ip4_I\210\272\264I0IDI\320\300=I\250@\261I\300\323\375H\300\014<I\260\216\274I`x\307H\320\265DI x\304H@^\262H \206/I\000\201\214I\220D\007I \003\336H\2006CI\316\023\267J\240\334\270H\220\334\260I\304>\365J\350\004\241J\340\214\257H\240S\226H\200\337\326H\360\024JI\360\273jI\00075J \312\305H\300D\032I\300\341\020I\200\r\246H\300\351\247H\220\r\005I\340\035\215I\340u\365H\350%!J\240\034eI\330=\241I\220\220!I  \236HPZSI\000\236\276H\000\302\323H\306N\214J\000\036\020H\300\225\333H@=[I\300\374GJ\300\251\303H0\227 I\320HII\300`2H0\201vI\000\207TI\300\227\256H\360\240\261I`\252\327ID59J\210\247RJ\300\302\022I\030\023\263I\200\202\227I@\326\253H\300\251_I@5\357J\3001MI\200q\007H\340\364\255HX5\020J\240\223\240I0\264\021I\220\350\001J`\\\236H\360\305SI ^zI\300\360\331H \031\202H\000C\204G\340\217\227H \003\224H\360\276(I\320QAJ\3007!I\200\343\226H8\217\221I\310\3737J(,\241I\0005>H@Z\346H\340\367\010I\300\216\231H@8\rI\240\344\323Hp\337TI@|\007H\340:\233H\240\227\272H\260c\006I \325\240H\240\347\245H\300\016\002I\200\364\002IPF\233I@J\350H\370\"\334I@\205\277H\340\2659I`\321\357H\220\'\nI\300\\\223H\240\205\003J\300\357\321H(\370\230I`\376\324H \237\240H@\221\315H\360\323\005I\300\324\007I\000\326\272G\000+\\H\360\350SI\300S\204I\350\'\202I e\367I@\271eHPa\032I\000;\323I0H]Ip\t&I\340\234\366H\200\366\242I \014\201H\310\241%JPI\013I`\027\366H\000\242\355H\340\036\323H\020\016sI@\203\360H\310\334\207I\200\nBH\340!\006I\240!\"I@\251>I \370*I+\202\024K@k\350H\000\022\314G\360\t\017I\230gmJ@K\006I\030\376\376I\300\202\237H\300U\340H\200\0030I\340\307\010I\340\241#I@\205CH04]IH\344\262IP\377UI\260KdIp\232\321I\200\323\177H\360s\243I@\344nH\360!PI\240\004\226H`\201\261HB\243\347J\200\033\324I`\300\234H\360pvIX\212\213I\000%\020H\020\321DI ^\345H \274\027I\260\274LI\354\345pJ\000)\256H\200]\'H05\301I \217\026I\300;VH\000\002\227J\200h;I0\0021I@\002\261H\220%\332Ih\337]J\020\3062I\240\177\022I@\322\250Hp\206\014I`H\033IP\'TI@\307\336H\340\317\321H\260_PI@\232\031I\360\224-Ip\241GI@\345\217I`\300\326H\300mGH\000Y1I\220\235\200Ip\016%I f`I8;\243J\350\266\370Ip\206MI\340\362\321H\020\367\014I\200IEH`\027\031I\210FGJ`n!J\200n\206I`\357\343H\000\317pG \217\212H\240\351\264H\270\022\347Ip\211)I4\3770J@\303\204I\270S\333I\320\342aI\000\352\304H\240\277\303H\320\006\206I``\267I\020:\004I`\246\274I\350\244BJ\320\034\330J\000w\tHx\363\305I \036\374H\200\272\033H\200\004\363G\200\221\364H\300V{H?\366\027K\200\342uH\300.\335H`\236\362H\3705\355I\300\0175Ip\327 I@q\336H@\262\rI\200}\021H@\323\247H\200\255~H M\207H\020\327,I@\024\374H\000M\323I 4\263H\240 \310H\240\034\266Hp\232mI`\023\032I \273\353H@S\321HP_JI0\311yI \"HIP\377\330I`\250\344H\230\200\231I\240&,J\320I\001I\200E\253H\300\004tI\330>\314I\340\017\005I\000\326\033J \003AI\270\234\207I\350v\334I\210e\222I@\214`I\340\231\212I@ tH \213\tI\240{xI\300\371\340H\220t\236I@\330\222H\024\242)J \266\337H\204`\033J(\231\213I\340\2002I I\205H \260\316H@[\252H`\003\031I\0007\305H\300\203_H\000\373\277H0\'pI\250<\236I\360\343)I\000\3479I\200OnH\000\315\344H\240\227\360H\2404\355H\240\300\336H\200`\355G\200\350\264H\260\377dI@r\200J\360\214mI@1\221H@l\305H\340~\217H\2401\224I\237L\035K\260\214EI\360\376QI\260\223oIPv I\000\361SI\320\314\203I\220(\013IP\260\005I\200\353jH\340\270\203H\240\226\206H\340\251\003I\320\222\316I\240\200\rI\240HCI:O\255J\000\377\234H\360\222oI@\2636H\320\3602I@\034\305H\340dlI\200L(H@(@IX\001\202I`:\322Hp\334cI\274i?J\260\256\363I\300\352rI`\270\343H\020\022/I\240y\337H\260S\234I\000@\256H\200h\200Id\253\"J0\300\rJ\020k\013IP\036\nI,\017\246J\210+\210I\370u\222I\240>\243H\360\270gI \305\201H\000\373\006I\340\345\231H\300\002\346Ip\247]I \246.I\340\305\201H\200\"\260H0B\002I\370\362\317I\240ztI@O\225H\240\346\363H\000\362$G0\250+I\300l\217I\000X\271H\200\352\327H\200\032aH\000\340*H \243\202H\300\037\310H\340M\227I@n\224Hh\374\322I\340\374\265H\200\257\271H\244\201 JXG\232I`f\265H\340\212jI\244\365\002J\000x\201H\000u\214H\260\177\231I\200_wH\320u:I\370\363\215I \024JJ \257\207H\200\332\022I \'\335H\200\363<I.Z\274J\300\342\302H\340tLI\340\213\215I\320w0I\3001\216H\020\265\026I\260\234AI \313\251H\320\204&IP\007rI\320s`Ix\322\231I\200\350*H \244\030I\200\314\256H\000\004\325H\350\002@J`\326uI\000{\214I\320\005\037I\300q\235H\000\230\231H0{\362I`0\245H\250\344\213I@\363OI\350\340\352I`\356\357I\020\331\003I xnI4\3000J@\3323I0\252YI@\375 I\214\325\242J0\260wI\200\343\330H\000c\026I \305\213H\360#\213I\254%\027J8\030\265I\230\345\221I ;(I\200\021<I\200b\250H@\235\271H\000O\265I\000\351\237I \320VI@\3037H\300f\311HP~=I\300E\224H \201\030I\340\237\205H\000~\240H`\020\361HP\263\331I \252\317H\240\321\242IH\315QJ \013@I\360J(I\270:\207I \223?I@\177\307H@ \020I\320pvI\320\273\tI\340\275\317H\300\247\322H\340\202ZI\200\267\215I\000\225AI\270<\262I@_RI@\201gJ\320\2219I@\202\220H\240\213\326H@\276cH\300__H\200\302\376H\260w(I\374\327\'J\300D\027H\310\376\254I@\267\232H\220g\035I\240\3464IpE\032Ix\237\205I\270\354\225I\000\311\222Hx\362\233I 0ZI@k\335H\240\202\250H\300\363]I\300\271\267H\300a\321H\300\327\357H\200h\nI\240\372\nI\310\234`J\340\310\365H0#\"I\320\2465I\3101\267I\270\311\353I \301\256H\340?SIpY[I`\374\260H\320\250\036I\2102\234I\200\016IH\340\350dI \005.I`\021\244H\000\\\351H@\217\315H\270\317:J`%2I\020\022zI@h\256H0I\304I\304\002\016J\000F\276H\340&\243H\334\326\035J\200e\300H\300iKI@\332\022H\230\034\256IL6iJPRQI\300\235\331H\000vBI`\307\305H@\352\244H\020\300\010I\300\300\260H\200\273CI\200\031MI`9\212H`A\226H\220\2324I`^\264H`T\244H\200t\230H`\201\220H\360\211.I\200V\357I\0006WH\200\254\221H b\020I\360=\037I\020G\022I\340Z<I\320\234kI`\275zI\3202\032I\200\263\315G0\273=I\220\010KI n\220H\260a\023I\240k\343H8\367\320I\000\2060I \350sI W\264H\3209MI\0003\016I\200\026sH\014_[J H\335H\220\361\021J`\204\231H0H\007J@{BH\000 \254H\222C\324J\200\232^I \230HI@\243\016I @\301H\360l!I0}\\J\340\277GI\240\023\375H\200\357+HX\240\260I\000~\371G\320E\204I\032\037\225K`x-I\330N\363IP\222WI\260T\204J\250J\327IP\200\021I\200R\237H\260\000jI \0218I\300\333\254H\200djH\360\326II\260\367;I\000M\345G\0002\325H\300\235\211H 1\302H\210\034\332I\000\027\242I\260\353\034I\370\264\224I\320FPI\000\001QH`\"\326H`\272\240H\340\2555I\000\210eI\200J\360H\030\213\301I\240>GI\000ezI@\204]IHC\306IPQ\026I`\025^I\260OEI \302\214I@\322\234H\260q\207I\220\320\035I\370\314\201Ip\255<I\300\000OH\260u\'I l\024I8\360\236IH\257\375I\0102\215I\260\320\rI\000\203>G \327\277H\260\013\032I8l\374I\320I7Ihm\211I\200j-I\300\233\023I@\001sH\340\371\312H\240x4I\200\020\274G\000\334\305H@\'\225H\340\"\275HP\003\205I \353\344I \353\230Hp/FI`\353\247I v\233H\340u\306H\220\340\302I\350e\231I\340pFI0\344fI\320\031\305I\340\277\335H\000*\343H\300\201\277HP~\"I\000\264\355H\200_JH\000\234lH\300rOH@]>I\200\250\020I \rGI\240\332\277I\300U/H\200{\177Hxa\320I"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\010\222E\000\000\000\000\000\330\273E\000`5E3\213\034G\000\000\000\000\000\000uE\315\320\352F\000\300YD\0008\305E\000\354\016F\000\010\265E\000\000\000\000\000`\270E\315>\036G\000\354\016F\000\310\331E\000\000\000\000\000\000\031E\000`mE\000\0002E\000x\272E\000@\265E\000\220\rE\000@\234E\000\310\331E\000\340\233E\000\000\000\000\000\000\000\000\000\210\034F\000\300\332D\000\000\365E\000\244\021F\000\000\000\000\000\220>E\000\340\275E\000\300\332E\000\314\010F\000\370\241E\000`\352E\000(\252E\000\310\007F\000\350\277E3\223>F\000\260\301E\000\210\034F\000\220\276E\000X\030F\000@\034E\000\000\341E\000X\243E\000\230\257E\000 \210E\000\000\000\000\000\220\276E\000 9E\000 \210E\000\000\000\000\000 \375E\000\000\000\0003\223>F\000,\273F\000\300\006F\000\000uE\0000\214E\000 \210F\000\010\"F\000\220\276E\000 dE\000T\022F\000\220\276E\000@AE\000\270\010F\0000\314E\000h\347E\000\000\000\000\232U\222F\000\000\000\000\0000\314E\000\370\252E\000\300\331D\000\000\365E\000\000\000\000\000\020\016E\000\320;E\000\000\000\000\000(*G\000\260\344E\000\330\302E\000\000\000\000\0008\316E\000\000/E\000\360RE\0000LF\000@\243D\0000\314F\000\310\331E\000\270\225E\000\200\276D\000X\211E\000\300\301E\000\370\260E\000\240\221E\000\330\265E\232igF\0008\316E\000@!E\000\2600E\000P\346E\000\000\000\000\000\360\260E\000\214 F\0008\206E\0000LF\000 \033E\000, Ffl\006G\0000\314E\0008nG\000X\331E\000\000\000\000\000$\031G\000\300\331D\0000\314E3\223>F\000\220\rE\000\200TE\000H\362E\000\030\310E\000\240\214E\000\020HE\000\370\241E\000\270\274E\000P#E\000`mE\000\000\341E\0008\316E\000\310\331E\000\320\363E\000\270\225E\000`\224E\000\360\260E\000\000\000\000\000\210\034F\000@\343E\000\270\225E\000\030\242E\000\200\"E\000\272vH\0000\327E\000(*G\000\000\000\000\000h\347E\000\000\000\000\000`\305E\000@\234E\000\320\202E\000\300YE\000\000\000\000\000\000\000\000\000\000\000\000\000\020\246E\000\220\276E\000\350\277E\0000\314E\000(*H\000\000\000\000\000p\337E\000\000~E\000\210\242E\000\000\000\000f\3660F\000\200\331C\000\310\274E\000\320;E\000\224\036F\000X\243E\000`\275E\000\240\232E\000 \352E\000\024\006F\000\000\000\000\000\220>E\000\000\000\000\000@;E\000\000\000\000\000\000\000\000\000@\237E\000\000\000\000\000\200\331C\000`mE\000\000\000\000\000\000\000\000\000\350\316E\0008\003Ff\366\260F\000\300(E\000\300(E\000\200PEf\3660F\000\340\364E\000\230\205E\000\000\000\000\000\000\000\000\000x\272E\000\240\221E\000h\006F\000\300YE\000\320\266E\00001E\000\004*F\000\000\000\000\000H\362E\232Q\201F\000\250\315E\000\340yE\000\010\005F\000@\234E\000\340yE\000\220\276E\000\000\000\000\000\354\016F\000P\001F\000p\273E\000X#F\000\310\331E\000\020\235E\000\350\221E\0000\314E\000\220>E\000`mE\000\020&F\232aEF\000\030\310E\000\340\016E\000\030\313E\232Y\243F\000\360\260E\000@\030D\000\030\302E\000\000\000\000\000\220\276E\000\270\225E\000 \nF\000 \002E\000|\013F\0000\314E\000\010\306E\000\000\257E\0000\314E\000\320\331E\000\350\277E\000\000uE\0000\375E\000\320(F\000\230\340E\000P\303E\000P\257E\000\010\372E\000\000\000\000\000\360\201E\000\000\000\000\000`\317D\000\200(E\0008nF\000h\352E\000d\037F\000\300YEf\3660F\000P\303E\000\000\000\000\000\230\340E\000\000\000\000\000\320\304E\000\330\236E\000@\234E\000\200+E\000\220\276E\000\000\365EM_ H\000P\001F\000\344\035F\000\364\023F\000\310\331E\000\360\260Ef\376RG\000@\034E\000\360\033E\000\0000B\000 \010E\000X\243E\000h\347E\000\270\225E\000\242\020G\000\000\000\000\000\240\276E\000\000\000\000\000\000\214E\000@\234E\000@\034E\315\314YG\315B/G\000`\337E\000\000\000\000\000\270\354E\000@\316D\000\000\365E\232\337<G\000@;E\000\000uE\000\300\332E\000u\341G\000\340\275E\000\220\276E\000\300YE\000\200oD\000\300YE\232igF\000\240\202D\000  F\000\220\276E\000\000\000\000\000`\342E\000@\234E\315\270\004G\000\200xD\000\360\010F\000\330\260E\000\330\273E\000P#E\0008nF\000P\375E3\223>F\000\320\312E\000\210\242E\000\000\000\000\000\000\000\000\000P#E\000\310\331E\232aEF\000\360\231E\000\000\200?\000\220\276E\000\220>E\000\220\276E\232Q\201F\000\270\225E\0008\337E\000\210\234E\000\360\260E\000\300\332E\000\300\332E\000\360\260E\000\330\004F\000@\"F\000\2403E\000\320\301E\000pzE\000h\347Ef\3660F\000\000\365E\000\3002E\000\360\260E\000 \375D\232\343MG\000\300\250E\000p\311E\000\000\341E\000\310\321E\000\360\033E\000\300YE\000\320\304E\000\270\225E\000\000\000\000f\3660F\000\200\331C\000x\364E\000\340\335E\000\000\000\000\000\2522G\000``E\000@\234E\000\230\305E\000\000\372E\000@\242D\000\220\357E\000\320\331E\000\200(E\000\350\000F\000\220\276E\000\304\rF\000\000uE\000\220>E\000\200\253E\000\000\000\000\000h\347E\000`\256E\000\220\276E\000\300YE\000@\203E\000X\243E\000@\243D\000\000\000\000\000P\262E\000@\234E\000\000\000\000\000@\034E\000\000DE\000\000\000\000\000@\243D\000P\001F\0000\314E\000h\321E\000P#E\000\000\000\000\000\000\231D\000\000\000\000\000\000uE\000\200\327E\000\000\000\000\315\3047F\000p\311E\000\260\241E\000 \210F\000\000\000\000\000\210\234E\000\000\300D\000\200\334E\0000\372E\000\320\320E3\223>F\000\310\331E\000\010\004F\232Q\201F\000@\034E\000X\304E\000\300\370D\000\324\031F\000 \210F\000\000\365E\000X#F\000\320\312E\000\360\033E\000\240\021E\000\360\260E\000pzE\000\000\000\000\000\340\254E\000\274\025F\000\240\000F\0000LF\000\256\303G\000\000\000\000\000\000uE\000\200\276D\232Q\201F\000\240\360D\315\270\204Ff\376RF\000\320\004F\000\000\000\0003\223>F\000\320;E\000`\305E\000\340\014F\000\270\225E\000\000\000\000\000\220\276E\000@\234E\000(\252E\000\330\273E\000$\231F\000 \036Ff\3660F\315\274\025G\000\264$F\000\270\225E\000@\243D\000P\343E\000\000\000\000\232aEF\000\274\030F3\314\240G\000\340NE\000L\000F\000 \210E\000P\251E\232U\222F\000P\001F3\t\024G\000\330\027F\000\000\000\000\000\210\034F\000X\324E\000\254\037F\0008\256E3\213\234F3\217\255F\000\220\276Ef|JG\000\220>E\000\000\000\000\000\310\331E\000\000\000\000\000\300\267E\000\000\000\000\000\220\276E\000\270\225E\000\2207E\000\300\225E\000\220ZE\000\240cE\000 \210E\000\200zD\000X\243E\000 \010F\000\2200E\000\270\225Ef\376RF\000@\034F\000\370\241E\000\270\346E\000\000\000\000\232Q\201F\000\000\000\000\000@\243D\000\240\232E\000\360\260E\000\020$F\000P\021F\000\350\000F\000 \210D\000\020)E\000\000\365E\315\314YG\000\000\000\000\000\300\331D\000\000\000\000\000\310\331E\000\260\314E\0000LF\000h\352E\000\320\nE\000h\347E3\213\234F\000`gE\000\000\000\000\000 \375D\315\300\246F\000X\324E\000\270\361E\000\250\302Ef\372\301F\315\270\204F\000\220\276E\315\314YF\000\000\000\000\315\274\225F\000 \210F\000\000\372E\000\270\021F\0000LF\000\340\177E\000@NE\000\200\253E\000\000\000\000\000P\201E\0008\256E\000@\234E\000\000\026F\000(*F\000\240\014F\000H\301E\000 \010E\000\210\034F\000X\243E\000\000\304E\000\000uE\000\310\331E\0000}E\000\200\273E\000 \210E\000 \210E\000\000\000\000\000\010\274E\000\354\016F\000\310\331Ef\376RF\000\310\331E\000X\243E\232a\305F\000\220\276E\000 \210E\000<\034F\000\220\276E\000\266eG\000\300\332E\000\200\250D\000\000\341E\000 \344E\000\360\260E3\233`F\000\350\316E\000\200\215D\000\300lD\000P\303E\000(\252F\000\220>E\000x\372E\000\270\314E\0000\314E\000\370\330E\000\000\000\000\000\000\000\000\000\000\000\000\000p\273E\000\000\000\000\000\240\245E\000\310\331E\000\310\331E\000\220\276E\000\220ZE\000\000uE\000(\035F\000\000\000\000\000 jE\000\354\016F\r\341\353H\000\250\017F\000\300\331D\000\340yE\000p\372E\000\000\000\000\000P#E\000\300YD\000h\347E\000\000\000\000\000(\252G\000h\347E\000\354\016F\232]\264F\000\340\177E3\233`F\000\0002E\000\300YE\000(*G\000\310\250E\000\000\000\000\000\270\225E\000`\366E\000\010\357E\000\000\372E\000\000\000\000f|JG\000\310\331E\000\244\024Ff\366\260F\000\360\352E\000\000\000\000\000\000\000\000\000\000\000\000\000\340\235E\000\310\250Ef\006uFf\3660F\000\000uE\0000\016F\000\000\000\000\000\300YE3\207\213F\000h\347E\0008\316E\000\030\371E\000\270\225E\000\370\373E\000\000\000\000\000\210\210E\000\000\000\000\000`\237E\000\210\244E\232$\322G\000`\237E\000\000\000\000\000\000\000\000\000 \210E\000\000\000\000\000\000\000\000\000\320lE\315\3047F\000\000\000\000\000\300\332E\000\200;E\000\000\000\000\000\300CE\000\210\326E\315\314YF\000`\371E\000\000\177D\000\000\000\000\000(*F\0000\314E\000\000\000\000\000\360\260E\000\340\235E\000\200+E\000\000\365E\000\300\340D\0008\337E\000\020\275E\000\000\000\000\0004\017F\000\300\037E\000H\325E\000H\302E\000@AE\000h\347E\000\000\000\000\000\360\033E\0000\250E\000p\375E\000\000\244E\000`gE\000P#E\000l\023F\000\000\304E\000P\207E\000\000\000\000\000\330\265E\315\324{F\000\300\225E\000\000\000\000\000\330\273E\000\340yE\000\024\006F\315\310\310F\000\360\260E\000`\305E\000\260FE3\223>F\0000\214E\000\330\273E\000\270\346E\000\324\023F\000\030\007F\000\220\304E\000\330\262E\000\354\016F\000\210\034F\000 \010F\000`\321E3\r%G\000\334\033F\000\000\023E\000P\222E3\223>F\000@NE\000@\234E\000\020\275E\0004\335F\000@\034E\000h\347E\000\000uE\315\300\246F\0000\314E\000X\243E\000 \010F\000X\313E\000p\273E\000\000\000\000\200\322VH\000X\243E\000\250\360E\000\314\013F\000\234\017F\000\000\000\000\000\000\365E\346\325.H\000\000\000\000\000p\030Ef\362\037G\000\000\000\000\000\000\000\000f/\223G\000p\325E\000@\034E\000@\214E\000\354\016F\000@\234E\000 \210F\000\300YE\000`\352E\000p\207E\000\310\331E\000\360\260E\000\200\334E\000P\021F\000h\327E\000(*F\000\220ZE\000\000\372Ef\362\237F\0000\314E\000\360\271E\000`\311D\000\000\000\000\000 \010F\000\340 E\000@\354D\232U\222F\000\220\276E\000\310\331E\000@NE\232U\222F\000\000\000\000\000\000\000\000\315\274\225F\000\000\301D\000\0000B\000\000\000\000\000\220\276E\000`\352E\000\000\000\000\000\270\306E\000\274\025F\232Y#G\000\020\244E\000\240\252E\000`6E\000\030\213E\000\360\260E\000\000\000\000\000\010\346E\000P#Ef\376RF\000@\034F\000\300\300D\000\030\310E\000\200mE\000\200\331C\000 \010E\000\300YD\000\000\362E\000\0002E\0000\257E\000\000\000\000\000\220\252E\000\300YE\000@\234E\315\324{F\315\314\331F\000\000\000\000\000\000\000\000\000\320\312E\000\220>E\000\220\276E\000\020\361E\0000\314E\000\270\311E\000\260\017E\000\270\225E\000\320\312E\000\200\273E\000\200dD\000|\023F\000\\\'F\000\360\260E\000P\021F\000(\212E3\233\340F\000@\243D\000\000\365E\000\220\276E\000\374!F\000h\325E\000(*F\000X\243E\000\270\354E\000\364\007F\000\200TE\000@\034E\0000\262E\0008\321E\000\000\304Ef\006\365F\0000\016F\000\000\000\000\000\200\273E\000\330\nF\000@\234E3\r\245Gf\362\037G\000\234\014F\000\300\331D\000\274\025F\000X\243E\000(*G\000\000\000\000\000\340\235E\000 \210E3\r%G\000(\301E\000\3606E\000\260\207E\000P\001F\000\000uE\000\360\260E\000 \210F\000\000\372E\000\220\276E\000 \313E\000\000\000\000\000\030\006F\0000\234E\000\250\240E\000\000\000\000\000\224\036F\000\000\000\000\000H\373E\000\330\273E\315\324{F\000\350\334E\000\240\350E\000(*F\000P\001F\0000LF\000X\235E\000\360\260E\000P\001F\000\310(F\000\330\273E\000`\277E\000\000\000\000\000X\243E\000\220\276E\0000LF\000\360aEft\250G\000\000\000\000\000\210\234E\000@\237E\000,\273F\000\020\275E\000\000\000\000\000 \313E\000\357\307G\0000\246E\000\340\340D\000\320\312E\000\200\365D\000\274\025F\000\340\324D\000(*F\000\000\000\000\000p\273E\000P#E\000\220\276E\000\000\000\000\000\300\033E\000@\354D\000\320\nE\000\000\372C\000h\347E\000\360OE\000 \010G\000\220\276E\000\000\000\000\000\000\000\000f\3660F\000(\333E\000\360\260E\000\320\231E\000\300\331D\000h\347E\000\240\263E\000`\227D\000\000{E\000\2403E\000\260\274E\000\000\341E\000\250\360E3\233`F\000\274\025Ff\271\275G\232igF\000P\270E\000\000\000\000\000\340\341D\000\000\000\000\000\220>E\200L=H\000\000\365E\000\000\334D\000\320\321E\000\210\376E\000\274\025F\232Q\001G\000\010\305E\000\350\316E\000\000\000\000\000\210\034F\000\260\244E\000h\347E\000\260\224E\000\334\tF\000\250\245E\000\254\013F\000\300\332E\000X\235E\0000\314E\000\034\004F\000\340\361E\000@\316E\000\000\000\000\315\304\267F3\223>F\000\210\034F\000(\252F\000\240yE\000\210\234E\000\220ZE\000\300\331D\000\260\244E\315\324{F\000\000\372E\000x\351E\000\000\000\000\000\210\347E\000\220\357E\000\000\000\0003\223>F\000\330\212E\000\200\032D\000\000\000\000\000 \210E\232e\326F\000\240\014F\000\000\000\000\000\340\254E\000\240\356E\000\340\014F\000\000\000\000\000\000\000\000\000\300\331D\000\220\276E\000\246!G\000@rE\000\220>E\315\3047F\000\210\034F\000@\034E\000\000\000\000\000\000\000\000f\3660F\000\270\225E\000h\347E\000\300\310E\000d\037F\000\354\016F\000\220\035F\000h\347E\232]\264F\000\234\017F\000\360\033E\000\360\307E\000\000.D\000 \010F\000\240 E\315\274\225F\000\030\027F\000\340\235D\232igF\000\330\273E\010\001\030L\0008\316E\000p\311E\000\210\034F\000 \010E\000\220>E\000\000\000\000\000d\037F\315B/G\0008nF\000\000\365E\000\250\305E\000\220oE\000 \010F\232Q\201F\000\000\000\000\000\360\260E\000h\376E\000\020\275E\000\000\257E\000\310\342E\000\000\000\000\000h\347E\0000\314E\000\000\365E\000 \010E\000\310\331E\000X\243E\000\260\320E\315\3047F\0000\314E\000@\324D\000\350\277E\000\354\001F\000\000\221E\000\300+E\000\340\253E\000(*F\0008nF\000P#E\000`\270E\232aEF\000\000\000\000\000\240\227E\000@\234E\000\210\242E\000\360\260E\0000LF\000\210\315E\232aEF\000\330\273E3\223>F\000\000\000\0003\217\255F\0000LF\000\000\000\000\000\200\253E\000\250\302E\000X#F\000@\243D3\213\234F\000\000\000\000\232m\370Ff\366\260F\000\010\254E\000 \231E\000x\366E\000\014\010F\000\320\tF\000\240\245E\000\320\373E\000\200\331C\000\300ZE3\223>F\232Q\201F\000\360\260E\000\240\272E\000`\334E\000\360\260E\315\3047G\315\3047F\000\000\000\000\315\314YF\000\000_E\000\230\257E\000\230\214E\000 \010F\000\000uE\000\000\000\000\000`\013F\000 \210E\000\300YD\315\324{F\000\310\331E\000\010\257E\000\340`E\000@\234E\000\310\365E\000\320\304E\000 \210E\000(\333E\000\370\241E\000(\252F\000\300YD\232i\347F\000\340\214E\000\270\225E\000X\243E\000\000\000\000\000\024\006F\000\274\025F\0000CE\000\310\331E\000@\037E\000 \256D\0000\314F3\233`F\0000\254E\000 \256D\000\320\312E\000\260\025E\000\000\000\000\315\3047F\032\263\007H\000\020\303E\000P\001F\000@\352E\000P\001F\000\300\211D\000P#E\000X\243E\000\300YD\315\314YG\000\000\000\000\000\210\234E\0008nF\000\000\000\000\000x\272E\000\000\000\000\000\000\000\000\000\300\250D\000\240\233Df\362\237F\000\320\265E\000\000\000\000\000\000\000\000\000\250\302E\000X\275E\000\230\330E\000\300\236E\000\220\276E\000\300YD\000\020\275E\000\000\000\000\000X\243E\000p\273E\000\270\225E\000\360\260E\000\220\276E\232Q\201Ff\362\237F\000\370\322E\000PQE\232a\305F\000\320\373E\000(*G\000 \010E\0008\356F\000$\031G\000\274\025F\000P*E\000\030\215E\000\000\000\000\000\000\000\000\0000\314E\000\000uE\000\014\005F\000\220\276E\000h\347E\315\314YF\0000LF\000\300YE\000\330\273E\0000\314E\000\000\000\000\000\240 F\315\314YF\000x\300E\000\000\000\000\000x\372E\000\000\000\000\000\030\313E\000P\262E\000\240\232E\000<\177G\000\000\000\000\000\000\000\000\000\010\346E\000\340\253E\000\340\377D\000H\301E\000\320GE\000\000\000\000\000\000uE\000\350\377E\000\340\222E\000\200\215D\000\210\034F\000\000\000\000\000\270\225E\000X\243E\000\010\257E\000h\347E\000\234\014F\000@;E\000h\347E\000P\001F\000(\333E\000\000\000\000\000\310\331E\000\000\000\000\0000\214E\000\000\000\000\000\220\276E\000\000\306E\0000\314E\000P\001F\0000}E\000\000\000\000\000p\004F\000\200SE\000\320\272E\000\324\003F\000@\234E\000\020\327E\000(*G\000\210\234E\000\330\273E\000\000\000\000\000\030\277E\000\260\263E\0000dE\000 \010F\000\000\000\000\000\360\372E\000\300YD\000\300\332E\000\330\273E\000\000\000\000\315\300\246F\000`\352E\000X\243E\000 \'E\000\300\267E\0000\314F\000\240\327E\000\310\331E\000\000\000\000\315\3047F\000\200\253E\000\000\007F\000\220\276E\000\000\000\000\000\340\235Ef\376RF\0000\314E\000@\243D\000\340\347E\0000\214E\000h\347E\000\300\332E\000\000\000\000\000`\237E\000\000\000\000\000D\034F\000\220\351E\000\000\000\000\000\360\260E\000h\347E3\233\340F\0000LF\000\340\341D\000\000\000\000\000\220\276E\000\000\000\000\000\000\000\000\000\000\365E\000@\314E\000\360\260E\315\270\204F\0008\003F\000\220\276E\000`\337E\000\3007E\232m\370F\000\220\276E\000T\022F\000\354\016F\000(*F\000 \010E\000\324\023F\000\000\000\000\000pzE\315\314\331F\000 \210E\000P\303E\000\310\331E\0000\314E\232igF3\233`F\000\000\000\000\000\000\000\000\000\264!F\000\310\250E\000p\330E\000\000\360E\000\000uE\000(*H\000@\234E\000@\316E\000\000\304E\000h\234E\000\300\014E\000\270\004F\000\200\253E3\227\317F\000\000\000\000\000\250\202E\000\250\263E\000\200`E\000\000\000\000\000\000\000\0003\217-G\000\350\316E\000\000\000\000\000h\347E\000\230\340E\000\270\225E\000\000\302D\000\000\000\000f\362\037G\000\020\027F\000\000\000\000\000\260\301E\000\220\357E\000\330\273E\000\210\234E\000\020&F\000\340\340D\000\310\331E\0000\314E\000\000\270E\232\024\216G\000\310\331E\0000\314E\000 \210E\000d\005F\000(\252F\000\274\025Ff\006\365F\000\030\227E\000`\305E\000P\001F\000\220>E\315\3047F\232igF\000\030\377E\000 \320E\000\300YE\000X\243E\000\250\245E\000\310\331E\000\320\312E\232aEF\000\220;E\000 \010E\000\000\000\000f\3660F\232igF\000\340NE\000`mE\000\000\365E\000\300YE\000\240\301E\000\360\260E\000\340yE\000@\034E\000\220>E\000\330\273E\000\240\202D\000\300\032F\000\000\000\000\000 \210E\000\310\331E\0000\275E\315\001\253G\000\260FE\000\000\000\000\000\274\025F3\005\003G\315\300&G\000\000\000\000\000\310\331E\0000.E\000\000\000\000\315\304\267F\000X\243E\315\3047F\315\324{F\000\200\253E\000\360\260Ef\372\301F\000 \210F\000\270\225E\000\000\304E\000 \010E\000\250\355E\000P\332E\000@\234E\000h\347E\000\000\226E\000\300YD\000@\354E\000\300\245E\000$\231F\000p\273E\000\000\000\000f\376RF\000\220\276E\000\000\000\000\000h\347E\000\000\000\000\000P\262E\000\350\253E\000\270\225E\000\260\273E\000\370\220E\000\000{E\000\000\000\000\000h\347E\000\240XE\000\270\225E\232aEF\000\\\003F\000(*F\000(\237E3\217\255F\000\000zE\000\360\260E\000\360\307E\000\320\304E\000\200\261D\315\320\352F\000@(E\000\300\307E\000\024\006F\232\226\226G\000\200;E\000\340NE\000\000\000\000\000\000\000\000\000\000zE\000\200\253E\0000\327E\315\270\204F\000\200%E\000\264\032F\000\270\306E\000\200\331Cf\366\260G\000\000\277E\000\000\000\000\000\214\034F\000\270\346E\000h\352E\315\213\325G\000\000\252E\000\000\000\000\000\250\263E\232aEF\000\030\310E\000\220>E\000\300\024F\000\360\260Ef\362\237F\000\270\225E\000\220\273E\000\350\216E\000\370\333E\000\364 F\000\210\214E\000\000\000\000\000\354\016F\000\220\004E\000X\243E\000\010\004F\0000\314E\000\340NE\315\314YF\000\230\214E\000\200\256E3\223>F\0008\003F\000\354\016F\0000LF\315\314YF\315\314\331F\000P\004F\000\030\310Ef\372\301F\000\000\000\000\000\200\326E\232aEF\000\000\000\000f\006uF\000P5E\000\310\331E\000 \320E\000X\243E\000X\275E\0000\254E\000PIE\000\000\000\000\000\000\000\0003\223\276F\000\000\000\000\000X\206E\000\314\010F\232Y#H\0000\314E\000\000?D\000P\001F\000\000\000\000\000\340\335E\000\360\033E\000\000\000\000\000@\234E\000\200\253E\000\200rE\232Q\201F\000\000\000\000\000\330\204E\000\030\027F\000\000\000\000\000@\034E\000\220\262E\0000\314E\000\2200E\000\020&F\232igFf\376RF\000p\273E\000 \210I\000`\207Df\356\216H\000\3002E\000@\234E\000x\235E\000\000\000\000\0000LF\0000\346E\000\340\253E\000\030\313E\315\3047F\000X\243E\000\000\000\000\000(*G\000\000\000\000\000\300\267E\000\330\273E\000X\243E\000\370\357E\000\200\334E\000\000\000\000\000\220\276Ef\376RF3\207\213F\000 \266E\000\210\034F\0000\314F\000x\272E\000\210\034F\000 \010F\000\300\301E\0000_Ef\376RF\000\330\212E\000@\243D\000q\320G\000\300\267E\000\260<EzS+I\000$\231F\000X#Ff\006uF\000\000 F\000\220>E\0000\314E\0000\314Ef\376\322F\000\220\276E\232Q\201F\000\350\314E\000\000\000\000\000\000\000\000\000@\243D\000\234\014F\000\270\225E\000P\262E\000\310\331E\000\000\223D\000\300\250D\0000\314E\0000\010F\000L!F\0008\003F\000\000\365E\000\320bE\000\210\234E\000\000zE\315\3047F\000\270\225E\000P\262E\000\320\nE\000@\243D\000\220\276E\000\300YE\000\300\031Ff?\327G\000\000\000\000\000\300\331D\000p\036F\000\270\225E\232aEG\000\260dE\000\200;E\000\360\260E\000\000\365E3\207\213F\000\210\034F\000\000uE\000\000\000\000\000h\004F\000\274\025F\000h\347E\000\030\313E\000`|E\000h\347E\000@\034E\232aEF\000\360aE\000\300\267E\0000\243E\000P\352E\000\004\017F\000\250\202E\000\030\313E\000\000\000\000\000\370\333E\232\030\237G\000\270\225E\000\230\340E\000\274\025F\000\310\245E\000\300\332E\000\270\225E\000\210\357E\000\274\025F\000\300ZE\000\260\344E\000\270\225Ef/\023H\000h\352E\000\000\365E\000\370\207E\000p@E\000\000\000\000\000P\262E\000\000\000\000\000\320/E\000\000\000\000\000\2522G\000\240\202D3\237\361F\000\230\351E\0004\335F\000@\234E\000 \010E\000 \210E\000\000uE\000 \210E\000\000\000\0003\005\003G\000\330\375E\000\220\276E\000\000\000\000\000\000\000\000\000\340\235D\000\230\332E\000X#F\000\300YE\215*\214H\000(\265E\000\300\320E\000\354\016F\000\010\372E\000\000\000\000\0000\314E\000\300(E\000\300(E\000\354\016Ff\362\237F3\035iG\000\220\365E\000\000\365E\000\000\000\000\000\000\000\000f\362\037G\000\000\000\000f\376RF\000\300\331D\000\000\000\000\000\210\234E\0000\314Ef\3660F\232\232\'H\000\000\000\000\000\320\310E\000\010\204E\0000\314E\000\000\000\000\000\210\034F\000\334\025Ff\200[G\000\000\000\000\000\000\000\000\000X\243E\000\000\000\000\000\300%E\000\000\000\000\315\270\204F\000`jE\000\340\350E\000\310\331E\000 \010F\000@\234E\000\270(F\000\000\000\000f\3660F\000`\307D\000(*G\000\000\365E\000\274\025F3\r\245G\000@PE\000\360\260Ef\3660F\000\000\000\000\000(*F\000\300\332E\0000\214E\000\000\000\000\000\310\250E\000@\003F\000\310\331E\000\000\000\000\000\000uE\000\300\332D\000\220\276E\000X\243E\000H\336E\000 \210Ff\376RF\000@\234E\000@rE\000\220\276E\0000\314E\000\000\000\000\0008\310E\000\234\014F\0000\275Ef\376RF\000\320lE\000\200dD\0000\214E\000\360\260E\000\210\234E\000\200\331C\000P\001F\000 \210F\000\000\000\000\315\324{F\000\0002E\000\340\272E\000p\025E\0000\314Ff\3660Ff\006uF\000\200;E\000\310\331E\000\000uE\000\000\000\000\000\330\273E\000`aE\000\200\235E\000\0002E\000\240\203E\000\000\000\000\000\200TE\000\360\341E\000(*F\000\000\000\000\315\304\267F\000\250\023F\000 \210E\000\000\000\000\000(\252F\000\360\260E\000(\252F\0000\314E\000\250\363E\000\310\235E\000\360\260E\000\270\225E\000`\321E\000\220\343E\000\220\276E\000@?E\000p\273E\000\000\000\000\000\200\032F\000\020\316E\000`\021E\000\000\000\000\000\360\260E\000X#F\232aEF\000h\347E\000X#F\000\010\265E\000\210\034F\0008\003F\000\000\000\000\000\310\331E\000H\241E\000\000uE3\207\213F\000\010\357E\000(*F\000\000\000\000\000\360\260E\000X\243E\0000\314E\0008\316E\000\000/E\000\270\225E\000\300\212E\000(\236E\000X\243E\000\270\225E\000@\340D\000X\243E\0000\314E\000\000\000\000\000\250\000F\000\310\331E\000 \010F\000h\327Ef\3660F\232igF\0000\305E\000\220/E\000h\347E\315\324{F\000\274\025F\000\000\000\000\0000\275E\000\240\002E\000\210\034F\000\000\000\000\000\000\000\000\000h\255E\r\016\233Hfx\271G\000 \010F\000\310\331E\000P\001F\000\000\000\000\000\210\234E\000\360\360E\000X#F\000\340\312E\0000\227E\000 \033E\000\000\000\000\0008nF\0008\337E\000\270\225E\000\220;E\000P\303E\000\240\014E\000 \010F\000`\210D\0008\337E\000\370\333E\232Q\201F\000\000\000\000\000 \377D\000\200\331C\000\340yE\000\300\331D\0000\314E\000 \033E\000\360\203E\000\220\276E3\223>Ff\376RF\000x\235E\000(\265E3\t\024H\000\220>E\000|\003F\000x\211E\000\210\234E\000P)E\000\000\254D\000\200\262D\000\360\260E\000\250\363E\000\000\000\000\000\300YE\000X\243E\000\000\000\000\000X\332E\000X\373E\000 \375D\0000\314E\000(\276E\000\340yE\000\310\305E\315\324{F\000\300kDf\3660F\000\330\273E\000\010\240E\000\0002E\000\330\354E\000\030\277E\000(*F\0000\314E\000@\203E\000\270\010F3\213\034G\000\200\034E3\223>F\000\000\200?\000\000\365E\000@\234E\000d\005F\000\270\233E\000\300\256D\000\000\365E\0000nE\000 \301E\000\300\345E\000 \010E\000\300\267E\000(*F\000\360\260E\000\000\000\000\000 [E\232\222\005H\000\220\276E\000P\262E\000,\016F\000\360\260E\000D\034F\000`\244D\000@\003F\000\320[E\0000LF3\223>F\000\200\273E\000@\010F\000@\336D\0000LEf\376RF\0000\356E\000(\252E\000\220\276E\0008nFf\3660F\000\370\212E\000(\247E\000\000\000\000\000@\034E\000\300ND\000`\305E\000\200\032F\000\010\257E\000X#F\000\000\202E\000P#E\000\000\000\000\000\240;E\000h\347E\000\000uE\232]\264F\000 \010G\232U\222F\000\360\260E\000\320/E\0000LF\000X\243E\315>\036G3\213\234F\000x\336E\000\240\321E\000@;E\000\360aE\000\360\033E\000\220>E\000X\243E\000\220\276E\000\030\313E3\223>F\000h\347E\000\260\023F\000\020\300E\000\360\260E\000\014\030F\000\000\000\000f\006\365F\000@\242D\000\024\006F\346\234LH\0008nF\000\270\225E3\233`F3\217\255F\000\340\332D\0000}E\000\370\322E\000\000\000\000\000\340\304E\000\340yE\000\000\000\000\000\000\000\000\315:\rG\000\360\260E\000\220oE\000\0002E\000\270\225E\000\350\253E\000\360\271E\000\000\000\000\000\000\000\000f\372AG\000\000\000\000\000\030\227E\000\250\263E\000\000\000\000\000@\243D3\233`F\0000LF\0000\375E\000\340\222E\000\020\316E\000\020\332E\0000\314E\000<\377F\000\000\000\000\000\300\331D\000\024\006F\000\270\225E\000\000\000\000\000`\305E\000H\301E\232\246ZH\000h\266E\000\000\000\000\000\000\000\000\000\220XE\000\000\000\000\0000\214E\000 \210E\000\000\000\000\000\000\000\000\000@\034E\000\360\260E\000\274\025F\000 \271E3\227\317F\000`\230D\000\340\267E\000\370\322E\000`\204D\000 \010F3\233\340F\000P/E\000\360\000E\000h\347E\000\000\337D\000\000\000\000\000\000zE\000\340\275E\000\360\"F\000D\037F\000\330\273E\000`\237E\000\300\332E\000\000\365E\000\004$F\000\240\263D\000p\273E\232Q\001G\000`\352E\000\000\000\000\000\350\331E\000\360\260E\000\3007E\000\270\225E3\223>F\000\260\336E\000p\273E\000h\247E3\233`F\000\300\267E\000h\347E\000H\301E\0008nF\315\324{F\000 \010Ff\372\301F\315\274\225F3\217\255F\000\000=D\000\230\340E\000\000uE\0008\316E\000X#F\000\000\000\000\000\000\000\000\232U\222F\000\250\202E\000\000\000\000\000\020)E\000\320\004E\000H\301E\000 \010E\000@JE\000H\260E\0008\372E\000\000\000\000\0008\203E\000\000\000\000\000\300\014E\000\240\305E\000 \210E\000\270\303E3\223>F\000\300\331D\000\000\365E\315\371\210G\000(*G\000p\330E\000h\014F\000\270\225E\000h\347E\000\000\341E\000\220\276E\000H\301E\000\000\000\000\315\274\225F\000\270\225E\000\260\202E\000\000\000\000\000\000\000\000\000\000\365E\000\000\000\000\000\220\276E3\233`F\232aEF\000\020\200E\000\250\355E\000\360\260E\000\000\000\000\000\000\000\000\000 \231E\000@\034E\000\260\325E\000\330\273E\0000wE\000h\347E\000 \345D\000h\347E\000\270\306E\000X\243E\000\370\344E\0008nF\000\220\276E\000P\001F\000\200\325E\000\370\322E\000\200;D\000\320\312E\000\000\000\000\000\220DE\000q\320G\000\220\276E\0000\314E\000\210\360E\000\300\206E\000p\273E\000 \210E\000\220\276E\000\030\371E\000\340\027E3\237\361F\000\000\000\000\315\3047F\000\240\375D\000,\273F\000\310\331E\315>\236G\000\230\300E\000\220\276Ef\3660F\000\234\031F\000\220\276E\000\000\000\000\000\200\004E\000(*F\000\310\331E\000\200;E\000\270\225E\000\260\304E\000\300SE\000\340\235E\000\340\335E\000\300\000E\000\220\276E\000\240\276E\000\200\tF\000\274\025F\000\000\000\000\000\020<E\000\000\365E\000T\"F\000\030\313E\000\000\000\000\000\340GE\000\0002E\000\320\304E\000\000\000\000\000\340yE\000\000\000\000\000\000\000\000\000\220\236E\315\3047F\000\350\277E\000P\001F\000\000\000\000\000@\234E3\207\213F\000\220\276E\000\000\365D\000X\243E\0000\314E\000\340yE\000<\377F\000\000\000\000\000\200\205D\000X\203E\000\000\344E\000\374\001F\000X#F\000\310\250E3\213\234F\000\200}E\263\263\300H\000\240oEf\376RF\315\274\225F\000\000\000\000\000\320\004E\000\220\276E\000\210\344E\000`\336E\000\000\365E\000\260\310E\000\000\000\000\000@\243Df\376RF\0000\314E\000\030\313E\000\200\273E\000 \010F\000h\316E\000`mE\000\000\000\0003\223\276F\000`\351E\000\000\365E\000\\\017F\000\210\234E\000\300ND\000\370\351E\0000\311E\000\270\004F\000p3E\000\000\304E\000\370\204E\000\000\000\000\000\220\276E\000P\262E\000\360\260E\000h\352E\000\330\273E\000PNE\000\200VD\000\200\276D\000\240sE\000\210\242E\000\200\032F\000\250\326E\000\000\000\000\000P#Efl\006G\000\310\331E\000\220ZE\000(*G\000\220\276E\000(*F\000\340\235E\000@\030Df\3660F3\025\307G\000 \234E\000@\243D\000h\352E\000\000\000\000f\376RF\0000\314E\232\337<G\000\220\276E\000\220\276E\000\000\000\0003\0216G\000\220>E\000`\321E\000\220>E\000`\237E\000\240TE\0000\314E\000 \210E\000\220/E\000\340`E\000\000\000\000\000p\204E\000\300\332E\000\310\331E\232aEF\000\270\314E\000\300\206E\000\230\340E\000p\273E\000\000\365E\000h\347E\000\010\004F\000\260XE\000\343\024H\000\300YE\000X\243E\000\240\245E\000\340DE\315B/G\000\250\334E\000\310\331E\000\000\372D\000H\301Ef\376RF\000\000\000\000\000\000\026F\000\010\372E\000\030\270E\000\000\341E\000\000\000\000\0000\375E\000\270\225E\000\000\000\000\000h\247E\000\000\000\000f\3660F\000\000\330E\000H\234E\232\323\211G3\223>F\000\000\000\000\000\030\371E\000@\237E\315\3047F\000\220\373E\000x\211E\0000\314E\000\360\260E\000\000\000\000\000x\300E\000 \315E\315\270\204F\315\3047G\0000\314E\000\210\034F\000\000\000\000\0000\314E\000d\033F\232igF\000H#F\000@\020E\000\340\371D\000\252\262G\0000\314E\000`[E\000\000\000\000\000\274\025F\000\000\000\000\000\010\340E\000\210\242E\000\220\276E\000h\347E\000X\243E\000 \210E\000|\021F\0000LF\0000\314E\000\274\025F"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\003\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2508
          }
        }
        string_val: "9q9r18"
        string_val: "9qbdps"
        string_val: "9q97uq"
        string_val: "9qc7q7"
        string_val: "9q9j5h"
        string_val: "9q9pqn"
        string_val: "9qbdwb"
        string_val: "9q8zgn"
        string_val: "9qbdz1"
        string_val: "9q5bcd"
        string_val: "9qc0cz"
        string_val: "9q9xzb"
        string_val: "9q9pq7"
        string_val: "9qc8p9"
        string_val: "9q9j5t"
        string_val: "9qc8zu"
        string_val: "9q8zgm"
        string_val: "9q9k6k"
        string_val: "9q8ymx"
        string_val: "9q9p91"
        string_val: "9q8yvb"
        string_val: "9q97gs"
        string_val: "9qc8pb"
        string_val: "9q9k61"
        string_val: "9qc22s"
        string_val: "9qbs8m"
        string_val: "9q9rwr"
        string_val: "9q8yy7"
        string_val: "dp4d60"
        string_val: "9qbv9s"
        string_val: "9q97gv"
        string_val: "9qc8n9"
        string_val: "9q97f0"
        string_val: "9q8yy7"
        string_val: "9q8zj9"
        string_val: "9q9yn5"
        string_val: "9q9jrr"
        string_val: "9q9k0d"
        string_val: "9q962d"
        string_val: "9q9xzp"
        string_val: "9q9hxn"
        string_val: "9q9pzh"
        string_val: "9q99t4"
        string_val: "9qc00y"
        string_val: "9q99tf"
        string_val: "9qc8q9"
        string_val: "9q97b6"
        string_val: "9qc8qb"
        string_val: "9q8ywv"
        string_val: "9q9x8v"
        string_val: "9qc148"
        string_val: "9q9ke1"
        string_val: "9q9p1y"
        string_val: "dqctfd"
        string_val: "9qbdxv"
        string_val: "9q9d8e"
        string_val: "9q9kdy"
        string_val: "9q3vgx"
        string_val: "9q9r45"
        string_val: "9q9nwb"
        string_val: "9qbdzs"
        string_val: "9q9rbf"
        string_val: "9q9p5h"
        string_val: "9qbesj"
        string_val: "9qc00z"
        string_val: "9q9j58"
        string_val: "9q9ptz"
        string_val: "9q9xzp"
        string_val: "9q9ngd"
        string_val: "9q97dz"
        string_val: "9q9wu8"
        string_val: "9q9kfj"
        string_val: "9q9rck"
        string_val: "9qc70m"
        string_val: "9q9z1f"
        string_val: "dqctem"
        string_val: "9q9p4v"
        string_val: "9q8zjb"
        string_val: "9r4bgp"
        string_val: "9qctpm"
        string_val: "9q9p4h"
        string_val: "9q97rb"
        string_val: "drdv4t"
        string_val: "9q9key"
        string_val: "9q9p17"
        string_val: "9q9htx"
        string_val: "9q94yj"
        string_val: "9q9x8e"
        string_val: "9qc8nk"
        string_val: "9q8yy6"
        string_val: "9q9qcn"
        string_val: "9q9p1x"
        string_val: "9q8yts"
        string_val: "9q9r04"
        string_val: "9qbf0m"
        string_val: "9q9qh5"
        string_val: "9qc1ch"
        string_val: "9q9zbx"
        string_val: "9q9k4d"
        string_val: "9q9qcs"
        string_val: "9qcbbh"
        string_val: "9q9wu2"
        string_val: "dqcter"
        string_val: "9q9x8g"
        string_val: "9qcgc4"
        string_val: "9qc8q9"
        string_val: "9q97cj"
        string_val: "9q8zz3"
        string_val: "9qc001"
        string_val: "9q8yyp"
        string_val: "9q9z05"
        string_val: "9qc8n3"
        string_val: "9q9qf2"
        string_val: "9q9p9d"
        string_val: "9q97bp"
        string_val: "9q9qq6"
        string_val: "9q8vxn"
        string_val: "9qc3q2"
        string_val: "9q9nn9"
        string_val: "9qcb2m"
        string_val: "9qc8pu"
        string_val: "9qcgbg"
        string_val: "9q9ndm"
        string_val: "9q9rur"
        string_val: "9qc2hd"
        string_val: "9q94rc"
        string_val: "9q9p1z"
        string_val: "9q97pr"
        string_val: "9q9k4k"
        string_val: "9q9jy2"
        string_val: "9q9rbv"
        string_val: "9qc24n"
        string_val: "9q9k3h"
        string_val: "9q9nsq"
        string_val: "9q9p95"
        string_val: "9q8vuf"
        string_val: "9q9zbn"
        string_val: "9qc222"
        string_val: "9q9yn5"
        string_val: "9q9xp8"
        string_val: "9q9ypq"
        string_val: "9q9ns8"
        string_val: "9q9pqn"
        string_val: "9q9pzh"
        string_val: "9qbdzd"
        string_val: "9qbdyd"
        string_val: "9qbv96"
        string_val: "9q8zzm"
        string_val: "9qcv29"
        string_val: "9q9rtu"
        string_val: "9q9ryy"
        string_val: "9q8vy9"
        string_val: "9q9z0g"
        string_val: "9q8yyy"
        string_val: "9q97un"
        string_val: "9qcb25"
        string_val: "9q9p4k"
        string_val: "9qbcue"
        string_val: "9q9p18"
        string_val: "9qcbb5"
        string_val: "9q9qbv"
        string_val: "9q9wsd"
        string_val: "9qc0pj"
        string_val: "9q9hvf"
        string_val: "9qc0ew"
        string_val: "9qbhtj"
        string_val: "9q8zn0"
        string_val: "9qc8nk"
        string_val: "9qc24x"
        string_val: "9q9ng6"
        string_val: "9q9p98"
        string_val: "9qbdzd"
        string_val: "9qc0fm"
        string_val: "9q9yyw"
        string_val: "9q5bc9"
        string_val: "9q9k0g"
        string_val: "9rcf89"
        string_val: "9q9xze"
        string_val: "9q8zxv"
        string_val: "9q9k46"
        string_val: "9q97pu"
        string_val: "9q9629"
        string_val: "9qcemj"
        string_val: "9q8yyx"
        string_val: "9q8yuc"
        string_val: "9q8yyv"
        string_val: "9q8yyx"
        string_val: "9q9nnb"
        string_val: "9q9m8t"
        string_val: "9q9k73"
        string_val: "9q9p8z"
        string_val: "9q8yyj"
        string_val: "9q9j8m"
        string_val: "9q8vxz"
        string_val: "9qc8pw"
        string_val: "9q8zt1"
        string_val: "9q94r9"
        string_val: "9q9664"
        string_val: "9q8ytm"
        string_val: "9qc7m8"
        string_val: "9qdnc8"
        string_val: "9qc06z"
        string_val: "9q97fx"
        string_val: "dqctfd"
        string_val: "9q9k0n"
        string_val: "9q9hgn"
        string_val: "9q9hw8"
        string_val: "9q9qcs"
        string_val: "9q9z44"
        string_val: "9q9ng8"
        string_val: "9q9pk3"
        string_val: "9qdn26"
        string_val: "9qc8qc"
        string_val: "9q9hqp"
        string_val: "9q9z0u"
        string_val: "9q9p37"
        string_val: "9qcb24"
        string_val: "9q9jzp"
        string_val: "9q8yvg"
        string_val: "9qc7q6"
        string_val: "9qc8ns"
        string_val: "9rcfb1"
        string_val: "9qc0nn"
        string_val: "9q9qms"
        string_val: "9qc149"
        string_val: "9qbdxx"
        string_val: "9q9nmb"
        string_val: "9qbbpu"
        string_val: "9qbfc4"
        string_val: "9qbdwc"
        string_val: "9q9ngc"
        string_val: "9q9k1g"
        string_val: "9q9pzt"
        string_val: "9q97fm"
        string_val: "9q9p16"
        string_val: "9qc24s"
        string_val: "9q9pmm"
        string_val: "9q9wu3"
        string_val: "9q9hrx"
        string_val: "9q9qf6"
        string_val: "9q9pyd"
        string_val: "9qc1xc"
        string_val: "9qc62k"
        string_val: "9q9yxm"
        string_val: "9qc0j2"
        string_val: "9qc8nt"
        string_val: "9qbc9c"
        string_val: "9q9nm8"
        string_val: "9q9wsc"
        string_val: "9qcu06"
        string_val: "9qcezs"
        string_val: "9q9d3k"
        string_val: "9qbdps"
        string_val: "9q97et"
        string_val: "9q9yg8"
        string_val: "9q96ht"
        string_val: "9q9p54"
        string_val: "9q9nmh"
        string_val: "9qc8qd"
        string_val: "9q9hwv"
        string_val: "9q9nez"
        string_val: "9q8yyp"
        string_val: "9q8ywu"
        string_val: "9q5bc3"
        string_val: "9qcgct"
        string_val: "9q6mt5"
        string_val: "9q9pmw"
        string_val: "9qbfds"
        string_val: "9q9qhy"
        string_val: "9q9jhj"
        string_val: "9q9pqn"
        string_val: "9q9kk6"
        string_val: "9q9p4j"
        string_val: "9qc8r9"
        string_val: "9q8zzc"
        string_val: "9q9pbh"
        string_val: "9q97rd"
        string_val: "9q9kfg"
        string_val: "9q9yxt"
        string_val: "9qbeuq"
        string_val: "9qc8nu"
        string_val: "9q94xp"
        string_val: "9qc00y"
        string_val: "9qbdpe"
        string_val: "9qc11c"
        string_val: "9qdngm"
        string_val: "9q8zze"
        string_val: "9q8ytg"
        string_val: "9r4bfw"
        string_val: "9qbfb3"
        string_val: "9qc0ph"
        string_val: "9q8zem"
        string_val: "9q9yn1"
        string_val: "9q9prw"
        string_val: "9q8yvc"
        string_val: "9qcb2s"
        string_val: "9q8yyu"
        string_val: "9q9nfx"
        string_val: "9q8vuz"
        string_val: "9q9ngd"
        string_val: "9q8zgn"
        string_val: "9q9hs3"
        string_val: "9q9ryg"
        string_val: "9q9k52"
        string_val: "9q9p6u"
        string_val: "9q9nge"
        string_val: "9qbs8w"
        string_val: "dqctbf"
        string_val: "9q8yu9"
        string_val: "9qc1hg"
        string_val: "9q9yn6"
        string_val: "9qbcb9"
        string_val: "9q9p65"
        string_val: "9r4bgp"
        string_val: "9q9jze"
        string_val: "9q9k9p"
        string_val: "9qbdby"
        string_val: "9q9jh6"
        string_val: "9q9k1w"
        string_val: "9q9j99"
        string_val: "9qc3np"
        string_val: "9q8yvf"
        string_val: "9qcbbk"
        string_val: "9q9nmb"
        string_val: "9q9r0z"
        string_val: "9q8zxj"
        string_val: "9qc7r1"
        string_val: "9qc9p3"
        string_val: "9q97g9"
        string_val: "9qbdbe"
        string_val: "9q9r0p"
        string_val: "9qdnc8"
        string_val: "9q8zgb"
        string_val: "9q97fr"
        string_val: "9q9qbx"
        string_val: "9q8yyz"
        string_val: "9q9k6h"
        string_val: "9q8zzz"
        string_val: "9qc11g"
        string_val: "9q9p71"
        string_val: "9q9ngw"
        string_val: "9q9jb8"
        string_val: "9q9k66"
        string_val: "9qbdz4"
        string_val: "9qbc9c"
        string_val: "9qc2hq"
        string_val: "9qc140"
        string_val: "9q99td"
        string_val: "9q9j93"
        string_val: "9qc0eb"
        string_val: "9qc0pf"
        string_val: "9q9yng"
        string_val: "9qc40d"
        string_val: "9q9z14"
        string_val: "dqctfg"
        string_val: "9q9jhq"
        string_val: "9qc3bx"
        string_val: "9q9k64"
        string_val: "9q9m98"
        string_val: "9q978x"
        string_val: "9q9rbq"
        string_val: "9q9p1w"
        string_val: "9qc614"
        string_val: "9q9pyb"
        string_val: "9q9ht4"
        string_val: "9q9pbz"
        string_val: "9q9k08"
        string_val: "9q9x8g"
        string_val: "9q9qcv"
        string_val: "9q8ysq"
        string_val: "9q8zmm"
        string_val: "9q8zu4"
        string_val: "9qc608"
        string_val: "9q9p1u"
        string_val: "9qbb4m"
        string_val: "9qbf03"
        string_val: "9q9zb9"
        string_val: "9q97fz"
        string_val: "9q8yyx"
        string_val: "dqctc1"
        string_val: "9q93uy"
        string_val: "9q8ymx"
        string_val: "9q9x8r"
        string_val: "9qc1z3"
        string_val: "9qc0p8"
        string_val: "9qbb44"
        string_val: "9qcsp9"
        string_val: "9q9p1z"
        string_val: "9q9pz6"
        string_val: "9q99mz"
        string_val: "9qc0je"
        string_val: "9qc1c0"
        string_val: "9qbf9y"
        string_val: "9q9j8r"
        string_val: "9q9p18"
        string_val: "9qc11u"
        string_val: "9q9nk3"
        string_val: "9qc3nr"
        string_val: "9qbdbs"
        string_val: "9q8zzd"
        string_val: "9qc3bh"
        string_val: "9q9k10"
        string_val: "9q9nmw"
        string_val: "9q9d9k"
        string_val: "9q9yxg"
        string_val: "9q9m8m"
        string_val: "9q8zzm"
        string_val: "9q9j9j"
        string_val: "9qc8p0"
        string_val: "9qbgj3"
        string_val: "9rcfb0"
        string_val: "9qc1xf"
        string_val: "9q9kkc"
        string_val: "9r4bft"
        string_val: "9q8yyv"
        string_val: "9q9k6n"
        string_val: "9q8yyz"
        string_val: "9qc613"
        string_val: "9q9nqp"
        string_val: "9q97pz"
        string_val: "9q97em"
        string_val: "9q9635"
        string_val: "9q8ytm"
        string_val: "9qb6zu"
        string_val: "9q8zn2"
        string_val: "9q8yq8"
        string_val: "9q9pwz"
        string_val: "9q97ct"
        string_val: "9q9wsp"
        string_val: "9qcbb5"
        string_val: "9q99qn"
        string_val: "9qcszy"
        string_val: "9q94rr"
        string_val: "9qbdzv"
        string_val: "9q8yt4"
        string_val: "9qc8p9"
        string_val: "dqctfd"
        string_val: "9q9jy3"
        string_val: "9q8vz0"
        string_val: "9q97r7"
        string_val: "9qc2hu"
        string_val: "9q9j4r"
        string_val: "9q8yt1"
        string_val: "9q9p3e"
        string_val: "9qc1ww"
        string_val: "9q9d9k"
        string_val: "9q8yyt"
        string_val: "9q9xz7"
        string_val: "9qc1bf"
        string_val: "9q9k4j"
        string_val: "9q9pkc"
        string_val: "9qcug0"
        string_val: "9q9kdu"
        string_val: "9qbdps"
        string_val: "9q9kdu"
        string_val: "dp4d63"
        string_val: "9q8yy9"
        string_val: "9qcgbk"
        string_val: "dp4d60"
        string_val: "9qcbbp"
        string_val: "9q9hxx"
        string_val: "9q8zyb"
        string_val: "9q5b9x"
        string_val: "9q97f5"
        string_val: "9qcezt"
        string_val: "9q9wy0"
        string_val: "9q8yyw"
        string_val: "9qbesn"
        string_val: "9q9pb5"
        string_val: "9q9k43"
        string_val: "9q9k82"
        string_val: "9qc0fq"
        string_val: "9q9pxt"
        string_val: "9q9nuh"
        string_val: "9q9r4e"
        string_val: "9q9qhx"
        string_val: "9qbv97"
        string_val: "9q9jh2"
        string_val: "9q8ykv"
        string_val: "9qc8qm"
        string_val: "9q7nt6"
        string_val: "9q9r1t"
        string_val: "9q95z6"
        string_val: "9q9j98"
        string_val: "9q9q1e"
        string_val: "9q9k3e"
        string_val: "9q9nt1"
        string_val: "dqct9u"
        string_val: "9q9km0"
        string_val: "dp4d64"
        string_val: "9qc0je"
        string_val: "9q9pqn"
        string_val: "9q9hpc"
        string_val: "9q97fm"
        string_val: "9q9nm9"
        string_val: "9q94q8"
        string_val: "9qc04k"
        string_val: "dp4d2c"
        string_val: "9q962h"
        string_val: "9q9hfz"
        string_val: "9q9k6v"
        string_val: "9q9k3c"
        string_val: "9qc3q0"
        string_val: "9q8yvu"
        string_val: "9q9huy"
        string_val: "dqctfd"
        string_val: "9qc0dm"
        string_val: "9q9ngb"
        string_val: "9q9jhg"
        string_val: "9qbc3q"
        string_val: "9q9p37"
        string_val: "9q9xp9"
        string_val: "9qbdz8"
        string_val: "9q964w"
        string_val: "9qbv96"
        string_val: "9qc0fd"
        string_val: "9q9ke3"
        string_val: "9qc6eg"
        string_val: "9q9pc0"
        string_val: "9q9pxp"
        string_val: "9q9k66"
        string_val: "9qc2hu"
        string_val: "9q9k38"
        string_val: "9qbfb2"
        string_val: "9q8yyy"
        string_val: "9qbs8x"
        string_val: "9qc0hv"
        string_val: "9qc60j"
        string_val: "9q9rbf"
        string_val: "9q9ysp"
        string_val: "9qc8qd"
        string_val: "9q9k62"
        string_val: "9q5bc6"
        string_val: "9qbdxg"
        string_val: "9q95j6"
        string_val: "9q8zn1"
        string_val: "9qc3bx"
        string_val: "9qc8ns"
        string_val: "9q9qtb"
        string_val: "9q9j57"
        string_val: "9q8zgp"
        string_val: "9qc236"
        string_val: "9q9kes"
        string_val: "9qbfdm"
        string_val: "9q9r1e"
        string_val: "9q9j4v"
        string_val: "9q5b9g"
        string_val: "9q9pyb"
        string_val: "9qbdzs"
        string_val: "9q9j3j"
        string_val: "9q9m90"
        string_val: "9q962g"
        string_val: "9qcet6"
        string_val: "9q9m43"
        string_val: "9q9yey"
        string_val: "9q9yju"
        string_val: "9q8zn0"
        string_val: "9qbgmx"
        string_val: "dp4d19"
        string_val: "9q8vyf"
        string_val: "9q9x83"
        string_val: "dp4d1c"
        string_val: "9q9hr3"
        string_val: "9q9p1z"
        string_val: "9q8vku"
        string_val: "9q8zn2"
        string_val: "9q962g"
        string_val: "9q9keq"
        string_val: "9q9pb7"
        string_val: "9q9pzd"
        string_val: "9qc8nm"
        string_val: "9qcgcy"
        string_val: "9q97f8"
        string_val: "9qcemk"
        string_val: "9qc820"
        string_val: "9q9ntb"
        string_val: "9q8vz4"
        string_val: "9q9rux"
        string_val: "9qc60t"
        string_val: "9q97b3"
        string_val: "9q8zkm"
        string_val: "9q9p3e"
        string_val: "9qbdwe"
        string_val: "9q9k51"
        string_val: "9qc8ny"
        string_val: "9qc70j"
        string_val: "9r4c51"
        string_val: "9q8ze9"
        string_val: "9q9ynu"
        string_val: "9qcet7"
        string_val: "9q8zgx"
        string_val: "9q9ybt"
        string_val: "9r4bgz"
        string_val: "9q9pqj"
        string_val: "9q9yxk"
        string_val: "9q9j96"
        string_val: "9rcdxv"
        string_val: "9q9qbf"
        string_val: "9q6mtk"
        string_val: "9qc25d"
        string_val: "9q9xzk"
        string_val: "9q8zgq"
        string_val: "9q9j4h"
        string_val: "9q97cx"
        string_val: "9q9m19"
        string_val: "9q9jhm"
        string_val: "9q9pef"
        string_val: "9qc60f"
        string_val: "9q963e"
        string_val: "9q9p9b"
        string_val: "9qc8zw"
        string_val: "9qc8r9"
        string_val: "9q8ytz"
        string_val: "9q9jb0"
        string_val: "9q9pyy"
        string_val: "9qc2hj"
        string_val: "9q8yyy"
        string_val: "9qc8zc"
        string_val: "9q9ych"
        string_val: "9qc4py"
        string_val: "9qc0f5"
        string_val: "9q9p8r"
        string_val: "9q8yq0"
        string_val: "9q9z8n"
        string_val: "9q9p1q"
        string_val: "9qc7q4"
        string_val: "9qc0ds"
        string_val: "9qb9zv"
        string_val: "9q9d8v"
        string_val: "9q9k8z"
        string_val: "9q9zn8"
        string_val: "9q97f8"
        string_val: "9q97fx"
        string_val: "9q9hz8"
        string_val: "9q9k6j"
        string_val: "9q9k3j"
        string_val: "9q9jxk"
        string_val: "9qbc8u"
        string_val: "9qc1z7"
        string_val: "9qc1wj"
        string_val: "9q9r1n"
        string_val: "9q963g"
        string_val: "9qc0g0"
        string_val: "9q9ybt"
        string_val: "9q8yk9"
        string_val: "9q95j1"
        string_val: "9q9j3p"
        string_val: "9q9k6g"
        string_val: "9qbdxr"
        string_val: "9q9j39"
        string_val: "9qbesn"
        string_val: "9q9pzr"
        string_val: "dp4d48"
        string_val: "9q9p7t"
        string_val: "9q9qkt"
        string_val: "9q9xxk"
        string_val: "9q9pr6"
        string_val: "9qc8qb"
        string_val: "9q8yyf"
        string_val: "9q8yvs"
        string_val: "9q9p1k"
        string_val: "9q9hrp"
        string_val: "9q9ng7"
        string_val: "9qcv14"
        string_val: "9q9k60"
        string_val: "9q9p1y"
        string_val: "9qcgb3"
        string_val: "9q8yyz"
        string_val: "9qbghf"
        string_val: "9q9pkb"
        string_val: "9rcdzg"
        string_val: "9qc8pw"
        string_val: "9q94yj"
        string_val: "9qcb24"
        string_val: "9q8zek"
        string_val: "9q8yyz"
        string_val: "9q9nf9"
        string_val: "9q8yyq"
        string_val: "9q9nn9"
        string_val: "9q9jzj"
        string_val: "9qcc7h"
        string_val: "9q9p1u"
        string_val: "9q93gb"
        string_val: "9q9p1v"
        string_val: "9q9huk"
        string_val: "9q8vz9"
        string_val: "9q8zxy"
        string_val: "9q9k29"
        string_val: "dp4d60"
        string_val: "9q8zn3"
        string_val: "9qc8r6"
        string_val: "9q8yut"
        string_val: "9qbdps"
        string_val: "9q9pb5"
        string_val: "9qc2n2"
        string_val: "9q99mv"
        string_val: "9q9wub"
        string_val: "9q9k2q"
        string_val: "9qcbbr"
        string_val: "9qc0ff"
        string_val: "9qc1wy"
        string_val: "9q8yyr"
        string_val: "9qc0fc"
        string_val: "9q9hxq"
        string_val: "9q9q6b"
        string_val: "9q9q6g"
        string_val: "9q5bc7"
        string_val: "9q8yq0"
        string_val: "9q9nw4"
        string_val: "9q9pq7"
        string_val: "9q9r1b"
        string_val: "9q5b9w"
        string_val: "9q7nt1"
        string_val: "9qcb0m"
        string_val: "9q97gm"
        string_val: "9qbdxq"
        string_val: "9q8yyz"
        string_val: "9q8yw4"
        string_val: "9q9nky"
        string_val: "9q9q4y"
        string_val: "9qcbbe"
        string_val: "9q96jc"
        string_val: "9q8zs4"
        string_val: "9q9p67"
        string_val: "9q9huu"
        string_val: "9qdn25"
        string_val: "9q8zjb"
        string_val: "9q9x8g"
        string_val: "dp4d6s"
        string_val: "9qc7mw"
        string_val: "9qc2n9"
        string_val: "9q8yhd"
        string_val: "9q8ytq"
        string_val: "9q9k4j"
        string_val: "9qcgc5"
        string_val: "9qc615"
        string_val: "9q97fm"
        string_val: "9q9qc5"
        string_val: "9q9d2z"
        string_val: "9q9jzd"
        string_val: "9q9k4b"
        string_val: "9q5bf0"
        string_val: "9q9rbp"
        string_val: "9qbv9e"
        string_val: "9q9yru"
        string_val: "9qc8qc"
        string_val: "9qbb5j"
        string_val: "9q9kee"
        string_val: "9qc0eg"
        string_val: "9q9jzn"
        string_val: "9q8vxt"
        string_val: "9q9hpg"
        string_val: "9q5bdh"
        string_val: "9q9qcs"
        string_val: "9q9nud"
        string_val: "9q9p3f"
        string_val: "9q9p49"
        string_val: "9q9yxs"
        string_val: "9qbb4t"
        string_val: "9q9xzw"
        string_val: "9qcv01"
        string_val: "9q9neu"
        string_val: "dp4d68"
        string_val: "9qc8pg"
        string_val: "9qc269"
        string_val: "9qc4rc"
        string_val: "9q9m91"
        string_val: "9q9jxu"
        string_val: "9qc7mq"
        string_val: "9q95j1"
        string_val: "9qc40e"
        string_val: "9qc0pg"
        string_val: "9q9qcu"
        string_val: "9q9hw2"
        string_val: "9q9pbz"
        string_val: "9qc11v"
        string_val: "9q9dbe"
        string_val: "9q8yyy"
        string_val: "9q9k4t"
        string_val: "9q9pv3"
        string_val: "9q8znb"
        string_val: "9qc407"
        string_val: "9q8zfz"
        string_val: "9qc2hc"
        string_val: "9q9p94"
        string_val: "9q5bcc"
        string_val: "9rcdz6"
        string_val: "9q9zbn"
        string_val: "9qbhsy"
        string_val: "9q9kb8"
        string_val: "9q9wuc"
        string_val: "9q9xpd"
        string_val: "9qbdzf"
        string_val: "9q96j5"
        string_val: "9q9k0n"
        string_val: "9q9p67"
        string_val: "9q9r1v"
        string_val: "9qc1wp"
        string_val: "9qc8qw"
        string_val: "9qc9xm"
        string_val: "9q9p4t"
        string_val: "9qc3nq"
        string_val: "9qc0jp"
        string_val: "9q97uk"
        string_val: "9q8yyq"
        string_val: "9q9nm3"
        string_val: "9q8zzb"
        string_val: "9q9qqr"
        string_val: "9qbv96"
        string_val: "9qc3q0"
        string_val: "9qc7md"
        string_val: "9qc01x"
        string_val: "9q9yjb"
        string_val: "dqctfd"
        string_val: "9qc7qh"
        string_val: "9q99w5"
        string_val: "9q9pq7"
        string_val: "9r4bfm"
        string_val: "9q8yvv"
        string_val: "9qc1x0"
        string_val: "9q9m2q"
        string_val: "9q9p6e"
        string_val: "9q9k6t"
        string_val: "9q7nt0"
        string_val: "9q9j54"
        string_val: "9q9ke0"
        string_val: "9qdn23"
        string_val: "9q9k7h"
        string_val: "9qbv9k"
        string_val: "9qc70m"
        string_val: "9q8yyz"
        string_val: "9q9d9j"
        string_val: "9q9xzz"
        string_val: "9q94z3"
        string_val: "9q7ntd"
        string_val: "9q9k55"
        string_val: "9q9k0d"
        string_val: "9q9nev"
        string_val: "9qc0fm"
        string_val: "9q8yxj"
        string_val: "9q9k6r"
        string_val: "9q9p4v"
        string_val: "9q8ywp"
        string_val: "9q9wsh"
        string_val: "9q8yyy"
        string_val: "9q9nuh"
        string_val: "drdv4m"
        string_val: "9qcbb5"
        string_val: "9q9r04"
        string_val: "dp4d3f"
        string_val: "9q8yyz"
        string_val: "9q8zj9"
        string_val: "9q9d8v"
        string_val: "9q962g"
        string_val: "9qbs8t"
        string_val: "9q9nqu"
        string_val: "9qc1x5"
        string_val: "9qc8qu"
        string_val: "9q8yvc"
        string_val: "9qbdbz"
        string_val: "9q9z15"
        string_val: "9q9jwp"
        string_val: "9q93uz"
        string_val: "9q9yek"
        string_val: "9q9p9r"
        string_val: "9q9k6g"
        string_val: "9q7ntg"
        string_val: "9qc262"
        string_val: "9q97bm"
        string_val: "9qbs8x"
        string_val: "9qc0gh"
        string_val: "9q9qkd"
        string_val: "dqctfg"
        string_val: "9q9wky"
        string_val: "9qcez9"
        string_val: "9rcfb8"
        string_val: "9qcb27"
        string_val: "9q9pfn"
        string_val: "9q9ngf"
        string_val: "9q8zzm"
        string_val: "9qc8n7"
        string_val: "9q9ruv"
        string_val: "9q9jw9"
        string_val: "9q8vxu"
        string_val: "9qcu0d"
        string_val: "9q8yyy"
        string_val: "9qcb2k"
        string_val: "9q9k0u"
        string_val: "9q9zb7"
        string_val: "9q95ze"
        string_val: "9q9j5t"
        string_val: "9q9nq8"
        string_val: "9q9k8d"
        string_val: "9qctpm"
        string_val: "9qc0fp"
        string_val: "9q8zsy"
        string_val: "9q8yyz"
        string_val: "9q9j90"
        string_val: "9q8zkf"
        string_val: "9q9hfx"
        string_val: "9qdn25"
        string_val: "9qcb0h"
        string_val: "9q8ytn"
        string_val: "9qc0jg"
        string_val: "9qbdwe"
        string_val: "9qc1wb"
        string_val: "9qbgmw"
        string_val: "9q9hur"
        string_val: "9qc1xc"
        string_val: "9q9wsp"
        string_val: "9q8yyy"
        string_val: "9qcb09"
        string_val: "9q9nm1"
        string_val: "9qcb0n"
        string_val: "9q8zn9"
        string_val: "9q9htr"
        string_val: "9q8yyf"
        string_val: "9q9q63"
        string_val: "9q9kkd"
        string_val: "dp4d1d"
        string_val: "9q9jx9"
        string_val: "9q9ycx"
        string_val: "9q9htc"
        string_val: "9qc11v"
        string_val: "9q9z44"
        string_val: "9q9nkq"
        string_val: "9q8vjv"
        string_val: "9qc0sj"
        string_val: "9q9rym"
        string_val: "9q9d95"
        string_val: "9q9npw"
        string_val: "9qcgbd"
        string_val: "9q9j4k"
        string_val: "9qbdxq"
        string_val: "9q9hq5"
        string_val: "9q9j3n"
        string_val: "9q9j8q"
        string_val: "9q8zn8"
        string_val: "9q9j63"
        string_val: "9q8ynn"
        string_val: "9q7nwj"
        string_val: "9q9z13"
        string_val: "9q9qqr"
        string_val: "9qc24n"
        string_val: "dp4d12"
        string_val: "9q9njg"
        string_val: "9q8ywd"
        string_val: "9q8vmh"
        string_val: "9q9jx0"
        string_val: "9q9qqj"
        string_val: "9q8ywk"
        string_val: "9q99qn"
        string_val: "9qc04k"
        string_val: "9q9nsq"
        string_val: "9q9p1m"
        string_val: "9qc1xg"
        string_val: "9q8yjm"
        string_val: "9q9hv2"
        string_val: "9q9j97"
        string_val: "9q97bw"
        string_val: "9q9pbq"
        string_val: "9qc2hq"
        string_val: "9q9nu2"
        string_val: "dp4d3f"
        string_val: "9rcf8d"
        string_val: "9q9pqn"
        string_val: "9qcbbk"
        string_val: "dp4d68"
        string_val: "9q9k22"
        string_val: "9qc1c1"
        string_val: "9q97vh"
        string_val: "9q9ngr"
        string_val: "9q8zke"
        string_val: "9q9m2r"
        string_val: "9q9pwx"
        string_val: "9q9nnd"
        string_val: "9q99t9"
        string_val: "9q9wkw"
        string_val: "9q9z1h"
        string_val: "9qc0je"
        string_val: "9q9khc"
        string_val: "9qbesn"
        string_val: "9q95z6"
        string_val: "9q9p3u"
        string_val: "9q9zbf"
        string_val: "9q9py9"
        string_val: "9q9py7"
        string_val: "9q9pwk"
        string_val: "9q9p64"
        string_val: "9qbeum"
        string_val: "9r4bfy"
        string_val: "9q9ngd"
        string_val: "9q9ycp"
        string_val: "9q9nq9"
        string_val: "9qcgbm"
        string_val: "9q9j5e"
        string_val: "9q9yq5"
        string_val: "9q9j3j"
        string_val: "9q8yy0"
        string_val: "9qbdy9"
        string_val: "9q9kec"
        string_val: "9qcgbk"
        string_val: "9q9nqh"
        string_val: "9q9xxs"
        string_val: "9q9nmn"
        string_val: "9q8zfz"
        string_val: "9q7nt0"
        string_val: "9q9nkw"
        string_val: "9qc7qm"
        string_val: "9q97g6"
        string_val: "9q9k77"
        string_val: "9qcbbe"
        string_val: "9q9pq7"
        string_val: "9qdngq"
        string_val: "9q9pxt"
        string_val: "9q9rym"
        string_val: "9q9hqj"
        string_val: "9q9ngg"
        string_val: "9q9keb"
        string_val: "9q9ng6"
        string_val: "9q9k89"
        string_val: "9q9j8k"
        string_val: "drdv4q"
        string_val: "9q97bx"
        string_val: "9qcu18"
        string_val: "9q8yyz"
        string_val: "dqcter"
        string_val: "9q9k4r"
        string_val: "dqctfd"
        string_val: "9q8ykv"
        string_val: "9q9p1m"
        string_val: "9q9k3f"
        string_val: "9q8yuu"
        string_val: "9qbs8t"
        string_val: "9q8zt6"
        string_val: "9q9jxc"
        string_val: "9q9pqh"
        string_val: "9q9p33"
        string_val: "9q9ycg"
        string_val: "9q9kku"
        string_val: "9q8yv9"
        string_val: "9q9keh"
        string_val: "9q9k54"
        string_val: "9q9jw9"
        string_val: "9qbb4v"
        string_val: "9q8zn0"
        string_val: "9q9xp9"
        string_val: "9q9r09"
        string_val: "9qc0pb"
        string_val: "9q8zze"
        string_val: "9q9p4h"
        string_val: "9q8yyu"
        string_val: "9qbfuz"
        string_val: "9qc8pc"
        string_val: "9q9nq5"
        string_val: "9qc2j2"
        string_val: "9q9p4s"
        string_val: "9qc00b"
        string_val: "9q9rut"
        string_val: "9qc03b"
        string_val: "9q9pwc"
        string_val: "9q9hpe"
        string_val: "9q8yuv"
        string_val: "9q9yxg"
        string_val: "9q94rd"
        string_val: "9q9j4n"
        string_val: "9q5bc3"
        string_val: "dp4d1d"
        string_val: "9q9kev"
        string_val: "9q9k4s"
        string_val: "9q9khc"
        string_val: "9qc8qv"
        string_val: "9q9htx"
        string_val: "9q9yxd"
        string_val: "9q9jyf"
        string_val: "9qc1kq"
        string_val: "9qcemh"
        string_val: "9q9q69"
        string_val: "9q8yxk"
        string_val: "9q9x8f"
        string_val: "9q9hsy"
        string_val: "9q9p6s"
        string_val: "9r4bgw"
        string_val: "9q9ynb"
        string_val: "9q9kb8"
        string_val: "9qc9p6"
        string_val: "9qc0hg"
        string_val: "9q9ke3"
        string_val: "9qc3q2"
        string_val: "9q9pys"
        string_val: "9q97v0"
        string_val: "9q5bd5"
        string_val: "9qc8zy"
        string_val: "9q8ytp"
        string_val: "9rcf8s"
        string_val: "9q99tg"
        string_val: "9qc0fr"
        string_val: "9qcet1"
        string_val: "9rcfb3"
        string_val: "9q8vyw"
        string_val: "9q9k1c"
        string_val: "9q9r0r"
        string_val: "9qcubm"
        string_val: "9q9hvf"
        string_val: "9q962q"
        string_val: "9qc012"
        string_val: "9q5bce"
        string_val: "9q9p95"
        string_val: "9q9hvc"
        string_val: "9q9pw0"
        string_val: "9q9r0j"
        string_val: "9q8ymn"
        string_val: "9q9wev"
        string_val: "9q9yn5"
        string_val: "9q8yyx"
        string_val: "9q9x8s"
        string_val: "9q9nkf"
        string_val: "9qbbpb"
        string_val: "9qc3nm"
        string_val: "9qcv15"
        string_val: "9q8zsp"
        string_val: "9q7nwj"
        string_val: "9q9hpn"
        string_val: "9qc11v"
        string_val: "9qc0n1"
        string_val: "9q9pqw"
        string_val: "9qc60z"
        string_val: "9q8zn3"
        string_val: "9q9nmm"
        string_val: "9q94qc"
        string_val: "9qceth"
        string_val: "9qc004"
        string_val: "9q94qd"
        string_val: "9q9p6g"
        string_val: "9q9hfp"
        string_val: "9q9pw3"
        string_val: "9q9yxe"
        string_val: "9q5b9v"
        string_val: "9q97bp"
        string_val: "9qc8qx"
        string_val: "9q9yg9"
        string_val: "9q9ney"
        string_val: "9q9kgh"
        string_val: "9q97gy"
        string_val: "9q9p37"
        string_val: "9qc01d"
        string_val: "9qc829"
        string_val: "9q9r0e"
        string_val: "9q9z20"
        string_val: "9q9p45"
        string_val: "9qc60u"
        string_val: "9q95zv"
        string_val: "9q9ypp"
        string_val: "9q9xzw"
        string_val: "9qbe4c"
        string_val: "9q5bc8"
        string_val: "9q9nft"
        string_val: "9q9nu7"
        string_val: "9qcgb7"
        string_val: "9q99tc"
        string_val: "9qc01r"
        string_val: "9q9kj3"
        string_val: "9q9nkx"
        string_val: "9q9hvf"
        string_val: "9q9ynz"
        string_val: "9qc60y"
        string_val: "9q9nje"
        string_val: "9q8zxu"
        string_val: "9q9ngd"
        string_val: "9qc24s"
        string_val: "9qc004"
        string_val: "9qbdwk"
        string_val: "9q9k1w"
        string_val: "9q9kdv"
        string_val: "9q9nm7"
        string_val: "9qbdwu"
        string_val: "9qbghz"
        string_val: "9q9rvr"
        string_val: "9qc6g2"
        string_val: "9qc8pc"
        string_val: "9q8yy6"
        string_val: "9q963e"
        string_val: "dp4d5p"
        string_val: "9q8yt3"
        string_val: "9qc0pc"
        string_val: "9q8yvf"
        string_val: "9q9hv8"
        string_val: "dp4d44"
        string_val: "9q9pxq"
        string_val: "9q9jxb"
        string_val: "9q9k30"
        string_val: "9q9hxf"
        string_val: "9q8ywk"
        string_val: "9qc9xd"
        string_val: "9q9k3p"
        string_val: "9q99r4"
        string_val: "9q9jy0"
        string_val: "9rcdxv"
        string_val: "9q8ytj"
        string_val: "9q9ycs"
        string_val: "9q9nkd"
        string_val: "9q8zzv"
        string_val: "9qc147"
        string_val: "9q8zgs"
        string_val: "9q9j51"
        string_val: "9q9py9"
        string_val: "9q8yjj"
        string_val: "9q9wt3"
        string_val: "9q8yyp"
        string_val: "9q9hrr"
        string_val: "9q9p19"
        string_val: "9q9pmz"
        string_val: "9q9p1m"
        string_val: "9q8ytu"
        string_val: "9qcv0f"
        string_val: "9q9qce"
        string_val: "9qbesn"
        string_val: "9q8yy5"
        string_val: "9q94qd"
        string_val: "9qc0n5"
        string_val: "9q9x8x"
        string_val: "9q9qce"
        string_val: "9rcdzg"
        string_val: "9q8zec"
        string_val: "9q9m8b"
        string_val: "9qc0jh"
        string_val: "9rcfb9"
        string_val: "9qc8rd"
        string_val: "9q9wsf"
        string_val: "9q9rvn"
        string_val: "9qbf8n"
        string_val: "9q8zmm"
        string_val: "9qcgcw"
        string_val: "9q9k1c"
        string_val: "9q9qcs"
        string_val: "9q9d8f"
        string_val: "9qc7md"
        string_val: "9qbhgb"
        string_val: "9qc8zf"
        string_val: "9qcgbg"
        string_val: "9q9r23"
        string_val: "9qbtxz"
        string_val: "9q9ngb"
        string_val: "9q9qcu"
        string_val: "9q9htx"
        string_val: "9q9k65"
        string_val: "9q9wkw"
        string_val: "9qbdwe"
        string_val: "9q8yqq"
        string_val: "9q9ws6"
        string_val: "9rcfb8"
        string_val: "9q9d2z"
        string_val: "9q9rc3"
        string_val: "9qbfds"
        string_val: "9q9j5n"
        string_val: "9r4bfz"
        string_val: "9q8znd"
        string_val: "9q9k4j"
        string_val: "dp4d1c"
        string_val: "9qc2hn"
        string_val: "9q8yyv"
        string_val: "9q9huq"
        string_val: "9q8yvs"
        string_val: "9q9x8t"
        string_val: "9q9hrb"
        string_val: "9q8zzv"
        string_val: "9q9wt0"
        string_val: "9q9k89"
        string_val: "9q8yyp"
        string_val: "9q8zgf"
        string_val: "9qc261"
        string_val: "9q8ytz"
        string_val: "9q97g5"
        string_val: "9q9p3c"
        string_val: "9q9k3c"
        string_val: "9q8yyx"
        string_val: "9qc24v"
        string_val: "9qc0ju"
        string_val: "9q9k5h"
        string_val: "9q9huw"
        string_val: "9q9hfv"
        string_val: "9qbc3q"
        string_val: "9q9nme"
        string_val: "9q9pb8"
        string_val: "9qc8nr"
        string_val: "9q9pzd"
        string_val: "9q8yu8"
        string_val: "9rcf8s"
        string_val: "9qc11v"
        string_val: "9q8uvz"
        string_val: "9q8yyk"
        string_val: "9q9ych"
        string_val: "9qctr5"
        string_val: "9q99tc"
        string_val: "9q8yyy"
        string_val: "9qbfde"
        string_val: "9q9wsy"
        string_val: "9qbf8k"
        string_val: "9qbfds"
        string_val: "9q963e"
        string_val: "9q9qcj"
        string_val: "9q9p4s"
        string_val: "9q5b9x"
        string_val: "9q9kew"
        string_val: "9q9nsv"
        string_val: "9q9xzz"
        string_val: "9q9hrr"
        string_val: "9q95zu"
        string_val: "9q9hxk"
        string_val: "9q9kdu"
        string_val: "9q9k24"
        string_val: "9q9hw6"
        string_val: "9q9r1t"
        string_val: "9qc0jf"
        string_val: "9qc61k"
        string_val: "9q9k52"
        string_val: "9q9j8d"
        string_val: "9q963k"
        string_val: "9q8yyh"
        string_val: "9q9k28"
        string_val: "9q8yyc"
        string_val: "9q9prh"
        string_val: "9q9pbz"
        string_val: "9q9jy4"
        string_val: "9q8yvz"
        string_val: "9q8yhy"
        string_val: "dp4d44"
        string_val: "9q9x8x"
        string_val: "9qbc9m"
        string_val: "9q9nsk"
        string_val: "9q9jz1"
        string_val: "9q9kk7"
        string_val: "9q9kfs"
        string_val: "9q9ycu"
        string_val: "9qcufj"
        string_val: "9q9nn5"
        string_val: "9q9hp2"
        string_val: "9qc611"
        string_val: "9q9k3q"
        string_val: "9q9z1r"
        string_val: "9q97fc"
        string_val: "9qc2hc"
        string_val: "9q6mt6"
        string_val: "9q9pmz"
        string_val: "9q9wsg"
        string_val: "9q8yyk"
        string_val: "9q8zmw"
        string_val: "9qc257"
        string_val: "9q8yyu"
        string_val: "9qc0fx"
        string_val: "dp4d42"
        string_val: "9qb6r7"
        string_val: "9q9ps3"
        string_val: "9qc01j"
        string_val: "9q9hfv"
        string_val: "9q9ndp"
        string_val: "9q9kdm"
        string_val: "9q9xpe"
        string_val: "9q97f8"
        string_val: "9qdnfe"
        string_val: "9qb6pf"
        string_val: "9q9j55"
        string_val: "dp4d4r"
        string_val: "9qbcd4"
        string_val: "9qc8nk"
        string_val: "9q9rc7"
        string_val: "9q9d8f"
        string_val: "9qc1xj"
        string_val: "9q9hrx"
        string_val: "9r4c4b"
        string_val: "9q7nt8"
        string_val: "9qcemh"
        string_val: "dp4d4r"
        string_val: "9q8yx4"
        string_val: "9q979z"
        string_val: "9q9prj"
        string_val: "9qbdyv"
        string_val: "9q9vyt"
        string_val: "9qc8p1"
        string_val: "9qc7mg"
        string_val: "9qc8pj"
        string_val: "dp4d6s"
        string_val: "9q9p1c"
        string_val: "9q9pw7"
        string_val: "9q9r00"
        string_val: "9q9d8c"
        string_val: "9q9x8x"
        string_val: "9q9zcj"
        string_val: "9qbesn"
        string_val: "9qcc74"
        string_val: "9q9p4h"
        string_val: "9q9r42"
        string_val: "9q9d9h"
        string_val: "9q9nqm"
        string_val: "dqctep"
        string_val: "9qc8r6"
        string_val: "9q9k3t"
        string_val: "9q9j1t"
        string_val: "9qcemr"
        string_val: "9q8ynr"
        string_val: "9q9jhn"
        string_val: "9q8zee"
        string_val: "9q8yyu"
        string_val: "9q8yyz"
        string_val: "9q8zgh"
        string_val: "9q97pw"
        string_val: "9q7nv8"
        string_val: "9qbb4m"
        string_val: "9qc008"
        string_val: "9q9p3q"
        string_val: "9q9k5s"
        string_val: "9q9yrg"
        string_val: "9q9j5v"
        string_val: "9q9wt4"
        string_val: "9q8yyt"
        string_val: "9q9ryr"
        string_val: "9qc256"
        string_val: "9q9ker"
        string_val: "9q9hxk"
        string_val: "9qcgbs"
        string_val: "dqcter"
        string_val: "9q9pyn"
        string_val: "9qc9zc"
        string_val: "9qdncc"
        string_val: "9q8yyy"
        string_val: "9rcfb3"
        string_val: "9qcu00"
        string_val: "9qc0gn"
        string_val: "9qc7m1"
        string_val: "9q9pr2"
        string_val: "9qbc8b"
        string_val: "9qbfbj"
        string_val: "9q9k3g"
        string_val: "9q9jh3"
        string_val: "9qc4pt"
        string_val: "9qbess"
        string_val: "9q9pt3"
        string_val: "9qcv0g"
        string_val: "9qc2hu"
        string_val: "9qdncu"
        string_val: "9q9qw5"
        string_val: "9rcfb9"
        string_val: "9q9pbz"
        string_val: "9qc60n"
        string_val: "9q8zu0"
        string_val: "9q9k3q"
        string_val: "9q8ytn"
        string_val: "9q8yy3"
        string_val: "9q8yyu"
        string_val: "9qc7r1"
        string_val: "9q9xzz"
        string_val: "9q9kds"
        string_val: "9q9ngr"
        string_val: "9qc1k9"
        string_val: "9q9ngg"
        string_val: "9qc20r"
        string_val: "9q7nw3"
        string_val: "9q9p61"
        string_val: "9q8ytt"
        string_val: "9q9rbk"
        string_val: "9q97cj"
        string_val: "9q94r3"
        string_val: "9q9z44"
        string_val: "9q93gb"
        string_val: "9q9vzy"
        string_val: "9qc0f2"
        string_val: "9q9d97"
        string_val: "9q9hen"
        string_val: "9q9kdw"
        string_val: "9q9pq7"
        string_val: "9q966c"
        string_val: "9q8zsy"
        string_val: "9q95zu"
        string_val: "9qdnfj"
        string_val: "9qbs8w"
        string_val: "9q9kbb"
        string_val: "9qc01r"
        string_val: "9q9qhh"
        string_val: "9q9k2s"
        string_val: "9q9hpg"
        string_val: "9qdn21"
        string_val: "9q9jhm"
        string_val: "9q9rvx"
        string_val: "9q9qh7"
        string_val: "9q8zgn"
        string_val: "9qc62k"
        string_val: "9q9k88"
        string_val: "9q9ndk"
        string_val: "9q9x8g"
        string_val: "9q9jvf"
        string_val: "9q5bcc"
        string_val: "9q9wsp"
        string_val: "9q9rwn"
        string_val: "9qc60m"
        string_val: "9q9rbq"
        string_val: "9qc8zt"
        string_val: "9q94wp"
        string_val: "9q9p3n"
        string_val: "9q9jyj"
        string_val: "9q9rbf"
        string_val: "9qc70t"
        string_val: "9q9pqh"
        string_val: "9qc70q"
        string_val: "9q8yyt"
        string_val: "9qcufk"
        string_val: "9q9nu2"
        string_val: "9qc0dm"
        string_val: "9q9z0g"
        string_val: "9q5bcd"
        string_val: "9q9qw4"
        string_val: "9q8yyy"
        string_val: "9q9zbh"
        string_val: "9qc60d"
        string_val: "9qc0dx"
        string_val: "9q9p6u"
        string_val: "9q9x8d"
        string_val: "9q99tt"
        string_val: "9q9kd0"
        string_val: "9q9pec"
        string_val: "9qc0jp"
        string_val: "9qc60m"
        string_val: "9qbdx0"
        string_val: "9q9rcj"
        string_val: "9q8ywq"
        string_val: "9q9rrv"
        string_val: "9q5bc8"
        string_val: "9q9z0n"
        string_val: "9q97c4"
        string_val: "9qb6zv"
        string_val: "9qbdby"
        string_val: "9q9p94"
        string_val: "9qcgbq"
        string_val: "9qbc3z"
        string_val: "9q9xpd"
        string_val: "9q97up"
        string_val: "9qdncb"
        string_val: "9q9r47"
        string_val: "9q5bf4"
        string_val: "9q9pzw"
        string_val: "9q9j4k"
        string_val: "9q9k29"
        string_val: "9qbf13"
        string_val: "9q9xxs"
        string_val: "9q8yyy"
        string_val: "9qcezf"
        string_val: "9q9p73"
        string_val: "9q9z8w"
        string_val: "9q8vxe"
        string_val: "9q9m89"
        string_val: "9q9p3h"
        string_val: "9q9k3e"
        string_val: "9q9ht6"
        string_val: "9q9k6t"
        string_val: "9q9ng6"
        string_val: "9q9nsg"
        string_val: "9q9yew"
        string_val: "dp4d65"
        string_val: "9q99t7"
        string_val: "9q9jz0"
        string_val: "9q9j61"
        string_val: "9q9p4d"
        string_val: "9q9qhy"
        string_val: "9q9q6g"
        string_val: "dqctfe"
        string_val: "9qc1hx"
        string_val: "9q9pbp"
        string_val: "9q9nst"
        string_val: "9q9nse"
        string_val: "9qc616"
        string_val: "dqctew"
        string_val: "9qc8qv"
        string_val: "9q8ynh"
        string_val: "9qc8zb"
        string_val: "9qbdwk"
        string_val: "9q9x8v"
        string_val: "9qcu0c"
        string_val: "9q9kj0"
        string_val: "dp4d6s"
        string_val: "9qbb5j"
        string_val: "9qc2j2"
        string_val: "9q94qc"
        string_val: "9q9pqu"
        string_val: "9q9nmy"
        string_val: "9qc261"
        string_val: "dp4d46"
        string_val: "9q8zn2"
        string_val: "9q8zg8"
        string_val: "9q9k7n"
        string_val: "9qc61n"
        string_val: "9q9p9t"
        string_val: "9rcfb9"
        string_val: "9qc8rd"
        string_val: "dqctep"
        string_val: "9q9ry9"
        string_val: "9q8yvu"
        string_val: "9q8yyv"
        string_val: "9qdngj"
        string_val: "9qc8zu"
        string_val: "9q9jzf"
        string_val: "9qcgcz"
        string_val: "9q99ck"
        string_val: "9q9qk6"
        string_val: "9q9m19"
        string_val: "9rcdz6"
        string_val: "9q9rbu"
        string_val: "9qc204"
        string_val: "9q8yt6"
        string_val: "9q9p1c"
        string_val: "9qc7kf"
        string_val: "9q9j3p"
        string_val: "9q9nsj"
        string_val: "dp4d69"
        string_val: "9q8yyv"
        string_val: "9q9p0g"
        string_val: "9q9k1d"
        string_val: "9q8yyy"
        string_val: "9q9p90"
        string_val: "9qc2he"
        string_val: "9qc0en"
        string_val: "9q8zzf"
        string_val: "9q8vyb"
        string_val: "9q9xxz"
        string_val: "9q9qq6"
        string_val: "9q9nnc"
        string_val: "9q9jb3"
        string_val: "9q8ykg"
        string_val: "9q9x85"
        string_val: "9q9njm"
        string_val: "9q9j3u"
        string_val: "9q9ws5"
        string_val: "9q9p33"
        string_val: "9q9qmu"
        string_val: "9q9x8g"
        string_val: "9q9m89"
        string_val: "9q5bc8"
        string_val: "9qc8n2"
        string_val: "9qbsb6"
        string_val: "9qccb0"
        string_val: "9qcc0m"
        string_val: "9q9k6j"
        string_val: "9q9k0d"
        string_val: "9q9ken"
        string_val: "9q96j4"
        string_val: "9q8vjw"
        string_val: "9q9625"
        string_val: "9qcezt"
        string_val: "9q99sv"
        string_val: "dp4d1h"
        string_val: "9qbf78"
        string_val: "9q9r08"
        string_val: "9qc1wj"
        string_val: "9qbb49"
        string_val: "9q9kk2"
        string_val: "9qc0fe"
        string_val: "9q9rw5"
        string_val: "9q9jyg"
        string_val: "9q9jhs"
        string_val: "9q9pwf"
        string_val: "9q9j5c"
        string_val: "9q8zzf"
        string_val: "9qbb48"
        string_val: "9q9k43"
        string_val: "9q5bcd"
        string_val: "9q9jdh"
        string_val: "9q8zke"
        string_val: "9q9q2x"
        string_val: "9q9r0y"
        string_val: "9q9pbc"
        string_val: "9qbdbs"
        string_val: "9r4bgz"
        string_val: "9qbcd4"
        string_val: "9q8vxx"
        string_val: "9qc8rf"
        string_val: "9q8zgw"
        string_val: "9q8zmr"
        string_val: "9q8yyz"
        string_val: "9q94rc"
        string_val: "9qcet6"
        string_val: "9q7nt1"
        string_val: "9qbf22"
        string_val: "9q9623"
        string_val: "9q9e22"
        string_val: "9q964w"
        string_val: "9q9k08"
        string_val: "9q9j57"
        string_val: "9q9qq4"
        string_val: "9q9m3k"
        string_val: "9q6mt3"
        string_val: "9q9x8f"
        string_val: "9q9jwy"
        string_val: "9q9j8k"
        string_val: "9q8zzc"
        string_val: "9q9jwz"
        string_val: "9qc147"
        string_val: "9q9k2g"
        string_val: "9q97bw"
        string_val: "9q9nfw"
        string_val: "9q99td"
        string_val: "9q9pbm"
        string_val: "9q9x94"
        string_val: "9q9hkr"
        string_val: "9qcbbn"
        string_val: "9q8yw5"
        string_val: "9q7ntd"
        string_val: "9qbs8w"
        string_val: "9q9j51"
        string_val: "9q9qbx"
        string_val: "9q8yu3"
        string_val: "9qcbbp"
        string_val: "9q9hrq"
        string_val: "9qcc2m"
        string_val: "9q9d94"
        string_val: "9qc60v"
        string_val: "9q8zn2"
        string_val: "9qc8nf"
        string_val: "9qcetf"
        string_val: "9qbc91"
        string_val: "9qc9x3"
        string_val: "9q9nsq"
        string_val: "drdv4t"
        string_val: "9q8yw5"
        string_val: "9q9pkr"
        string_val: "9qc0n5"
        string_val: "9q9jy3"
        string_val: "9q9nnq"
        string_val: "9q9qf5"
        string_val: "9qc1hs"
        string_val: "9q96j9"
        string_val: "9q9rvq"
        string_val: "9q9keh"
        string_val: "9q9r42"
        string_val: "9q9j33"
        string_val: "9qc60g"
        string_val: "9qctpd"
        string_val: "9q9d8b"
        string_val: "9q8ykv"
        string_val: "9qc239"
        string_val: "9qc0hy"
        string_val: "9q9pyh"
        string_val: "9q8zgt"
        string_val: "9q97ck"
        string_val: "9q97b6"
        string_val: "9qc148"
        string_val: "9q9kt1"
        string_val: "9qcbbn"
        string_val: "9qc0g1"
        string_val: "9q9nn3"
        string_val: "9q9nfr"
        string_val: "9qbc3y"
        string_val: "9q9k39"
        string_val: "9q8yyy"
        string_val: "9q8yv0"
        string_val: "9q9p31"
        string_val: "9q9j5u"
        string_val: "9q9k1t"
        string_val: "9qc0pd"
        string_val: "9q9wt6"
        string_val: "9qbe51"
        string_val: "9q9ruz"
        string_val: "9qcemh"
        string_val: "9q9wez"
        string_val: "9qcu03"
        string_val: "9q8zzd"
        string_val: "9q9pmy"
        string_val: "dp4d3f"
        string_val: "9q9zcr"
        string_val: "9qc266"
        string_val: "dp4d4n"
        string_val: "9q964w"
        string_val: "9q97fj"
        string_val: "9qc2hq"
        string_val: "9qbfc6"
        string_val: "9qc3bs"
        string_val: "9q8yjs"
        string_val: "9q9rwz"
        string_val: "9q9vyp"
        string_val: "9qc8n6"
        string_val: "9q9pbq"
        string_val: "9q9pjp"
        string_val: "9qbc3t"
        string_val: "9q9yxc"
        string_val: "9q5bc8"
        string_val: "9q7nw5"
        string_val: "9qcu1c"
        string_val: "9q95zv"
        string_val: "9q9ynz"
        string_val: "9q8zmm"
        string_val: "dqctem"
        string_val: "9q9nnx"
        string_val: "9q9j9k"
        string_val: "9qc1cq"
        string_val: "9qbeey"
        string_val: "9q9k8d"
        string_val: "9q9rcj"
        string_val: "9q9zby"
        string_val: "9q9p6d"
        string_val: "9q97b8"
        string_val: "9q9j8q"
        string_val: "9qc24n"
        string_val: "9q9xx5"
        string_val: "9q9nes"
        string_val: "9qbfc5"
        string_val: "9q9pq5"
        string_val: "9q8zex"
        string_val: "9q9p69"
        string_val: "9qbg6v"
        string_val: "9q8zn3"
        string_val: "9q964w"
        string_val: "9q9jx7"
        string_val: "9q8yyh"
        string_val: "9qc0j2"
        string_val: "9q8yyr"
        string_val: "9q9pv9"
        string_val: "9qbbpb"
        string_val: "9q9jhg"
        string_val: "9qc2h4"
        string_val: "9q9xxe"
        string_val: "9q9ngx"
        string_val: "9q9pw3"
        string_val: "9q9pwk"
        string_val: "9qc627"
        string_val: "9q9p0f"
        string_val: "9q9j5k"
        string_val: "9qc1xs"
        string_val: "9qbesj"
        string_val: "9q8zfz"
        string_val: "9q5b9x"
        string_val: "9qc60k"
        string_val: "9qcgb5"
        string_val: "9qctp7"
        string_val: "9qbgmx"
        string_val: "9q9nx1"
        string_val: "9q5bcd"
        string_val: "9qc0n1"
        string_val: "9q9jyh"
        string_val: "9qc07n"
        string_val: "9qc142"
        string_val: "9q9nnf"
        string_val: "9q99tc"
        string_val: "9q8ywm"
        string_val: "9qc1bd"
        string_val: "9q8zkf"
        string_val: "9qbgj5"
        string_val: "9q9e2f"
        string_val: "9q9p1k"
        string_val: "9q9net"
        string_val: "9q9kk9"
        string_val: "9qc2h5"
        string_val: "9qc0en"
        string_val: "9q8yvb"
        string_val: "9q9xxz"
        string_val: "9qbsb9"
        string_val: "9q97ge"
        string_val: "9q8zgn"
        string_val: "9q96jb"
        string_val: "9q9p1c"
        string_val: "9q8ym8"
        string_val: "9r4bft"
        string_val: "9q9j9n"
        string_val: "9q9kdj"
        string_val: "9qc0fu"
        string_val: "9qc1y0"
        string_val: "9q8yyr"
        string_val: "9q9r45"
        string_val: "9q8ytz"
        string_val: "9q9njc"
        string_val: "9q5bd5"
        string_val: "9q9e2f"
        string_val: "9qc8qb"
        string_val: "9q9ryq"
        string_val: "9q8yyp"
        string_val: "9q9k8c"
        string_val: "9q7nv9"
        string_val: "9q9nks"
        string_val: "9q8vz6"
        string_val: "9q8yt4"
        string_val: "9q9nqh"
        string_val: "9q8yvc"
        string_val: "9q9net"
        string_val: "9q9k65"
        string_val: "9q8ykf"
        string_val: "9qc8zf"
        string_val: "9q7nt1"
        string_val: "9q9xyv"
        string_val: "9qcezc"
        string_val: "9q7ntg"
        string_val: "9qbeev"
        string_val: "9q8yyw"
        string_val: "9qc0fe"
        string_val: "9qc0ds"
        string_val: "9q94zd"
        string_val: "9q9hum"
        string_val: "9q9k1s"
        string_val: "9q9xzt"
        string_val: "9qbf8m"
        string_val: "9qbcuw"
        string_val: "9q9z1h"
        string_val: "9q9k7r"
        string_val: "9q99tk"
        string_val: "9q9p37"
        string_val: "9q6msu"
        string_val: "9q8zxy"
        string_val: "9qcezc"
        string_val: "9qc0pd"
        string_val: "9q9pb0"
        string_val: "9qc0jm"
        string_val: "9qbdz9"
        string_val: "9qcgbj"
        string_val: "9q9e23"
        string_val: "9qbdxh"
        string_val: "9q9k3m"
        string_val: "9q96jc"
        string_val: "9qbsb3"
        string_val: "9q9pyv"
        string_val: "9qc2nf"
        string_val: "9qdncd"
        string_val: "9q5bcb"
        string_val: "9q99tj"
        string_val: "9qbfd7"
        string_val: "9qc8zr"
        string_val: "9qcezx"
        string_val: "9q97fq"
        string_val: "9qc7q6"
        string_val: "9qc7q4"
        string_val: "9q9yn3"
        string_val: "9q6mt1"
        string_val: "9q9qc5"
        string_val: "9q97v6"
        string_val: "9q9p38"
        string_val: "9q8yty"
        string_val: "9q7nw3"
        string_val: "9qc0ju"
        string_val: "9q8yy0"
        string_val: "9q9hxk"
        string_val: "9qbdch"
        string_val: "dqctf2"
        string_val: "9q9nqg"
        string_val: "9qc8pt"
        string_val: "9q8ze9"
        string_val: "9qc0eu"
        string_val: "9qc8nu"
        string_val: "9qc259"
        string_val: "9q9ycs"
        string_val: "9q8yts"
        string_val: "9qbsb8"
        string_val: "9q9r06"
        string_val: "9q9yqb"
        string_val: "9q9m8t"
        string_val: "9q9k7w"
        string_val: "9q9p3g"
        string_val: "9q99qe"
        string_val: "9q8yyz"
        string_val: "9q9m8k"
        string_val: "9q6mt5"
        string_val: "9q93qj"
        string_val: "9q9prs"
        string_val: "9q9yez"
        string_val: "9q9k4r"
        string_val: "9qc0f7"
        string_val: "9q9p19"
        string_val: "9q9jx5"
        string_val: "9qcgct"
        string_val: "9qbdpz"
        string_val: "9qc8pn"
        string_val: "9q9p55"
        string_val: "9q9hv8"
        string_val: "9q9jd5"
        string_val: "9q9pvm"
        string_val: "9q8uyp"
        string_val: "9qc0dr"
        string_val: "9q8ysw"
        string_val: "9q9xzr"
        string_val: "9q9ndj"
        string_val: "9qcu0d"
        string_val: "9qc0gj"
        string_val: "9q9hud"
        string_val: "9q9p6c"
        string_val: "9qcezw"
        string_val: "9q8yy5"
        string_val: "9q9hz3"
        string_val: "9r4c48"
        string_val: "9q9q6u"
        string_val: "9qbcst"
        string_val: "9q9ryu"
        string_val: "9q8yw9"
        string_val: "9q8yv9"
        string_val: "9qc11c"
        string_val: "9q6mtk"
        string_val: "9q9pe3"
        string_val: "9q9njt"
        string_val: "9qc8ny"
        string_val: "9q9hsb"
        string_val: "9q9k53"
        string_val: "9q9pyj"
        string_val: "9q9ng8"
        string_val: "9q9m3m"
        string_val: "9q5bc7"
        string_val: "9q9q6c"
        string_val: "9q9pvx"
        string_val: "9qc1xq"
        string_val: "9q9k7q"
        string_val: "9q9p18"
        string_val: "9q9ndk"
        string_val: "9qc6eu"
        string_val: "9q9nms"
        string_val: "9q9qbx"
        string_val: "9q9nm7"
        string_val: "9q9py8"
        string_val: "9q9nw2"
        string_val: "9q9jwp"
        string_val: "9q9ng7"
        string_val: "9qcb25"
        string_val: "9qc1br"
        string_val: "9q8yyu"
        string_val: "9qc15f"
        string_val: "9q9k48"
        string_val: "9q5bcd"
        string_val: "9q8yvb"
        string_val: "9q97r8"
        string_val: "9q9wsg"
        string_val: "9q99qj"
        string_val: "9r4bgn"
        string_val: "9q9p9h"
        string_val: "9q8zmq"
        string_val: "9q9pxh"
        string_val: "9q5bdh"
        string_val: "9q9xyr"
        string_val: "9qc8pu"
        string_val: "9qceth"
        string_val: "9q8zzt"
        string_val: "9q9hqw"
        string_val: "9qc00z"
        string_val: "9q5b9x"
        string_val: "9q9p70"
        string_val: "9q5b9u"
        string_val: "9q9k59"
        string_val: "9qc8qz"
        string_val: "9qc1xk"
        string_val: "9q9k1n"
        string_val: "9q9pt6"
        string_val: "9qc1wm"
        string_val: "9q8yyu"
        string_val: "9q5bc6"
        string_val: "9q9hfp"
        string_val: "9q9yn3"
        string_val: "9q9k4n"
        string_val: "9qc00u"
        string_val: "9qc8rc"
        string_val: "9qbv97"
        string_val: "dqctep"
        string_val: "9qc9pd"
        string_val: "9q5bc7"
        string_val: "dp4d1n"
        string_val: "9qc1k8"
        string_val: "9q9pb7"
        string_val: "9q5bc9"
        string_val: "9q9qbv"
        string_val: "9q9p1k"
        string_val: "9rcfb5"
        string_val: "9q9d97"
        string_val: "9q6mtt"
        string_val: "9q9yxg"
        string_val: "dp4d60"
        string_val: "dp4d44"
        string_val: "9q9p8y"
        string_val: "9q9rbv"
        string_val: "9q8yyp"
        string_val: "9q8zzk"
        string_val: "9q96hb"
        string_val: "9qdn20"
        string_val: "9q97pt"
        string_val: "9q9p48"
        string_val: "9qceze"
        string_val: "9q9xpd"
        string_val: "9q9nck"
        string_val: "9q8ytx"
        string_val: "9q8yqq"
        string_val: "9q9hxd"
        string_val: "9qc38j"
        string_val: "9q9pw3"
        string_val: "9q9pd0"
        string_val: "9qc0ff"
        string_val: "9qc1xw"
        string_val: "9q8ytc"
        string_val: "9q9qch"
        string_val: "9qc0s0"
        string_val: "9q9q45"
        string_val: "9qdngn"
        string_val: "9q9jx0"
        string_val: "9q9hwu"
        string_val: "9q8yv0"
        string_val: "9q9kde"
        string_val: "9q8ytt"
        string_val: "9r4c5b"
        string_val: "9qbesk"
        string_val: "9q9nqv"
        string_val: "9q9ycu"
        string_val: "9q9k40"
        string_val: "9qcgcz"
        string_val: "9q9k4j"
        string_val: "9qc8n7"
        string_val: "9q8zek"
        string_val: "9q9q6f"
        string_val: "9q9jwm"
        string_val: "9qc8pn"
        string_val: "dqctdn"
        string_val: "9qc24m"
        string_val: "9qcc62"
        string_val: "9rcfb5"
        string_val: "9rcdxf"
        string_val: "9r4c46"
        string_val: "9q9pqq"
        string_val: "9q8ywr"
        string_val: "9q9d9k"
        string_val: "9qc7m8"
        string_val: "9q9pyv"
        string_val: "9qc0ng"
        string_val: "9q9ng6"
        string_val: "9q9nfs"
        string_val: "9q9nms"
        string_val: "drdv4t"
        string_val: "9q9ycx"
        string_val: "9q9k54"
        string_val: "9q8yy1"
        string_val: "9q9nfd"
        string_val: "9q9yxe"
        string_val: "9qc2hb"
        string_val: "9qc8p9"
        string_val: "9q8yy5"
        string_val: "9q9j50"
        string_val: "9q9pqd"
        string_val: "9q9j4z"
        string_val: "9q9jhn"
        string_val: "9q9p33"
        string_val: "9q8yu2"
        string_val: "9qbesn"
        string_val: "9qbsb9"
        string_val: "9qc82k"
        string_val: "9qcb00"
        string_val: "9q9yxu"
        string_val: "9qc8qk"
        string_val: "9rcdz7"
        string_val: "9q9prd"
        string_val: "9q9k6k"
        string_val: "9q9kf5"
        string_val: "9q9hux"
        string_val: "9qc8n7"
        string_val: "9q9p1e"
        string_val: "9r4bfx"
        string_val: "9q9k7b"
        string_val: "9qbv9x"
        string_val: "9q9k1r"
        string_val: "9qcet0"
        string_val: "9q964w"
        string_val: "9q9p1u"
        string_val: "9q9p1v"
        string_val: "9q8yjw"
        string_val: "9q8yy2"
        string_val: "9q9p65"
        string_val: "9q8yyu"
        string_val: "9q9pb4"
        string_val: "9qc1y4"
        string_val: "9qc1x9"
        string_val: "9q9r40"
        string_val: "dp4d13"
        string_val: "9q9j5h"
        string_val: "9q8ytv"
        string_val: "9q9hvq"
        string_val: "9q94r4"
        string_val: "9qc1wp"
        string_val: "9q8zeh"
        string_val: "9q8ytt"
        string_val: "9q8ysx"
        string_val: "9qcu40"
        string_val: "9q8ywg"
        string_val: "9qc01k"
        string_val: "9q9p50"
        string_val: "9qc269"
        string_val: "9q9m3x"
        string_val: "9q9m3j"
        string_val: "9q9ke6"
        string_val: "9q9vyj"
        string_val: "9q9yyw"
        string_val: "9q9ngv"
        string_val: "9q9qcv"
        string_val: "9q9k8b"
        string_val: "9q9z1m"
        string_val: "9qc1bv"
        string_val: "drdv4q"
        string_val: "9q9r18"
        string_val: "9q9m2x"
        string_val: "9qc8rr"
        string_val: "9qc2h3"
        string_val: "9q9xzn"
        string_val: "dp4d46"
        string_val: "9qdncf"
        string_val: "9q9pb7"
        string_val: "9q9hrc"
        string_val: "9q7ntf"
        string_val: "9q8vye"
        string_val: "9qc25u"
        string_val: "9qcsp8"
        string_val: "9q9pc0"
        string_val: "9qc7qb"
        string_val: "9qc8zv"
        string_val: "9qbb1b"
        string_val: "9q9p5b"
        string_val: "dp4d60"
        string_val: "9qc01x"
        string_val: "9q97fr"
        string_val: "9qc8nt"
        string_val: "9qc0j7"
        string_val: "9qc1bn"
        string_val: "9q8yyy"
        string_val: "9qdn85"
        string_val: "9qcu11"
        string_val: "dqcten"
        string_val: "9q9p1f"
        string_val: "9q5bc6"
        string_val: "9q8zxv"
        string_val: "9q97gu"
        string_val: "9q9hz3"
        string_val: "9q9qmm"
        string_val: "9qcb20"
        string_val: "9qc8n0"
        string_val: "9q9pwz"
        string_val: "9q9yg9"
        string_val: "9q9pmy"
        string_val: "9q9p9b"
        string_val: "9q9kb0"
        string_val: "9q9kf2"
        string_val: "9q9xxz"
        string_val: "9qcgb3"
        string_val: "9qc3bs"
        string_val: "9qc001"
        string_val: "9q9prb"
        string_val: "9qbhg8"
        string_val: "9q9jxm"
        string_val: "9q9pzz"
        string_val: "9qc0fb"
        string_val: "9qc0fm"
        string_val: "9q9r4k"
        string_val: "9q9znc"
        string_val: "9q97fm"
        string_val: "9q8yyv"
        string_val: "9q9r0z"
        string_val: "9q8ytj"
        string_val: "9qc7kf"
        string_val: "9q8yyu"
        string_val: "9q8yyw"
        string_val: "9q9pvq"
        string_val: "9q8yxk"
        string_val: "9qbdzc"
        string_val: "9q9hgp"
        string_val: "9q9nur"
        string_val: "9q9pb5"
        string_val: "9qc04n"
        string_val: "9qc62b"
        string_val: "9q9jyb"
        string_val: "9q8yyh"
        string_val: "9q5bcc"
        string_val: "9q8ysv"
        string_val: "9q9d8t"
        string_val: "9q9kcw"
        string_val: "9q9pbj"
        string_val: "9q9z1q"
        string_val: "9q8ytj"
        string_val: "9qbb4d"
        string_val: "9q9k6e"
        string_val: "9qcetj"
        string_val: "9qc8n7"
        string_val: "9q9ryr"
        string_val: "9qc8zz"
        string_val: "9q9ry6"
        string_val: "9q9z1d"
        string_val: "9q9z1m"
        string_val: "9q9pyw"
        string_val: "9q9htz"
        string_val: "dqctep"
        string_val: "9q5b9u"
        string_val: "9qbf6t"
        string_val: "9qbfdj"
        string_val: "9q9d8e"
        string_val: "9q9kew"
        string_val: "9q9k3f"
        string_val: "9qc2hw"
        string_val: "9q9rbk"
        string_val: "9q9kf3"
        string_val: "9q9rty"
        string_val: "9q9p15"
        string_val: "dp4d64"
        string_val: "9q9kf1"
        string_val: "9q9k10"
        string_val: "9q9m8f"
        string_val: "9q9key"
        string_val: "9q9x8g"
        string_val: "9q9prc"
        string_val: "9q9qk8"
        string_val: "9qc1we"
        string_val: "9q9pbz"
        string_val: "9q9xyz"
        string_val: "9qcesg"
        string_val: "9q9p4j"
        string_val: "dqctex"
        string_val: "9q9hw0"
        string_val: "9r4bfx"
        string_val: "9q8ysy"
        string_val: "9qc0dz"
        string_val: "9q9qks"
        string_val: "9q9nf0"
        string_val: "9q9kk1"
        string_val: "9q9k2f"
        string_val: "9q8yvh"
        string_val: "9q9ycx"
        string_val: "9q8z7z"
        string_val: "9q9jwg"
        string_val: "9qbf0h"
        string_val: "9qc01r"
        string_val: "9q9r01"
        string_val: "9qc384"
        string_val: "9q9z1p"
        string_val: "9qc9pd"
        string_val: "9q9p1v"
        string_val: "9qc7ms"
        string_val: "9q8yvb"
        string_val: "9qc0pn"
        string_val: "9q9k2r"
        string_val: "9q9p36"
        string_val: "9q8yyv"
        string_val: "9q8yvu"
        string_val: "9qc2hm"
        string_val: "9qc9pd"
        string_val: "9q9661"
        string_val: "9qc11y"
        string_val: "9q9k5g"
        string_val: "9q9jy2"
        string_val: "9q9ynh"
        string_val: "9q9k4e"
        string_val: "9q9kkr"
        string_val: "9qc60e"
        string_val: "9rcdzg"
        string_val: "9q9ngb"
        string_val: "9q9pse"
        string_val: "9q8yyx"
        string_val: "9q9hz8"
        string_val: "9q9ypq"
        string_val: "9q9p4t"
        string_val: "9q9j5s"
        string_val: "9qc8zv"
        string_val: "9qc8qz"
        string_val: "9q8z7r"
        string_val: "9q9net"
        string_val: "9q9j9g"
        string_val: "9q7nv9"
        string_val: "9qbeu0"
        string_val: "9q8vxe"
        string_val: "9q8yyz"
        string_val: "9q9p8j"
        string_val: "9q97un"
        string_val: "9q9wu9"
        string_val: "9q9z0j"
        string_val: "9q9wef"
        string_val: "9q9z16"
        string_val: "9q9qcg"
        string_val: "9q9kdz"
        string_val: "9qcet7"
        string_val: "9r4c5c"
        string_val: "9q97v1"
        string_val: "9qc8qq"
        string_val: "9q7nmq"
        string_val: "9qc8qu"
        string_val: "9q8zz2"
        string_val: "9q8yyv"
        string_val: "dqcteq"
        string_val: "9q7nt7"
        string_val: "9qc8zz"
        string_val: "9qc8n0"
        string_val: "9q9k7f"
        string_val: "9q9627"
        string_val: "9q9pyg"
        string_val: "9q9p5n"
        string_val: "9q9k4q"
        string_val: "9q9p1u"
        string_val: "9q6mt4"
        string_val: "9q9p3n"
        string_val: "9q93gb"
        string_val: "9qc9xz"
        string_val: "9q9k7q"
        string_val: "9qbf8m"
        string_val: "9q5bf0"
        string_val: "9q9ke5"
        string_val: "9q8ykw"
        string_val: "9qc0pu"
        string_val: "9q97uk"
        string_val: "9q8zyb"
        string_val: "9qc2hq"
        string_val: "9q978r"
        string_val: "9q9ycu"
        string_val: "9q8yy1"
        string_val: "9qdn26"
        string_val: "9q9r1e"
        string_val: "9qc8nc"
        string_val: "9q9ng9"
        string_val: "9q8zgt"
        string_val: "9q9k2v"
        string_val: "9qbb49"
        string_val: "9q9k6g"
        string_val: "9q9k77"
        string_val: "9q99qj"
        string_val: "9qbb48"
        string_val: "9q8yw5"
        string_val: "9q9kc8"
        string_val: "9q9zc4"
        string_val: "9q8yyu"
        string_val: "dp4d4n"
        string_val: "9q8zeu"
        string_val: "9q9j4f"
        string_val: "9q9d95"
        string_val: "9q9hvd"
        string_val: "9q8yyq"
        string_val: "9q9r4k"
        string_val: "9q97bg"
        string_val: "9q9rz0"
        string_val: "9rcfb4"
        string_val: "9q9nf5"
        string_val: "9q9p1w"
        string_val: "9qcu0e"
        string_val: "9qc8p8"
        string_val: "9q9jyb"
        string_val: "9q9nf4"
        string_val: "dp4d4z"
        string_val: "9q9p8r"
        string_val: "9q9ynv"
        string_val: "9rcfbh"
        string_val: "9q9qcv"
        string_val: "9q9pd1"
        string_val: "9q9k7j"
        string_val: "9q97fg"
        string_val: "9q9pw0"
        string_val: "9q7ny0"
        string_val: "9qc11v"
        string_val: "9q9ycr"
        string_val: "9q9r19"
        string_val: "9qcugg"
        string_val: "9qc3bs"
        string_val: "9q9jdn"
        string_val: "9q9k8z"
        string_val: "9q9p4j"
        string_val: "dqct9v"
        string_val: "9q9r42"
        string_val: "9q9pyg"
        string_val: "9q9jrx"
        string_val: "9q9kke"
        string_val: "9q9num"
        string_val: "9rcdxu"
        string_val: "9q9m41"
        string_val: "9qc202"
        string_val: "9q9p5t"
        string_val: "9q9x8u"
        string_val: "9q7ntb"
        string_val: "9qc0hu"
        string_val: "9qc0s0"
        string_val: "9q8yyy"
        string_val: "9q97bk"
        string_val: "9q8yyy"
        string_val: "9qc8zf"
        string_val: "drdv4m"
        string_val: "9q9xp9"
        string_val: "9q9wep"
        string_val: "9q8vjg"
        string_val: "9q8yyk"
        string_val: "9q9666"
        string_val: "9q9k72"
        string_val: "dqct9t"
        string_val: "9qc8nc"
        string_val: "9q9ng7"
        string_val: "9qbdxz"
        string_val: "9qcb02"
        string_val: "9q9nmj"
        string_val: "9q9z17"
        string_val: "9qc8qt"
        string_val: "9qbf5z"
        string_val: "9q9ps5"
        string_val: "9r4c51"
        string_val: "9qc7mk"
        string_val: "9q8yy4"
        string_val: "9qc9xk"
        string_val: "9q9xyx"
        string_val: "9q9r1j"
        string_val: "9q9qbx"
        string_val: "9q9k64"
        string_val: "dqctg2"
        string_val: "9qbep3"
        string_val: "9qc3nr"
        string_val: "9q9nsn"
        string_val: "9q9jyg"
        string_val: "9q9rbx"
        string_val: "9q9p94"
        string_val: "9q7nv8"
        string_val: "9q9z8z"
        string_val: "9q9zc7"
        string_val: "9qbf9y"
        string_val: "9q9k9c"
        string_val: "dqctex"
        string_val: "9q9khf"
        string_val: "dp4d4q"
        string_val: "9q9vzy"
        string_val: "9q9k2s"
      }
    }
  }
}
node {
  name: "SparseTensor/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \010\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2508
          }
        }
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor_1/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\360_\214I\300\322#I\000yQI\000@\034Ix\323\357J\200\255)I\300^\001I@\363\255I\000\005\221H`\326*J\000\227\314H\000\013tH\200C\021I\000\270\210H\020g\034K\000B\357H\300\263[I\200\215XI\200\027BI\200\021CI\340\3146J\200\237UI\000)\213H\200r\036I\000i\252H\200&\001I\340C\006I\000|\222I\000qcH\000F\033H\000\033\267H\300^\001Ip\t\220I\200FOI\340\206\230J\000\277VH\000ICI\300\344\245I\300\263[I\000 KH\200{[I\000R\031I\200\354\335H\000\261\036I\000B\357H\000\377\221H\200\237\325I\000\276\207H\000\004&I\000\376&I\000\270\210H\000^\027I\200\222lI\000\017\271H\200a\014I\300\375%I\300\263[I\000\326\203H\300\330\247I\300\263[I\200\020XI@<qI@~\202I\200\237UI\000\376&I`@CJ\200M9I\300\326VH\000\367\274H\300\306\252I\300\205\271H\300\277\265I\200>zI\000g\324H\300\337\252H\000*\363H\300\263\302I\200\021CI\000n>H\200\313\326H\000G\006I\000#\214I\000\004\246G\200\247*I\000\247\363H\000rgI\000\0337I\300\214#I\000y\321H\300\232\333I\000G\206I\200\226\030I\200!jI\300I\252I \261\236H\300\263BJ\200r\036I\000\2079H\3000CI\300\004tI\200\273\257H\200\360\273H\200a\014J\200,\000I\200\267QI\000\317}H\000k\375H\000\314XH\000\024\315H\300~\266I\000G\206H\200\027BI@\301xI\300\252\005J\300\337\221I\300\243\233I`\024tJ\000\337\300H\000e\201H\000I\331H\000\210\220G\300~\266I\200\247*I\0002\310H\200\016\005I\200jII\000\247\363H\200\3346I\300R\347I\000=[I\200C\021I\0004\236H\000\310\244I\000\310\257H\200\0001I\000\rMI\000\272[H\200\255)I\200\313VH\200C\303H\000\033\267H\200=\022I\0009\262H\000PCI\200=\022I\200,\000I\000VBH\000\037\340H\000W\255H\200\021CI\340\217#I\000*\363H\300\035\364H\200U\016J\300\321VI\000y8H@{\301I\000\214\271H\000+^I\000\261\236H\000\0337I\000\205\317H\200\235\002I\300\212\264I\000\232\330H\000\034\242H`}$J\200!\352H\000\221\315H\000+\336H\200\267QI\200\027BI\000\254\nH\200\313\326H\000G\206J0\034\364I\200\360\273H\000|\022H\000!6I\200\226\230I\200\206nI\000\001\345H\000\272\333H\200\tnI\200\353rI@w\230I\300~\266I\000\350gI\000\017\271H\000g\324H\200,\000I@\r\200I\200t[I\300\'\006J\000`jH`\300\204J\000\272\333I\200\3425I\300~\266I@\001\202I\000\366\321H\000\337\300H\200\313$I\200a\276H\200j\311I`\242\tJ\300\232\333I\000n>I\000\355\224H\300\033\241H\300\024\236I\300\'\213H\000\377\221H`\2620J\000g\324H\300\252\205I\000\234`H\000u\022I\034\226\230J\200\276;I\200\225\224H\000\375\273H\200k4I@\343\037I\200\021\303H\300\266\003I\200,\000I\000\245 I\200=\022I\000\r\343H\0009\262Hx\237\325I\200k4I\200tqI\200=\022I\200a\276H\200{[I\000\220\342H\200\246?I\000o\251I\000\377\221H\000\017\271H\000=\333H\000\256\335H\200,\000I\200\177\271H\200T#I\000\317\003I\000\001\345H\2003\234H\000\317\231H\200\325LI\240\277\032I\000\033\267I\300\231\014I\200\226\030I\340\201OI\200=\022I\000G\206H\200FOI\000\375\273H\000G\206I\300\272EI@T\tK\200\343 I\000c\022H\200\260gI\300\321\326H\360#tI\000\320\204I\000W\255H\000i*I\000\003\273H\000>FH\300u\222H\000\346\252H\200\3346I\200,\200I\200Z\324H\000\261\036J\000\227\314H@\211\225I\200\0001I\200\360\tI\000\346\252H\200x\035I\000\013tH\300\235gI\000\364\373G\000\366\371H\000\245\240H\300I\252I\000\373LH\200a\014J\300\337\221I\300\002\246H\300\337\221I\200\217.I\200\027BI\000\361\275H\300\341dJ \263\201J\340\255\036I\340|1I\200,\000J\000B\303H\000\270\010I\300\310\031I\000\320\204I\000A\007I\000\326\003H\000\0337I\300\243\233I\000+^H\200]`I\000\206lI\000\377\221H \322\344J\200\027BI\200\334\266I\000\317\231H\300I\252I\000F\233H\000\357\347H\300\r4J\000\247\363H\200!jI\300\317\203H\000=[I\200\300\021I\300\t\013J\200\360\273H\340\227*J\000@\221I\200\345sI`}$J\200\266fI\000\261\236H\000\263\361H\000\033\267I\200\305%I\200:\006I\000\357\347H\300;\357H\000\343\351H\200\306\302H`?\234H\200\255)I\200\010\206I\000\352SI\2006(I\000&JH\200,\375H\300\337\252H\200{[I\200\247*I\200C\303H\000\270\010I\000rgI\000\346*J\300^\001I\000\247\363H\000\005\221H\000)\013I`\013\267J\000\357\347H\300\301\226I\000)\013I\200\000\261I\200\231VI0b\225J\200dJI\200\371\306H\000g\324H@6\216I\000\234`H\000~eH\000\350gI\200\345\363I\200\0001I\000\223#I\200{[I\000\306\016I@\267\333H\000\260\263H\200\226\230I\000\207\245H\200k4I\200\247*I\000@\034I\200x\035I\3009\034I\200\313$I\300\2059I\200\3721I\000\205\317H\340\313\031I\000\252\264H\200C\303H\000\361\275H\300\341\375H\200C\021I\300~OI\000^\027I\000;\210H\000\260\263H\000K\257H\000x\346I\200o\222H\300\252\036I\000\013\220H\2003\234H\000@\234I\000\346*H\200\260gI\200,\000I\300\221\236I\200\371\370H\000G\206I\200T\243I`^\214I\200?eI\200\0001J\000\366\321H\200FOI\2005=I\200\021CI\0006qI\000\366\321H\000\"\241H\300\0247I\000\343\351H\300\004tI\000|\222I\200{[I\000\377\221H\000Q\256H\000=[I\200_6J\000`TI\000\205\317H@w\230I\300\306\252I\360\345\252I\000\367\274H\200\343 I\200\247*I\000\2228H\200=\022I\300\232\333I@\325\262I\200jII\000-4I ] I\300W\027I\000y8H`\023\014J\200\331\252H\000^\227H\300\375\245H\360\345*I\340-\022J\340ZIJ\000\247sI\000\343\351H\340O\303H\000P\303I\200\247*I\000\033\267H`x[I\000G\206I\200\236\237H\300\337\221I\200\3721I@K\027J\340\\jI\000\n%H\340\001CJP\262qI\000\361\275H\000\353%H`W\242I\200\365\035J\200r\236I\000[\326H\3000\303I\0004\036I\300\"\364H\300\344\232I\000\350\375H\200r\036I\000U\327H\000\243\312I\200\237UI\000~\345H\300>\227I@$\206I\000\237\010H\200\021CI \305{K\200a\014I\200=\022I\000\024\315H@T\tJ\000\333\027J\200\253\210H\000Y\203H\000\366\321H\200\313\244I\000,II\200\227\003I\200a\276H\000\r\343H\200jII\000\234\340G\000\272\333H\000\337\300H\2000\333H\000B\357I\300\355bI\200\226\030I\000\346\252H\000|\022I\200\266fI\000\016\316I\000W\255H\200r\036I\200J\255H@\305$I\200r\036I\000PCH\200\260gI`uOJ\200\342\347H\000\243JI\200\237\325I\000y\321H\000\236\266H\300\261\010I@\003UJ\340\3146J\000\366\321H\200\021*I\300\366;I\340\0277J\000\305nI\000\263\361I\200=\022I\000=[I\000\244\265I\300n\017J@\r\200I\000\263qH\300^\332I\000b\300H\000\323\302H\200FOI\200\tnI\200:\206H\340\3146J\000\357\347H\000PCH\2005\275I\200=\022I\200{[I\200=\022I\200\353rI\200\021CI\000\323\302H\200zpI\200\255)I\000\247\363H\300\221\236I\000\323\302H\300u\022I\34052I\300\r4J\200\273\257H\000\357\347H\000\206\272I\300\221\236I\000\346*I\200\222\354H\340\266QI\200CCH\000B\357H\200\251}H\200\226\230I\000\351hH\000\356|Hpo\230J\300g\276H\200\311\203H\200=\022I\200\331\252H\200r\036I\200X\201H\300\230\010I\000j\025H\000\234\340H\000\2524H\300\330\'J\300\322\250I\000[\326H\340LCI\200\0001I\300\254\330I\000\024\315H\200\021CI\0006qI\000{\247H\000\223\243H`\273mJ\000\252\036I\000VBH\000Y\203H\340\256;J\000\227\314H\000\357\347H\000\252\264H\000\361\275H\340C\006I\000X\230I\000\356|H\200\227\003I\000i\252H\000\270\210H\300n\217I\200\201ZI\200\222lI\000\2524Hp\031\267I\000\263\361H\200C\221I\000\323BI\000o\251I\200q\345H\200\3346I\340%\013I\000C\332H\240\026\262I\200r\036I\000\323\302H\000K\257H\000G\206I\000\310/I\300\277\265I\000\375\273H\340\342*I\300\212\264I\300\373\266I\360{\022I\000\2603H@B\014J\200\360\tI\0009\262H\000\357\347I\300\301\257H\300\254\330I\200\336sI\200r\036I\300\306\252I\000\337\300H\200\021CI\200\345\363I\200\240@I\200\0001I\200\226\030J\200\226\230I\300\373\266I`u\222H\000lhH\200M9I\200\027tH\000\261\036J\270@\tK\340\201OI\200FOI@D_I\200\313$I@S\036I\200\nYI\2005=I\000u\250H`H\030J\000\343iI\000\317\231H\200\255\251I\200\034\213H`\023\014J\000-\210H\300\337\221I\340\356\022I\000\321\354H\000\355\024I\200\255)I\340`\325H\340\322\003I\000\346*H\000\024\315H\000^\227H@\026\275I\000^\227H\200{[I\200\316bI\200(TI\300\026qJ\200\010\206I@\222RI\200\276;I\200=\222I\360C\375J\0004PH\300\002\246H\000\001eI\000[\326H\000\024\315I\000K/I\000@\006I\320\225\230I\000~eH\000[\326H\2005=I\200\226\030J\200_6J\000)\213H\300\350\316I\200\360\tI\000`jH\200\3721I\300}\344H\200\345sI\340\227*J\000C\332I\000\0337I\200\027\364H\200.SI\300\357QI\200\t\200I\200\213\205I\000\263[I@\314\362I\200<\'I\000Y\003H\000\001\345H\000@\034H\3009\203I\000G\206I\300\337*I\200\314\017I0\034\364J\000\255\362I\3000\303I\340 tI\300\257\231I\200FOI\300u\022I\340\003\246H\200FOI\000s9H\000|\022I\000\"\241H\000\0337H\200\313VH\000\312\205H\000w\373H\200\000\261I\000\263[I\200\275PI\320\342*I\200\030-I\000G\006I\240b\317I\300\355\327I\000\"\241H\340#\364Hp\344*J\200\313\244I\300\252\205I\340\034\000J\3004\354I\200\276;I\000\261\236J\000\323\302H\300P\224I\340\3600J\200\2216I\000\356|H\200C\303H\000:\235I\340\213\271H\000\214\271H\3009\034I\300\004\020I\200\226\230I\000\205\317I\300\221\236I\200y\010I\000\346\252H\000-\264H`\376\315J\000\243\312H\340O\303H\340\201OI\300\026qJ\200a\276H\000\346\252H\300a&I\000`\352G\000\366\321H\000+^I\000T\354H\000eeH\000\317}H\000\326\203H\000n(I\340x\022I\000\276\007H\200{[I\300\002\246H\200\003YI\000\034\242I\200\334\266I\200\253\210H\300A\325J\200\322\016I\000\301\305H\000\261\036I\000\330\326G\200\313\326H\00092I\200\255)I\2003\034H\300\'\206I\000\277VH\000^\027I\300n\217I\000\341\226H\000$\364G\200M9I\200d4I\300\350\316I@\211\025J\200\027\364H`H\030J\200%\026I\000\326\203G\200y\210H\300\024\236I\000n>H\300\004\364I\300\263\302I\200\247*I\200\237UI\200\255)I\200\016\205I\200\305\245H\300\010\245H`H\230J\000\247\363H\000\317\231H\200\027BI\000\370\'I\200a\014I@\254\244I\200\237UI\000\341\226H\300\243\264H\000\261\036J\000W\255H\200\037\001I\300\301/I\200m\nI\200,\000I\200\331\252H`\243\264H\000\261\236H\200\247*I\000\323\302H\200)qH\000\330\326H\300\312\354H\000\0179I\340k[J\000P\303H@\305\213I\000-\264H\200\324aI\000\n%H\000\234`J0\227\241J\300\0247I\200\021CI\000\033\267H\000\202\221H\360\276\252J\200\237UJ\200tqI\000G\006J`\224\265J\000^\227H\000\326\203H\200\353rI\000\261\036I`@\021I\200\001\234H\200C\021I\000$tJ\000\330\326H\000\305\356H\200\021CI\000\353%H\200\314\017I\000\375\273H@\026\275I\000\335jJ\300\232\333I\000@\234I\300\337\221I\000\335QH\200\003YI\000\017\271H@w\030J\000g\324H\300\337\252H\200\305%I\200zpI\200\246?I\300\330@I\200=\022I\340\353gI\200r\036I\300\373\266I\000\312\351H@@6J\300\243\233I\000\006\371H\000\314XI\200FOI\000h\277I\000`\352G\200\253\210H`m>I\000\310\257H\200\352\nI\000\341\026I\000\"!I\300I\252I\000\314XI\340\266[I\200\021CI\30022I\000\377\221H\200\037\027I\000\272\333H\000W\255H\200=\022I\200\264\023I\000TlI\300\252\236I\000$tH\000\222\270H\000u\022I\000*sH\200\356\263H\000\346\252H\200\215\215H\000c\022H\200\313\244I\360\231\rI\000\326\203I\000\247\363H\200,\200I\000PCI\200\227\003I\200\0001I\200\341\374H\000\234\340H\000\303\233H\000G\006I\000E0J\200=\022I\200x\035J\200r\036I\000n>H\000\r\343H\200\030-I\000\205OI\300\263\302I@\307\336I\000\330VH\000\261\236H`m\276H\000\366QI\2005\357H _\217J\000BoH\300\341\344I\200\353rI\200\322\016I\200\264\023I\2005\357H\200\247*I\000\326\203H\340%\013I@\3410J\000\341\226H\000\252\036I\200\237UI\200\324aI\300\265]I\200\377wH\000\310\257H\200.SI\000_\202I\200\0001I\340\034\200J\000W\255H\200\007\033I\000\350\321H\340\353gI\300\207\363I\000$\364G\300\353\217I\000\013\220H\200tqI@\211\025J\200\201ZI\000_\202H\200,\200I\300@\006I\300\263\333H\300\252\205I\000\323\302H\240\326\304J\200\000\261I\000\337\300H@\247\220I\000\326\003I\200\247\252I\200,\000J\360\345*I\200\3721I\000\2741I\200\237UJ\200\324aJ\200\367\245H\200\247\252I\000w\373H\000\346\252H\000\037\264H\300\252\205I\300 \234I\000\272[H\000R\031I\200\325\314H@O\362I\200\255)I\000|\022I\000w\373H\2005\275I\300\232\333I\000\346\252I\000Y\203H\200q3I\200\345\363IpL\211J\000\024MH\000\330VI\000\200;I\300\3736J\300\337\252H\200\226\030I\200j\373H\000\301EI\000^\027I\000\205\317H\200\004DI\200\016\005I\000G\206Ip:\214J\300I\252I\200\311\203H\000\232\rH\200\220\231I@\220\030I\200M9I\200\016\005I\000\227\314H\200r\036I\200\260gI\370#\364I\000)\213H\340\370\005J\000u\250H\200\027\364H\000\033\267H\000^\027H\000\035\215H\300\373\266I\000\350gI\300\221\236I\200\333\375H\000\247sI\360#tI\200\313$I\340ZIJ\200=\022I\200\226\030J\300B\300I@\265\341I\360OCI\200\235\002I\000\335QH\000\334\177I\200[\rI\000\312\005I\300OCH\000\357\347H\300\211bI\200\tnI\000\245\240H\200F\317I\000\350\375H\300u\222H\220\256\216I\200\345\363H\340b\036J\000G\006I\200\027BI\000\332,H\000\247\363H\300\'\206I\000\312\005I@\363-J\200\226\230I\200\025\241H\340\3146J\200\000\261I\000b\300H\200\352\nI\200[\rI\000\220bI\200\352\nI\200\226\030I\200\226\030I\000\361\275H\300E\201I\000u\250H\300\337\221I\000\265\307H`\013\267J\000\356|H\000\2524H\000[\326H~\226\230J\000=\333H\200\010\006I\200=\022I\000\312\005I\000\326\203H\000\342\376I\000\323\302H\000\005\221I\200k4I\000\201\277H\000\004&I\300\0247I\000\207\245H\000g\324H\000\000\310H\000\343\351H\360\235\325I\200\336sI\200\217.I\300\337\252H\200\027BI\000\323\302H\000\375\273H\000\223\243H@\211\025J\200{[I\000\353%H\000\261\036I\000G\006I\340\240gJ\000-4I\200\253\210H\300\221\236I\200\0001I\200\306\302H\300`TI\200\021CI\000fiH\300\'\206I\000`jI\200{[I\000\377\221H\340\3146J\000e\001I\340\255\036I\000\303\233H\300\223\rI\000G\006I \263\201K\200,\000I\200(TI\340x\022I@\350\232I\200\334\266I\200=\022I\000\346\252H\200r\036I\000\247sI\200]`I\200\342gI\3002\031I\200\021CI\300~\266I\200\226\030I\200=\022I`\355\211I\000A\207H\300\330\247I\3009\003J\000\245\240H\200\235\264H\000\024MH\300\205\271H\000\235\313H\000A\007I\340\001CJ\200a\014I\000\013\220I\200\276;I\200\313\244I\200\247*I\000\247\363H\200k\264H\200a\014I@\037\372I\000y\321H\000\232\215H\200FOI\000PCI\000\330\326H\200q\345H\340a\001I\200\266\346I\000B\357H`\301\257H\000)\200I@\266LI\200a\014I\200mqI\000fiH\000\346\252I\340\3146J\000~eH\000@\234H\200\231VI\340\217\325J\200\3346I\200C\021I\000o\251I\000\006\315H\200\202EI\300\257\031I\200x\235I\340\3146J\000W\255H\200CCI\300\252\205I\200\3346I\200\010\006I\200\226\230I\300\263\333H\200\360\tI\200\276%I\360(\303J@\341\260I\300\035[I\000~\345H\000G\206I\300\263\333H\200zpI\200{[I\000u\250H\000\037\340H@\363\255I\200tqI\000\272\333H\200\010\006I\000$\364H \263\201J\200\001\034I\000\013\220H\200\021CI\200\3425I\000\346*I\000\0337I@\211\025J\000|\022J\200\001\034I\000\216\017I\200\367%H\300~\266I`\013\267J\000:\235I\000\013\220I\200T#I\300\373\266I\360\236\203I\300\252\036I\200\010\006I`\001PI\200\237\325I\200C\303H\200\3346I\000\247sI\300\035\333I\300\004\364I\000=\333H\200FOI\360\363\266J\200{[I\200\215\215H\200[\rI\000\370\'I\000\017\271H\000o\251I\000i*I\000#>I\000G\006I\200]\340H\000*\363H\000G\006J\000\321\354H\00092I\200\007\315H\200C\206I\000\221\315H\000\276\007H\000\017\271H\300\263\333H\300\337\221I`@CJ\000B\357H\200{[I\000!\266H\000\2056H\200\3346I\200\237\325I\000\024\315H\200\226\230I\000G\206I\200\3721I\0009\262H\300)\316I`\177\242H\200\247*I\220\371\216J\000\366QH\300\252\036I\340\r\005I\200\322\016I\300\\\222I\200k\264H\370\356\347I\200o\222H\000W\255H\000w\373H\000`jH j\332H@Y\235I@\303\265I\200\333\375H\200\273/H\200\333}H\200}\343H\0003\263H\000\013tH@Y\235I\200\324aI@\276\241I\000\330VI\200\251\375H\000\"!H\2005=I`gII\300I\252I@Y\235I\200\027BI\340x\022I\200a\276H\000`jH\370\204\317I\3009\003J\000\266\375G`\217lI\0006qI\300\024\236I\000\023bI\300\\\222I\000P\303J\200\313$I\000\275\003H\200\nYI\000G\006I\300~\266I\000\301\305H\000-\264H\260\346\263J\200\371FI\200\020XI\260\206%I\200a\276H\200\260gI\0006qI\000\010\317H\300\2059I\000\rcI\000\330\326H\000\252\264H\000\033\267I\300I\303H\000\245\240H\000\361\326H\200=\022I`\252\251I\000\263qI\000G\206I\000\224\216I0-\211J\000\357\347H\000\272\333H@\222\322I\000\234`I\000\260\263H\200\016\267H\200\0001I\200\273\257H\000\305\356H\340x\022I@w\230I\3000\303I\340\273$J`7\006J\000:\235I\200{[I`)\000I\000\272[I\200r\036I\000P\303H\000\343\351H\200\001\034I\000\006yH\300~\266I@\r\200I\200\347\373H@F\265I\200T#I`F\006I\200\351\037I\000\027rH\000\310\257H\000\310/I\200\000\261J\000\247sI\0009\262H\260\2139Ipo\230J\340\206\030J\000\317\231H\200a\014I\300\252\236I\340A\357H\000\346*J\200\353rI\200\324\341I\000\205\317H\200\010\006I\000\365\346H\340\305LJ\340\227*J\0009\262H\000\037`I\200\001\034I\200\227\003I\3009\203I\000G\006J\000\247\363H\000\330\326H\000\250^H\000}\372H\300\330\300H\000\261\036I\200\276;I\300T\326H\340\201OI\000-\264H\000\303\233H\000`\352H\200\021CI\000\361\275H\300\263\333H\000\270\210H\000\214\271H\300\330\'J\200\217.I\200=\222I\000\"\241H\000\004\246H\200\033\240H\300\306\252I\300~OI\200\314\017I\000W-I\300\350\316I\000\326\003I\000\346\252H\000\350\375H\340x\022I\000\346\252I\200\021CI0\023\267J\000@\234H\200\027\302I\000\003\273H\000e\001I\000\346\252I\000\316.H0\343\021I\0009\262H\200\021-I\000y\321H \311\'J\300\221\236I\340\000&Ip\031\267I\200\313$I\300\350\316I\000@\234H\300\221\236I\200\240\300H \233\005J\000^\027H`\300\204J\200\211\031I\200\021CI@\026\275I\200**J\200\021CI\000\377\221H\000\375;I\000BoH\000\366\321H\200\007\315H\200\003YI\000\347\225I\000\314XI\000\006cI\000\320\204I\000\256]H\200x\317H\340#\364H\340\351\024I\000\026#I\200,\000I\200\3346I\000\004\246H\000\323BI\200\027\364H\200/>I\340\0277I\0009\262H\340\217UJ\000\241[H@\r\200I\300\225\340H\200\276;I\200\334\266I\200r\036I\000F\233H\000\313TH\000\006cI\340\3146J\200\0001I\300\341\375H\300\024\236I\200\243\263H\000\272[H\000=\333H\2005\357H\200\260gI\200\255)I\200\211/I\300\321\326H\300\'\206I\000\033\267H\200FOI\340\036!I\200\246?I\200\227\003I\000\341\226H\200a\014I\200{[I\200\0001I@)%I\000\004\246I\000\205\317H\000c\022H@\265\341I\200jIIp\257\236I\300\207\363I\000\375;I\000\346\334H\200\t\356H\200\365\317H\000\223#J\000G\206H@;\242I\200,\200I\000\247\363H\000\261\036I\200\360\tI\200FOI@w\230I\300Y\352H\200\313$I\000w{I\000\215$I\000\253QI`\241\036J\3004\010I\200,\000I\000I\331H\000\310\257H\200\304:I\200\313\244I\000:\235I\000\261\036I\200\300\252I\200\260gI\000G\206H\200\007\315H\000=BH\200,\200I@T\211I\000\225\366H *\003J\000n>I\000\247\363H\200\003oI\200\246?I\300>\214I\200\334\266I\200\213\005J\200C\303H\000^\027J\340\362QI`l\022J\000\265GI`QUJ@-\303I\200\300\021J\200zpI\000\337\300H\000/\212H\200\247*Ix3\006K`\267\210H\300\330\247J\300w\314I\300n\217I\200\313$I\000\013\020H\000~eH\000\326\003I\000b@I\200\313$I\200\345sI\340\0277I\000\0337J\240D\211I\000\337\300I\000\326\203H\200\3721I\200\345sI\200\345\363I\000\243\312H\200\222lI\300\252\036I@\r\200I\300\\\222I\000\323\302H\000B\357H\000G\006I\000\314XI0b\225J\000\017\271H@\r\200I\000\203`H\000\213\316H\0202\220K\200\363GI\200{[I\000\317\231H\200\032\003J\000\017\271H\200\007\033I\000\230\267H\200\313\244I\300\205\271H\000\001\345H\200r\036I\000\013tH\300I\303H\000\266\200G\000|\222I\200\007\233I\360F\006I\200\3346I\340a\001I\300s\243I\000#\014I\000\001\345H\2008\373H\000\243\312H\340\027\267I\000\366QI\200\211\257H\000\205\317H\200r\036I\200FOI\000\375\273H\200[\rI\200Z\"I\200\237UJ\300\\\222I@\276!J\200\302\231H\200\334\266I\200\244\236H\200\021\303H\340\264\010I\000\272\333H\300\251\024I\300u\022I\200LNI\300~\266I\200C\021IP!\230J\200\021CI\200\313$I\000|\022I\000\243JI\000\323\302H\000\024\315H\000k\375H\000G\206H\300\306\257H\200k\264H\000\2524H\000\006yH\000-\264H\000\204dH@M8I\300\306*I\000\272\257H\200,\200I\200S\352H\0004\036I\000<\360H\000\2228H\000)\013I\000\272\333H\200jII\200\247*I\000e\201H@T\tK\000\005\221H\200J\255H\000|\022J\000GjH`\2620J\200x\317H\3408\262H\000\2366I\2005=I\300B\300I\200FOI\000\361\275H\000VBH\300\232\333I\340Q\014J\300~\266I\000\326\203H\000\377\221H\000\232\215H\200=\022I\000\330\326H\300\337\221I\300\252\205I\200\021CI@\341\260I\000\301EI\200\021CI\300\263\302I\000\321\354H\2005=I\000\033\267I\340\034\301H\200?OI\000\323\302H\200\304\272H\200\247*I\300\252\205I\200\016\005I\000\272\333H\200\353rI`\013\267J\0009\262H\300\341\344IP\n\007K\300\330\247J\000\310\257H\200o\222H\000\336\325H\200\255)I\340\266[I`\326*J\200\177\271H\340\0277I\200\247*I\000\"\241H\300\337\252H\200j\373H\200 \177I\000\263\361H\000\261\036J\200a\214I\300\306\252I\200\305%I\000\311\232H\000\352SI\000\017\271H\000\024\315H0t\222J\200\253\010H\000\037\340H\200]`I@\222RJ\000\265\307H\200\226\030I\000#>I\000VBH\200\345sI\200\201ZI\000\265\307H\300\314\251I\000P\303I\000E0J\340\217UJ\200=\022I\200\000\261I@B\214I\200\247\252H\360\271[I\240\326\304J\000\205OI\000R\344G\200\273\257H\000\246\013J\300\024\236I\340\036!I :*J\000|\222H\200\362\\I\200\336sI\000\272\333H\000\013tH\000|\222G\000\303\233H\000\377\221H\200\255)I`\376MJ\200\247*I\000\355\224H\340\206\230I\300eOJ\360v\235I\200\331*H\000\330\326H\000G\006I\200,\262H\200\360\tI\0002\310H\200\tnI\300\267\010H\000u\250H\000\033\267H\200&\001I\000\323\302H@\214\243H\200\371\370H@k\345H@w\230I\000+\336H\200{\333I\0009\262H\200\027BI\000`\352H\340C\006I\000n\222H\300\341\344I\000\205\317H\200\226\230I\000[\326H\000\346\252H\000\024\315H\000)\013I\000\326\003I\000^\027H\000\272[H\000\300ZI\200\242}I\200\010\206I\370#\364I\000~eH\200\220\031I@K\311I\200{[I\200\247*I\200,\000I@\210\252I\000e\201H@\222\322I\360{\022I\000\247\363H\000\263\361H\000g\324H\200{[I\200\246\361H\200,\200I\0002HH\300\035\364H\200\305%I\200r\036I\000\261\036I \274>K\000\254\333H\000\344\324G\200\352\nI@T\211J\200\016\005I\300\207\363I\000|\222H\000\014\370H\000\261\036I\340\r\005I\000\"!I\000\2149H\300\'\206I\2006\250I\000&JI\000\272[I@]\306I\000\326\203H\300\024\236I\000`jH\200\237UI\200x\235H\300T\275H\000}\341J\3000\303I\000\245\240H\200\345sI\000\320\204I\300a\022H\200/>I\000K\257H0%\026I\200\nCI\340\325sJ\000\252\264H\000\2741H\300\263\302I\360\260\036I\000fiH\200>\372J\34052I\200F9I\000u\250H\200\237\325I\300\341dJ\200\247*I\300\004\020I\300\337\252H\300\'\006I\200=\022I\200\003YI\200\255\333H\000\032\314H\200FOI\200\177\007I\300\330\'I\200\276;I\200=\222I\200y\010I\000&JH\200\247*I\200\\uI\000\303\033I\000\037`I\360\276\252J\300\207\363I\000\301EI\000\357\347H\200\321\rI\0007CH\200=\022I\340\325sJ`H\030J\300\\\222I\000\220\342H\000\234yG\200o\222H\000\017\271H\200\266\333I\2006(I`@CJ\300\252\205I@\222\322I\000\366QI\300\357\321H\3001\310H\000G\206I\300\373\266I\200\016\005I\300~\266I`uOJ\340y\257J\000F\033H\300^\345I\000\247\363H\000\224\016H\000\326\003H@&\000I\000\006yH\370\030\000K\000|\222H\200\255\333H\000\001\345H\340\227*J@\3720I\000i*I\000\247\363H\200\360\tI\000\202\021H\000?\261H\200\034\213H\200\253\210H\200\247*I\000\343\351H@\345\331I\000\245\240H\000\243\312H`\307\257H\200.SI\200Z\"I\000~\345H\200\351\321H\200\021CI\000\357gI@\332_I\000\016\316I\200Q\342H\200C\221I\000\020$J\200\027\364H\000Q\256H\0006qI\200j\311I\200\227\003I\340-\022J\200\020XI@\321\211I\000\205\317I@\357\204I\000\352SI\300\337\221I\000\317}H\200=\022I\300\350gI\000\001\345H\370\260\236I\200\376\217H`\2620J\000\205\317H\300e\317I\000|\222I\000\0337I\000)\213H\000\243\312H\200o\222H\200<\'I`I\303H\000\2214H\200C\303H\200{[I\300\024\236I\200<\'I\200,\200I\000$tH\000\037\340H\200,\000I\200{\333H\000\032\314H\000\350\375G\000\346\252H\200\324aIp\005\200J\000=[I\000\377\221H\0002\310H\000\202\221H\000G\206I`\2245K\000\323BI\200\021CI\200\027BI\200%\026I\200\3721I\200\201ZI\200\0001I\000\270\010I\000\242_H\000e\201H\200Q\227H\340~\007I\200\324\341I\000\261\036I\200\316LI\260b\311J\000@\234H\000\rcI\000K/H\00022I\000\361\275H\200mqI\000u(H\200,\200I\000\263qI\000\017\271H@\'OI\000PCJ\300\317\347I\0006qI\000\272\333H\200\247*I\000\272\333H\300s\230I\200\273\257H\240t\201I`\241\036J\3009\003J\200C\021I\200y\010I`\365\220J\000\247sI\300\'\206I\000\370\247H\200{[I\000\242_H\200r\036I\300u\222H@\307\336I\200\237UI\000\310/I\000e\201H\000\236\266H\000\326\003I\200j\311I\200\237UI\000\\\225H\200\353rI\000\270\010G\360\345*I\300 \221I\000\346\252H\000\263\330H\000\330VH\000s9H\200=\222H\200a\276H\000:\235I\000R\231H\000o\251I\200\273\257H\000\361\275H\340-\022J\200\212\232I\340\251\264H\200\021CI\300\026\361I\000\355xH\000\232\215H\300\306\252I\000TlH\200\3346I\200\226\230I\24006J\000\035\215H\0004\036I\200\255)I\200\247*I\200\237\325J\000|\022I\340LCI\300\252\205I\2006(I\000)\213H\300\252\036I\000\205OI\000\207\245H\200\240@I\200<\'I\000\336UI\000\347\225I\000\2228H\200r\036I\200a\276H\340O\303H\340\3146J\000G\206I@B\214I\200<\'I\000\355\224H\000u\250H\000\263\361I\200\273\257H\000|\222I\000,II\300^\332I\300\223\346I\000G\006I\200\353rI\340\3146J\200\247*I\200.SI\200\276;I\200\322\216J\200zpI\200\217\340H\200\002\007I\000\355\224H\000<\214I\340-\022J@\021\251I\000\247sI\200r\036I\000ICI\000K\257H\000\323\302H@\026\275I\000\317\231I\200{[I\000\366QH\000\243\312H\000\"!I\000\361\221Hp\256\024I@F\203H\000\"\241H\000Z\353H\200\021\303I\000\205\317H@\363\255I\000PCJ\200\027BI\200\0001I\000\320\204I\200\3346I\000\227\314H\200y\010I\000BoI\300\'\006I\000\033\267H\200\007\315H\000\205OI\340\306\205I\340\0277Ip\344\252I\200\363GI@\307^J\000\205OI\000;\210H\200\000\343H\000*sH\000\203`H\000\205\317H\200(TI\340b\036J\000\232\rH\200\000\261I\000^\227H\300\257\031I\200\0001I\200\226\030I\200a\214I\200a\214I\300\004\220H\3009\203I\000\204NI\000\004\246H\000\245\240H\200\tnI\200[\277H\000\205\317H\200!\352H\000W\255H\200\235\002I0-\211J\000\232\361H\000\245 I\000b@I\300\372\313I\300\207\363I\200\235\264H\200{[I\200$]I\000P\252H\200\226\030I\200r\236I\000n>H\200{[I\200\016\005I\000\033\267H\000\r\343H\000y\321H`\034IJ\200\247*I\200\345sI\000\310\257H\200\226\230I`7\006J\200M\271H\000\"\241H@\276!J\000\321\354H\200]JI\000\270\010H\300~\266I\000\234`J\200\237UI\200E\344H\200/>I\000\301\305H\340\260\236H\000\270\010I\000\033\267H\2005=I\000\323BI\000\357\347H\2003\234H@\323*I\200\331\252H\000\207\245H\000R\231H\000BoH\000\310/I\300\004\364I\000\031HH\000\033\267H\200\322\016I\200r\036I\200a\014I\300\2059I\200\3346I\000_\202I\200%\026I\000\314\330G\200\304:I\200FOI\000\035\215H\200%\026I\000[\326H\200\334\266I\000\337*I\200]`I\200\331\252H\000ICI\300@\006I\000\377\221H\200\324aJ\000\037\340H`*\035J\200o\222H\000\372\004J\000v8H\200\344\244H\200\226\230J\200{[I\200=\022I\000\261\036I\000\323\302H\200&\001I\340\001CJ\200\021CI\300^\001I\0002HH\300+\257I\000\266\375G\200,\200I\270\223\220K\200<\'I\300\232\333I\200\021CI\240\002\224J \233\320I@\314\016I\300\033\241H\200\201ZI\2006(I\200\331\252H\000^bH`\243?I\000\200;I\000\330\326G\000\205\317H\000\303\233H`\r\315H\300e\317I\300\024\236I\200\322\016I\200[\215I\200\325LI\000\024MH\000\323\302H\000@\234H\340\342*I\200\214mI\000\263\361H`2\275I\2005=I\200\324aI\300ICI@(\272I\300\337\021I\000rgI`gII\000\320\204I\2003\234H\300\230\210I\200\220\031I\300\035tI\200\240@I\000\023IH\200\255)I@[\014I@\267\267I`7\006J\300\337\221I\200C\021I\000h?G\200\177\271H\000\"!I\200j\311I\200\247*I\200\226\230I\000u(I\200\256\024I\000e\201H\000\200\273H\000\261\036I\200Q\027H\000\323\302H\200\302\231H\000\375\273H\300\'\206I\000I\331I\000\317\231H\000PCI\300\024\236I\000\"\241H\0002\310H@\341\260I\300\221\236I\200\021CI\000\357gI\000P\303I\000\272\333H\200\226\030I\300I\303H\340q(I\200K\343H\000\253QH\000fiH\000$tH\200jII\000u\022I@\331LI@\231\274I\000\324-H\000\356|H\300\232\333I"
      }
    }
  }
}
node {
  name: "linear/linear/bucketize"
  op: "Bucketize"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2508
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/shape"
  input: "linear/linear/strided_slice/stack"
  input: "linear/linear/strided_slice/stack_1"
  input: "linear/linear/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range"
  op: "Range"
  input: "linear/linear/range/start"
  input: "linear/linear/strided_slice"
  input: "linear/linear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/shape"
  op: "Pack"
  input: "linear/linear/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros"
  op: "Fill"
  input: "linear/linear/zeros/shape"
  input: "linear/linear/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape"
  op: "Reshape"
  input: "linear/linear/bucketize"
  input: "linear/linear/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack"
  op: "Pack"
  input: "linear/linear/range"
  input: "linear/linear/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose/Rank"
  op: "Rank"
  input: "linear/linear/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub"
  op: "Sub"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range"
  op: "Range"
  input: "linear/linear/transpose/Range/start"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub_1"
  op: "Sub"
  input: "linear/linear/transpose/sub"
  input: "linear/linear/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose"
  op: "Transpose"
  input: "linear/linear/stack"
  input: "linear/linear/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64"
  op: "Cast"
  input: "linear/linear/transpose"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/stack_1"
  op: "Pack"
  input: "linear/linear/strided_slice"
  input: "linear/linear/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_1"
  op: "Cast"
  input: "linear/linear/stack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "linear/lotsize_bucketized/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Prod"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Where"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/lotsize_bucketized/weights/part_0/read"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack"
  op: "Pack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack/0"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/ToInt64_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  input: "linear/linear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bucketize_1"
  op: "Bucketize"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2508
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/shape_1"
  input: "linear/linear/strided_slice_1/stack"
  input: "linear/linear/strided_slice_1/stack_1"
  input: "linear/linear/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range_1"
  op: "Range"
  input: "linear/linear/range_1/start"
  input: "linear/linear/strided_slice_1"
  input: "linear/linear/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros_1/shape"
  op: "Pack"
  input: "linear/linear/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros_1"
  op: "Fill"
  input: "linear/linear/zeros_1/shape"
  input: "linear/linear/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1"
  op: "Reshape"
  input: "linear/linear/bucketize_1"
  input: "linear/linear/reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_2"
  op: "Pack"
  input: "linear/linear/range_1"
  input: "linear/linear/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose_1/Rank"
  op: "Rank"
  input: "linear/linear/stack_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub"
  op: "Sub"
  input: "linear/linear/transpose_1/Rank"
  input: "linear/linear/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range"
  op: "Range"
  input: "linear/linear/transpose_1/Range/start"
  input: "linear/linear/transpose_1/Rank"
  input: "linear/linear/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub_1"
  op: "Sub"
  input: "linear/linear/transpose_1/sub"
  input: "linear/linear/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1"
  op: "Transpose"
  input: "linear/linear/stack_2"
  input: "linear/linear/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64_2"
  op: "Cast"
  input: "linear/linear/transpose_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_3/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/stack_3"
  op: "Pack"
  input: "linear/linear/strided_slice_1"
  input: "linear/linear/stack_3/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_3"
  op: "Cast"
  input: "linear/linear/stack_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/size_bucketized/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64_2"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/ToInt64_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  input: "linear/linear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims"
  op: "ExpandDims"
  input: "Const_1"
  input: "linear/linear/bathroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/matmul"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_2"
  op: "Reshape"
  input: "linear/linear/bathroom/matmul"
  input: "linear/linear/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims"
  op: "ExpandDims"
  input: "Const"
  input: "linear/linear/bedroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/matmul"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_3"
  op: "Reshape"
  input: "linear/linear/bedroom/matmul"
  input: "linear/linear/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/expand_dims"
  op: "ExpandDims"
  input: "Const_3"
  input: "linear/linear/school_ratingE/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingE/weight/part_0"
  input: "linear/school_ratingE/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight"
  op: "Identity"
  input: "linear/school_ratingE/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingE/expand_dims"
  input: "linear/school_ratingE/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_4"
  op: "Reshape"
  input: "linear/linear/school_ratingE/matmul"
  input: "linear/linear/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/expand_dims"
  op: "ExpandDims"
  input: "Const_4"
  input: "linear/linear/school_ratingH/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingH/weight/part_0"
  input: "linear/school_ratingH/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight"
  op: "Identity"
  input: "linear/school_ratingH/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingH/expand_dims"
  input: "linear/school_ratingH/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_5"
  op: "Reshape"
  input: "linear/linear/school_ratingH/matmul"
  input: "linear/linear/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/expand_dims"
  op: "ExpandDims"
  input: "Const_5"
  input: "linear/linear/school_ratingM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingM/weight/part_0"
  input: "linear/school_ratingM/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight"
  op: "Identity"
  input: "linear/school_ratingM/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingM/expand_dims"
  input: "linear/school_ratingM/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_6"
  op: "Reshape"
  input: "linear/linear/school_ratingM/matmul"
  input: "linear/linear/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/expand_dims"
  op: "ExpandDims"
  input: "Const_6"
  input: "linear/linear/zestimate/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/Assign"
  op: "Assign"
  input: "linear/zestimate/weight/part_0"
  input: "linear/zestimate/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/read"
  op: "Identity"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/zestimate/weight"
  op: "Identity"
  input: "linear/zestimate/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/matmul"
  op: "MatMul"
  input: "linear/linear/zestimate/expand_dims"
  input: "linear/zestimate/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_7"
  op: "Reshape"
  input: "linear/linear/zestimate/matmul"
  input: "linear/linear/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10000
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/geohash/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/Assign"
  op: "Assign"
  input: "linear/geohash/weights/part_0"
  input: "linear/geohash/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/read"
  op: "Identity"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice"
  op: "Slice"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/Slice/begin"
  input: "linear/linear/geohash/geohash_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Prod"
  op: "Prod"
  input: "linear/linear/geohash/geohash_weights/Slice"
  input: "linear/linear/geohash/geohash_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather"
  op: "Gather"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/geohash/geohash_weights/Prod"
  input: "linear/linear/geohash/geohash_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor/indices"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  input: "linear/linear/geohash/geohash_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Where"
  op: "Where"
  input: "linear/linear/geohash/geohash_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/Where"
  input: "linear/linear/geohash/geohash_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/geohash/geohash_weights/SparseReshape"
  input: "linear/linear/geohash/geohash_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  input: "linear/linear/geohash/geohash_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Identity"
  op: "Identity"
  input: "linear/linear/geohash/geohash_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Identity"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Gather_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Identity"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Gather_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Gather_2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/geohash/geohash_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/geohash/geohash_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/geohash/weights/part_0/read"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/geohash/geohash_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Shape"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/stack"
  op: "Pack"
  input: "linear/linear/geohash/geohash_weights/stack/0"
  input: "linear/linear/geohash/geohash_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Tile"
  op: "Tile"
  input: "linear/linear/geohash/geohash_weights/Reshape_1"
  input: "linear/linear/geohash/geohash_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/linear/geohash/geohash_weights/zeros_like"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Cast"
  op: "Cast"
  input: "SparseTensor/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/geohash/geohash_weights/Cast"
  input: "linear/linear/geohash/geohash_weights/Slice_1/begin"
  input: "linear/linear/geohash/geohash_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/geohash/geohash_weights/Shape_1"
  input: "linear/linear/geohash/geohash_weights/Slice_2/begin"
  input: "linear/linear/geohash/geohash_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Slice_1"
  input: "linear/linear/geohash/geohash_weights/Slice_2"
  input: "linear/linear/geohash/geohash_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights"
  input: "linear/linear/geohash/geohash_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_8"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/Reshape_2"
  input: "linear/linear/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup_1"
  op: "StringToHashBucketFast"
  input: "SparseTensor_1/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "linear/property_type/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice"
  op: "Slice"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Slice/begin"
  input: "linear/linear/property_type/property_type_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Prod"
  op: "Prod"
  input: "linear/linear/property_type/property_type_weights/Slice"
  input: "linear/linear/property_type/property_type_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather"
  op: "Gather"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/Prod"
  input: "linear/linear/property_type/property_type_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor_1/indices"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Where"
  op: "Where"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Where"
  input: "linear/linear/property_type/property_type_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Gather_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Shape"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/stack/0"
  input: "linear/linear/property_type/property_type_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Tile"
  op: "Tile"
  input: "linear/linear/property_type/property_type_weights/Reshape_1"
  input: "linear/linear/property_type/property_type_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast"
  op: "Cast"
  input: "SparseTensor_1/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Cast"
  input: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Shape_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Slice_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2"
  input: "linear/linear/property_type/property_type_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights"
  input: "linear/linear/property_type/property_type_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_9"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  input: "linear/linear/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/Reshape"
  input: "linear/linear/Reshape_1"
  input: "linear/linear/Reshape_2"
  input: "linear/linear/Reshape_3"
  input: "linear/linear/Reshape_4"
  input: "linear/linear/Reshape_5"
  input: "linear/linear/Reshape_6"
  input: "linear/linear/Reshape_7"
  input: "linear/linear/Reshape_8"
  input: "linear/linear/Reshape_9"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/predictions/scores"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/predictions/Identity"
  op: "Identity"
  input: "linear/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "Const_8"
  input: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/sub"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "linear/regression_head/mean_squared_loss/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss"
  op: "Square"
  input: "linear/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "linear/regression_head/mean_squared_loss"
  input: "linear/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "linear/regression_head/ScalarSummary"
  op: "ScalarSummary"
  input: "linear/regression_head/ScalarSummary/tags"
  input: "linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/Shape"
  input: "linear/regression_head/strided_slice/stack"
  input: "linear/regression_head/strided_slice/stack_1"
  input: "linear/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Fill"
  op: "Fill"
  input: "linear/regression_head/train_op/gradients/Shape"
  input: "linear/regression_head/train_op/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/Fill"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod"
  op: "Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod_1"
  op: "Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum"
  op: "Maximum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/floordiv"
  op: "FloorDiv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Cast"
  op: "Cast"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul/x"
  input: "linear/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Neg"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  input: "linear/school_ratingE/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingE/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  input: "linear/school_ratingH/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingH/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  input: "linear/school_ratingM/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingM/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  input: "linear/zestimate/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/zestimate/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select_1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\'\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bathroom/weight/part_0"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bedroom/weight/part_0"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingE/weight/part_0"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingH/weight/part_0"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingM/weight/part_0"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/zestimate/weight/part_0"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/geohash/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/property_type/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign_1"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/Assign"
  input: "^linear/regression_head/train_op/Adam/Assign_1"
}
node {
  name: "linear/regression_head/train_op/Adam/value"
  op: "Const"
  input: "^linear/regression_head/train_op/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "linear/regression_head/train_op/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/ToFloat_1"
  op: "Cast"
  input: "linear/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "linear/regression_head/mean_squared_loss/loss"
  input: "linear/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/ToFloat_1"
  input: "^linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/count/read"
  input: "linear/regression_head/metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/total/read"
  input: "linear/regression_head/metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/value"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater"
  input: "linear/regression_head/metrics/mean/truediv"
  input: "linear/regression_head/metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  input: "linear/regression_head/metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/AssignAdd"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/update_op"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater_1"
  input: "linear/regression_head/metrics/mean/truediv_1"
  input: "linear/regression_head/metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/lotsize_bucketized/weights/part_0/Assign"
  input: "^linear/size_bucketized/weights/part_0/Assign"
  input: "^linear/bathroom/weight/part_0/Assign"
  input: "^linear/bedroom/weight/part_0/Assign"
  input: "^linear/school_ratingE/weight/part_0/Assign"
  input: "^linear/school_ratingH/weight/part_0/Assign"
  input: "^linear/school_ratingM/weight/part_0/Assign"
  input: "^linear/zestimate/weight/part_0/Assign"
  input: "^linear/geohash/weights/part_0/Assign"
  input: "^linear/property_type/weights/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^linear/regression_head/train_op/beta1_power/Assign"
  input: "^linear/regression_head/train_op/beta2_power/Assign"
  input: "^linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/zestimate/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/geohash/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/geohash/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  attr {
    key: "N"
    value {
      i: 38
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 38
          }
        }
        string_val: "global_step"
        string_val: "linear/lotsize_bucketized/weights/part_0"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/school_ratingE/weight/part_0"
        string_val: "linear/school_ratingH/weight/part_0"
        string_val: "linear/school_ratingM/weight/part_0"
        string_val: "linear/zestimate/weight/part_0"
        string_val: "linear/geohash/weights/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
        string_val: "linear/regression_head/metrics/mean/total"
        string_val: "linear/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "global_step"
        string_val: "linear/lotsize_bucketized/weights/part_0"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/school_ratingE/weight/part_0"
        string_val: "linear/school_ratingH/weight/part_0"
        string_val: "linear/school_ratingM/weight/part_0"
        string_val: "linear/zestimate/weight/part_0"
        string_val: "linear/geohash/weights/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^linear/regression_head/metrics/mean/total/Assign"
  input: "^linear/regression_head/metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "linear/regression_head/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_86085364c1e847c1a41f66055e1dcb57/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "global_step"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
        string_val: "linear/geohash/weights"
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam"
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam_1"
        string_val: "linear/lotsize_bucketized/weights"
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/school_ratingE/weight"
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam"
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam_1"
        string_val: "linear/school_ratingH/weight"
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam"
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam_1"
        string_val: "linear/school_ratingM/weight"
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam"
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam_1"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/zestimate/weight"
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam"
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: ""
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "linear/bathroom/weight/part_0/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  input: "linear/bedroom/weight/part_0/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  input: "linear/geohash/weights/part_0/read"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  input: "linear/lotsize_bucketized/weights/part_0/read"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/school_ratingE/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/read"
  input: "linear/school_ratingH/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/read"
  input: "linear/school_ratingM/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/read"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/zestimate/weight/part_0/read"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/read"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/geohash/weights/part_0"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/regression_head/train_op/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/regression_head/train_op/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear/school_ratingE/weight/part_0"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "linear/school_ratingH/weight/part_0"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "linear/school_ratingM/weight/part_0"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "linear/zestimate/weight/part_0"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
